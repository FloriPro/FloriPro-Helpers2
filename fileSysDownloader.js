var overwriteNotRedownload=true,usedFileSysIds=[],useId=0,FileSystemTable,fastFileLookup={};async function loader(){if(null==localStorage.getItem("fileSystemTable")||overwriteNotRedownload){var e=await fetch("filesys.json"),o=JSON.parse(await e.text());FileSystemTable=load(o,"c"),localStorage.setItem("fileSystemTable",JSON.stringify(FileSystemTable))}else FileSystemTable=JSON.parse(localStorage.getItem("fileSystemTable")),loadFastLookup(FileSystemTable,"c");for(var t of localStorage.getItem(FileSystemTable.files["boot.dat"]).split("\r\n"))null==localStorage.getItem(fastFileLookup[t])&&console.error("file not found: "+t),await eval(localStorage.getItem(fastFileLookup[t]))}function loadFastLookup(e,o){for(x of Object.keys(e.files))fastFileLookup[o+"/"+x]=e.files[x];for(x of Object.keys(e.folder))loadFastLookup(e.folder[x],o+"/"+x)}function load(e,o){var t={},l=[],a=[];for(var s of Object.keys(e))s.includes(".")?a.push(s):l.push(s);for(var s of(t.folder={},t.files={},l))t.folder[s]=load(e[s],o+"/"+s);for(var s of a)fastFileLookup[o+"/"+s]=useId,t.files[s]=useId,localStorage.setItem(useId,b64_to_utf8(e[s])),usedFileSysIds.push(useId),useId++;return t}function b64_to_utf8(e){try{return e=e.replace(/\s/g,""),decodeURIComponent(escape(window.atob(e)))}catch{return window.atob(e)}}loader();
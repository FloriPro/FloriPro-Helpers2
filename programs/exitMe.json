{"gui": {"bottomControll": {"core.js": "bmV3IChjbGFzcyB7DQogICAgZ2V0RWxlbWVudHMoZ3VpKSB7DQogICAgICAgIHJldHVybiBbDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgdHlwZTogInNsaWRlciIsDQogICAgICAgICAgICAgICAgZ2V0OiB0aGlzLmdldFpvb20uYmluZCh0aGlzKSwNCiAgICAgICAgICAgICAgICBjaGFuZ2U6IHRoaXMuc2V0Wm9vbS5iaW5kKHRoaXMpLA0KICAgICAgICAgICAgICAgIG5hbWU6ICJab29tIiwNCiAgICAgICAgICAgICAgICBtaW46IDAuMSwNCiAgICAgICAgICAgICAgICBtYXg6IDMsDQogICAgICAgICAgICB9DQogICAgICAgIF0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIGdldFpvb20oZWRpdG9yKSB7DQogICAgICAgIHJldHVybiBlZGl0b3Iuem9vbTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIHNldFpvb20oZWRpdG9yLCB2YWx1ZSkgew0KICAgICAgICBlZGl0b3Iuem9vbSA9IHZhbHVlOw0KICAgICAgICBlZGl0b3IuYXBwbHlab29tKCk7DQogICAgfQ0KfSkoKTs="}, "bottomControll.js": "Y2xhc3MgZXhpdE1lX2d1aV9ib3R0b21Db250cm9sbCBleHRlbmRzIFN5c3RlbS5wcm9ncmFtLmRlZmF1bHQgew0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7W0h0bWxXaW5kb3csIGV4aXRNZV9ndWldfSBwYXJhbTAgDQogICAgICovDQogICAgYXN5bmMgaW5pdChbd2luZG93LCBndWldKSB7DQogICAgICAgIHRoaXMud2luZG93ID0gd2luZG93Ow0KICAgICAgICB0aGlzLmd1aSA9IGd1aTsNCiAgICAgICAgdGhpcy5wcm9ncmFtcyA9IFtdOw0KDQogICAgICAgIHRoaXMuYmFyID0gYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQoImJvdHRvbUNvbnRyb2xsIik7DQogICAgICAgIHRoaXMubG9hZEJhcigpOw0KDQogICAgICAgIHRoaXMuc2V0SW50ZXJ2YWwodGhpcy51cGRhdGVJbmZvcy5iaW5kKHRoaXMpLCA1MDApOw0KICAgIH0NCg0KICAgIGFzeW5jIGxvYWRCYXIoKSB7DQogICAgICAgIHRoaXMuYmFyLmlubmVySFRNTCA9ICIiOw0KDQogICAgICAgIHZhciBpID0gMDsNCiAgICAgICAgdmFyIHNjcmlwdHMgPSBhd2FpdCBTeXN0ZW1GaWxlU3lzdGVtLmdldEZpbGVzKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvYm90dG9tQ29udHJvbGwiKTsNCiAgICAgICAgZm9yICh2YXIgeCBvZiBzY3JpcHRzKSB7DQogICAgICAgICAgICB2YXIgcHJvZyA9IGF3YWl0IFN5c3RlbS5ydW4odGhpcy5QQVRILmZvbGRlcigpICsgIi9ib3R0b21Db250cm9sbC8iICsgeCk7DQogICAgICAgICAgICB0aGlzLnByb2dyYW1zLnB1c2gocHJvZyk7DQogICAgICAgICAgICB2YXIgZWxlbWVudHMgPSBhd2FpdCBwcm9nLmdldEVsZW1lbnRzKHRoaXMuZ3VpKTsNCg0KICAgICAgICAgICAgZm9yICh2YXIgZWxlbWVudCBvZiBlbGVtZW50cykgew0KICAgICAgICAgICAgICAgIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsNCiAgICAgICAgICAgICAgICBkaXYuY2xhc3NOYW1lID0gImJvdHRvbUNvbnRyb2xsRWxlbWVudCI7DQoNCiAgICAgICAgICAgICAgICB2YXIgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJsYWJlbCIpOw0KICAgICAgICAgICAgICAgIGxhYmVsLmlubmVySFRNTCA9IGVsZW1lbnQubmFtZTsNCiAgICAgICAgICAgICAgICBkaXYuYXBwZW5kQ2hpbGQobGFiZWwpOw0KDQogICAgICAgICAgICAgICAgdmFyIGlucHV0Ow0KICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LnR5cGUgPT0gInNsaWRlciIpIHsNCiAgICAgICAgICAgICAgICAgICAgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbnB1dCIpOw0KICAgICAgICAgICAgICAgICAgICBpbnB1dC50eXBlID0gInJhbmdlIjsNCiAgICAgICAgICAgICAgICAgICAgaW5wdXQubWluID0gZWxlbWVudC5taW47DQogICAgICAgICAgICAgICAgICAgIGlucHV0Lm1heCA9IGVsZW1lbnQubWF4Ow0KICAgICAgICAgICAgICAgICAgICBpbnB1dC5zdGVwID0gZWxlbWVudC5zdGVwIHx8IDAuMDE7DQogICAgICAgICAgICAgICAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgiYm90dG9tY29udHJvbGxlciIsIGkpDQogICAgICAgICAgICAgICAgICAgIGlucHV0LnZhbHVlID0gYXdhaXQgZWxlbWVudC5nZXQodGhpcy5ndWkpOw0KICAgICAgICAgICAgICAgICAgICBpbnB1dC5vbmlucHV0ID0gYXN5bmMgKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgZWxlbWVudC5jaGFuZ2UodGhpcy5ndWksIGlucHV0LnZhbHVlKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGRpdi5hcHBlbmRDaGlsZChpbnB1dCk7DQogICAgICAgICAgICAgICAgdGhpcy5iYXIuYXBwZW5kQ2hpbGQoZGl2KTsNCiAgICAgICAgICAgICAgICBpKys7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBhc3luYyB1cGRhdGVJbmZvcygpIHsNCiAgICAgICAgdmFyIGkgPSAwOw0KICAgICAgICBmb3IgKHZhciB4IG9mIHRoaXMucHJvZ3JhbXMpIHsNCiAgICAgICAgICAgIHZhciBlbGVtZW50cyA9IGF3YWl0IHguZ2V0RWxlbWVudHModGhpcy5ndWkpOw0KICAgICAgICAgICAgZm9yICh2YXIgZWxlbWVudCBvZiBlbGVtZW50cykgew0KICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LnR5cGUgPT0gInNsaWRlciIpIHsNCiAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gdGhpcy5iYXIucXVlcnlTZWxlY3RvcigiW2JvdHRvbWNvbnRyb2xsZXI9JyIgKyBpICsgIiddIik7DQogICAgICAgICAgICAgICAgICAgIGlucHV0LnZhbHVlID0gYXdhaXQgZWxlbWVudC5nZXQodGhpcy5ndWkpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpKys7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQp9DQpuZXcgZXhpdE1lX2d1aV9ib3R0b21Db250cm9sbCgpOw==", "elementFunctions": {"core.js": ""}, "projectEditor.js": "Y2xhc3MgZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yIGV4dGVuZHMgU3lzdGVtLnByb2dyYW0uZGVmYXVsdCB7DQogICAgLyoqDQogICAgICogDQogICAgICogQHBhcmFtIHtbSHRtbFdpbmRvdywgZXhpdE1lX2d1aV19IHdpbmRvdyANCiAgICAgKi8NCiAgICBhc3luYyBpbml0KFt3aW5kb3csIGd1aV0pIHsNCiAgICAgICAgdGhpcy53aW5kb3cgPSB3aW5kb3c7DQogICAgICAgIHRoaXMuZ2V0UGF0aCA9ICgpID0+IHsNCiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoImZ1bmN0aW9uIG5vdCBzZXQhIikNCiAgICAgICAgfTsNCiAgICAgICAgdGhpcy5nZXRTYXZlRmlsZSA9ICgpID0+IHsNCiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoImZ1bmN0aW9uIG5vdCBzZXQhIikNCiAgICAgICAgfTsNCiAgICAgICAgdGhpcy5zZXRQYWdlID0gKGVsZW1lbnRzKSA9PiB7DQogICAgICAgICAgICBjb25zb2xlLmVycm9yKCJmdW5jdGlvbiBub3Qgc2V0ISIpDQogICAgICAgIH07DQogICAgICAgIHRoaXMuc2VsZWN0ID0gKGVsZW1lbnQpID0+IHsNCiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoImZ1bmN0aW9uIG5vdCBzZXQhIikNCiAgICAgICAgfTsNCg0KICAgICAgICB0aGlzLmFsaWduTGluZXMgPSB7fTsNCiAgICAgICAgdGhpcy5hbGlnbkxpbmVzVmlzaWJsZSA9IGZhbHNlOw0KICAgICAgICB0aGlzLmFsbEFsaWduTGluZXMgPSBhd2FpdCB0aGlzLndpbmRvdy5nZXRIdG1sRWxlbWVudCgiYWxsQWxpZ25MaW5lcyIpOw0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiBAdHlwZSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX3V0aWx9DQogICAgICAgICAqLw0KICAgICAgICB0aGlzLnV0aWwgPSBhd2FpdCBTeXN0ZW0ucnVuKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvdXRpbC9wcm9qZWN0RWRpdG9yVXRpbC5qcyIpOw0KICAgICAgICAvKioNCiAgICAgICAgICogQHR5cGUge2V4aXRNZV9ndWl9DQogICAgICAgICAqLw0KICAgICAgICB0aGlzLmd1aSA9IGd1aTsNCiAgICAgICAgLyoqDQogICAgICAgICAqIEB0eXBlIHt7W2tleTogc3RyaW5nXTpleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3JfZWxlbWVudH19DQogICAgICAgICAqLw0KICAgICAgICB0aGlzLmVsZW1lbnRzID0ge307DQoNCiAgICAgICAgdGhpcy5lbGVtZW50RnVuY3Rpb25zID0ge307DQogICAgICAgIHRoaXMuY29udGV4dE1lbnVBbGwgPSBbXTsNCiAgICAgICAgYXdhaXQgdGhpcy5pbml0RWxlbWVudEZ1bmN0aW9ucygpOw0KDQogICAgICAgIHRoaXMucmVzaXplID0gZmFsc2U7DQogICAgICAgIHRoaXMubW92aW5nID0gZmFsc2U7DQogICAgICAgIHRoaXMuZWRpdGluZyA9IGZhbHNlOw0KDQogICAgICAgIHRoaXMubm93RWRpdGluZyA9IG51bGw7DQogICAgICAgIHRoaXMuY29udGVudENoYW5nZXIgPSBhd2FpdCB0aGlzLndpbmRvdy5nZXRIdG1sRWxlbWVudCgiY29udGVudENoYW5nZXIiKTsNCiAgICAgICAgdGhpcy5jb250ZW50ID0gYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQoInByb2plY3RDb250ZW50Iik7DQogICAgICAgIHRoaXMuYWxpZ25MaW5lSG9yaXpvbnRhbCA9IGF3YWl0IHRoaXMud2luZG93LmdldEh0bWxFbGVtZW50KCJhbGlnbkxpbmVIb3Jpem9udGFsIik7DQogICAgICAgIHRoaXMuYWxpZ25MaW5lVmVydGljYWwgPSBhd2FpdCB0aGlzLndpbmRvdy5nZXRIdG1sRWxlbWVudCgiYWxpZ25MaW5lVmVydGljYWwiKTsNCiAgICAgICAgdGhpcy5tYWtlQ29udGVudENoYW5nZXIoKTsNCiAgICAgICAgdGhpcy5vdXRsaW5lT3ZlcmxheSA9IGF3YWl0IHRoaXMud2luZG93LmdldEh0bWxFbGVtZW50KCJvdXRsaW5lT3ZlcmxheSIpOw0KDQogICAgICAgIHRoaXMuem9vbSA9IDE7DQogICAgICAgIHRoaXMuaW5pdFpvb20oKTsNCg0KICAgICAgICB0aGlzLm92ZXJsYXlPdXRsaW5lID0gdHJ1ZTsNCg0KICAgICAgICB0aGlzLnVwZGF0ZUxheWVycyA9ICgoKSA9PiB7DQogICAgICAgICAgICB0aGlzLmd1aS5zZXRQYWdlKHRoaXMuZWxlbWVudHMpOw0KDQogICAgICAgICAgICB0aGlzLmVsZW1lbnRzID0gdGhpcy51dGlsLmNhcExheWVycyh0aGlzLmVsZW1lbnRzKTsNCg0KICAgICAgICAgICAgZm9yICh2YXIgeCBpbiB0aGlzLmVsZW1lbnRzKSB7DQogICAgICAgICAgICAgICAgdGhpcy5yZWxvYWRFbGVtZW50KHgpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9KS5iaW5kKHRoaXMpOw0KDQogICAgICAgIHRoaXMudXBkYXRlT3ZlcmxheU91dGxpbmUoKTsNCiAgICB9DQoNCiAgICB1cGRhdGVPdmVybGF5T3V0bGluZSgpIHsNCiAgICAgICAgaWYgKHRoaXMub3ZlcmxheU91dGxpbmUpIHsNCiAgICAgICAgICAgIHRoaXMub3V0bGluZU92ZXJsYXkuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICB0aGlzLm91dGxpbmVPdmVybGF5LnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBpbml0Wm9vbSgpIHsNCiAgICAgICAgdGhpcy53aW5kb3cuYWRkSHRtbEV2ZW50TGlzdGVuZXIoIm9ud2hlZWwiLCAicHJvamVjdEVkaXQiLCAoKGEsIGIsIGMsIGUpID0+IHsNCiAgICAgICAgICAgIGlmICghZS5hbHRLZXkpIHsgcmV0dXJuIH0NCiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsNCg0KICAgICAgICAgICAgaWYgKGUuZGVsdGFZID4gMCkgew0KICAgICAgICAgICAgICAgIHRoaXMuem9vbSAtPSAwLjE7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHRoaXMuem9vbSArPSAwLjE7DQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLmFwcGx5Wm9vbSgpOw0KICAgICAgICB9KS5iaW5kKHRoaXMpKTsNCiAgICB9DQoNCiAgICBhcHBseVpvb20oKSB7DQogICAgICAgIGlmICh0aGlzLnpvb20gPCAwLjEpIHsNCiAgICAgICAgICAgIHRoaXMuem9vbSA9IDAuMTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAodGhpcy56b29tID4gMykgew0KICAgICAgICAgICAgdGhpcy56b29tID0gMzsNCiAgICAgICAgfQ0KICAgICAgICB0aGlzLmNvbnRlbnQuc3R5bGUuc2V0UHJvcGVydHkoInpvb20iLCB0aGlzLnpvb20pOw0KICAgICAgICB0aGlzLmNvbnRlbnRDaGFuZ2VyLnN0eWxlLnNldFByb3BlcnR5KCJ6b29tIiwgdGhpcy56b29tKTsNCiAgICAgICAgdGhpcy5vdXRsaW5lT3ZlcmxheS5zdHlsZS5zZXRQcm9wZXJ0eSgiem9vbSIsIHRoaXMuem9vbSk7DQogICAgICAgIHRoaXMuYWxpZ25MaW5lSG9yaXpvbnRhbC5zdHlsZS5zZXRQcm9wZXJ0eSgiem9vbSIsIHRoaXMuem9vbSk7DQogICAgICAgIHRoaXMuYWxpZ25MaW5lVmVydGljYWwuc3R5bGUuc2V0UHJvcGVydHkoInpvb20iLCB0aGlzLnpvb20pOw0KICAgICAgICB0aGlzLmFsbEFsaWduTGluZXMuc3R5bGUuc2V0UHJvcGVydHkoInpvb20iLCB0aGlzLnpvb20pOw0KDQoNCiAgICAgICAgZm9yICh2YXIgeCBvZiB0aGlzLmNvbnRlbnRDaGFuZ2VyLmNoaWxkcmVuKSB7DQogICAgICAgICAgICB4LnN0eWxlLnNldFByb3BlcnR5KCJ6b29tIiwgMSAvIHRoaXMuem9vbSk7DQogICAgICAgIH0NCg0KICAgICAgICAvL2NlbnRlciBwcm9qZWN0Q29udGVudElubmVyV3JhcGVyDQogICAgICAgIHZhciB3aWR0aCA9IHRoaXMuY29udGVudC5vZmZzZXRXaWR0aCAqIHRoaXMuem9vbTsNCiAgICAgICAgdmFyIGhlaWdodCA9IHRoaXMuY29udGVudC5vZmZzZXRIZWlnaHQgKiB0aGlzLnpvb207DQogICAgICAgIHZhciB3aWR0aDIgPSB0aGlzLmNvbnRlbnQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50Lm9mZnNldFdpZHRoOw0KICAgICAgICB2YXIgaGVpZ2h0MiA9IHRoaXMuY29udGVudC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQub2Zmc2V0SGVpZ2h0Ow0KDQogICAgICAgIHZhciB4ID0gKHdpZHRoMiAtIHdpZHRoKSAvIDI7DQogICAgICAgIHZhciB5ID0gKGhlaWdodDIgLSBoZWlnaHQpIC8gMjsNCg0KICAgICAgICBpZiAoeCA+IDApIHsNCiAgICAgICAgICAgIHRoaXMuY29udGVudC5wYXJlbnRFbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KCJtYXJnaW4tbGVmdCIsIHggKyAicHgiKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHRoaXMuY29udGVudC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQuc2Nyb2xsTGVmdCA9IC14Ow0KICAgICAgICAgICAgdGhpcy5jb250ZW50LnBhcmVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoIm1hcmdpbi1sZWZ0IiwgIjBweCIpOw0KICAgICAgICB9DQogICAgICAgIGlmICh5ID4gMCkgew0KICAgICAgICAgICAgdGhpcy5jb250ZW50LnBhcmVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoIm1hcmdpbi10b3AiLCB5ICsgInB4Iik7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICB0aGlzLmNvbnRlbnQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LnNjcm9sbFRvcCA9IC15Ow0KICAgICAgICAgICAgdGhpcy5jb250ZW50LnBhcmVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoIm1hcmdpbi10b3AiLCAiMHB4Iik7DQogICAgICAgIH0NCg0KICAgIH0NCg0KICAgIGFzeW5jIGluaXRFbGVtZW50RnVuY3Rpb25zKCkgew0KICAgICAgICB2YXIgZmlsZXMgPSBhd2FpdCBTeXN0ZW1GaWxlU3lzdGVtLmdldEZpbGVzKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvZWxlbWVudEZ1bmN0aW9ucyIpOw0KICAgICAgICBmb3IgKHZhciBmaWxlIG9mIGZpbGVzKSB7DQogICAgICAgICAgICB2YXIgY2xhcyA9IG5ldyAoYXdhaXQgU3lzdGVtLnJ1bih0aGlzLlBBVEguZm9sZGVyKCkgKyAiL2VsZW1lbnRGdW5jdGlvbnMvIiArIGZpbGUpKSh0aGlzLndpbmRvdyk7DQogICAgICAgICAgICB2YXIgaW5mbyA9IGNsYXMuZ2V0KCk7DQogICAgICAgICAgICBmb3IgKHZhciB4IG9mIE9iamVjdC5rZXlzKGluZm8pKSB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMuZWxlbWVudEZ1bmN0aW9uc1t4XSAhPSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcigiRWxlbWVudCBmdW5jdGlvbiAiICsgeCArICIgYWxyZWFkeSBleGlzdHMhIik7DQogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRGdW5jdGlvbnNbeF0gPSBpbmZvW3hdOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB2YXIgciA9IGNsYXMuY29udGV4dE1lbnVBbGwoKTsNCiAgICAgICAgICAgIGlmIChyICE9IHVuZGVmaW5lZCkgew0KICAgICAgICAgICAgICAgIGZvciAodmFyIHggb2Ygcikgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHRNZW51QWxsLnB1c2goeCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgbWFrZUNvbnRlbnRDaGFuZ2VyKCkgew0KICAgICAgICB2YXIgdHlwZXMgPSBbDQogICAgICAgICAgICB7ICJ0b3AiOiAiLTEwcHgiLCAibGVmdCI6ICItMTBweCIsICJjdXJzb3IiOiAibnctcmVzaXplIiB9LA0KICAgICAgICAgICAgeyAiYm90dG9tIjogIi0xMHB4IiwgImxlZnQiOiAiLTEwcHgiLCAiY3Vyc29yIjogInN3LXJlc2l6ZSIgfSwNCiAgICAgICAgICAgIHsgInRvcCI6ICItMTBweCIsICJyaWdodCI6ICItMTBweCIsICJjdXJzb3IiOiAibmUtcmVzaXplIiB9LA0KICAgICAgICAgICAgeyAiYm90dG9tIjogIi0xMHB4IiwgInJpZ2h0IjogIi0xMHB4IiwgImN1cnNvciI6ICJzZS1yZXNpemUiIH0sDQogICAgICAgIF07DQoNCiAgICAgICAgZm9yICh2YXIgaSBpbiB0eXBlcykgew0KICAgICAgICAgICAgdmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7DQogICAgICAgICAgICBlbC5zZXRBdHRyaWJ1dGUoImVsZW1lbnQiLCAiY29udGVudENoYW5nZXJfYm9tbWwiKTsNCg0KICAgICAgICAgICAgZm9yICh2YXIgeSBvZiBPYmplY3Qua2V5cyh0eXBlc1tpXSkpIHsNCiAgICAgICAgICAgICAgICBlbC5zdHlsZS5zZXRQcm9wZXJ0eSh5LCB0eXBlc1tpXVt5XSk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGVsLm9ubW91c2Vkb3duID0gKChpKSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5yZXNpemUgPSB0cnVlOw0KICAgICAgICAgICAgICAgIHRoaXMubW91c2VNb3ZlbWVudFR5cGUgPSBpOw0KICAgICAgICAgICAgfSkuYmluZCh0aGlzLCBpKTsNCiAgICAgICAgICAgIGVsLm9udG91Y2hzdGFydCA9ICgoaSkgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMucmVzaXplID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICB0aGlzLm1vdXNlTW92ZW1lbnRUeXBlID0gaTsNCiAgICAgICAgICAgIH0pLmJpbmQodGhpcywgaSk7DQogICAgICAgICAgICB0aGlzLmNvbnRlbnRDaGFuZ2VyLmFwcGVuZENoaWxkKGVsKTsNCiAgICAgICAgfQ0KDQogICAgICAgIHRoaXMuY29udGVudENoYW5nZXIucXVlcnlTZWxlY3RvcigiW3dpbmRvd2VsZW1lbnQ9J2NvbnRlbnRDaGFuZ2VyQm9yZGVyJ10iKS5vbm1vdXNlZG93biA9ICgoZSkgPT4gew0KICAgICAgICAgICAgdGhpcy5tb3VzZU1vdmVtZW50VHlwZSA9IHBhcnNlSW50KGUudGFyZ2V0LmdldEF0dHJpYnV0ZSgibW92ZW1lbnRUeXBlIikpOw0KICAgICAgICAgICAgdGhpcy5tb3ZpbmcgPSB0cnVlOw0KICAgICAgICB9KS5iaW5kKHRoaXMpOw0KICAgICAgICB0aGlzLmNvbnRlbnRDaGFuZ2VyLnF1ZXJ5U2VsZWN0b3IoIlt3aW5kb3dlbGVtZW50PSdjb250ZW50Q2hhbmdlckJvcmRlciddIikub250b3VjaHN0YXJ0ID0gKChlKSA9PiB7DQogICAgICAgICAgICB0aGlzLm1vdXNlTW92ZW1lbnRUeXBlID0gcGFyc2VJbnQoZS50YXJnZXQuZ2V0QXR0cmlidXRlKCJtb3ZlbWVudFR5cGUiKSk7DQogICAgICAgICAgICB0aGlzLm1vdmluZyA9IHRydWU7DQogICAgICAgIH0pLmJpbmQodGhpcyk7DQoNCiAgICAgICAgdGhpcy53aW5kb3cuZ2V0SHRtbCgpLm9ubW91c2V1cCA9ICgoKSA9PiB7DQogICAgICAgICAgICBpZiAodGhpcy5tb3ZpbmcgfHwgdGhpcy5yZXNpemUpIHsNCiAgICAgICAgICAgICAgICB0aGlzLmNsaXBNb3ZlbWVudCgpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy5tb3ZpbmcgPSBmYWxzZTsNCiAgICAgICAgICAgIHRoaXMucmVzaXplID0gZmFsc2U7DQogICAgICAgIH0pLmJpbmQodGhpcyk7DQogICAgICAgIHRoaXMud2luZG93LmdldEh0bWwoKS5vbnRvdWNoZW5kID0gKCgpID0+IHsNCiAgICAgICAgICAgIGlmICh0aGlzLm1vdmluZyB8fCB0aGlzLnJlc2l6ZSkgew0KICAgICAgICAgICAgICAgIHRoaXMuY2xpcE1vdmVtZW50KCk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLm1vdmluZyA9IGZhbHNlOw0KICAgICAgICAgICAgdGhpcy5yZXNpemUgPSBmYWxzZTsNCiAgICAgICAgfSkuYmluZCh0aGlzKTsNCg0KICAgICAgICBTeXN0ZW0uZXZlbnRIYW5kbGVyLmFkZEV2ZW50SGFuZGxlcigibW91c2Vtb3ZlIiwgdGhpcy5jb250ZW50Q2hhbmdlck1vdmUuYmluZCh0aGlzKSk7DQoNCiAgICAgICAgdGhpcy53aW5kb3cuYWRkSHRtbEV2ZW50TGlzdGVuZXIoIm9uY2xpY2siLCAicHJvamVjdENvbnRlbnRXcmFwZXIiLCBhc3luYyAoXywgX18sIF9fXywgZSkgPT4gew0KICAgICAgICAgICAgaWYgKGUudGFyZ2V0LmdldEF0dHJpYnV0ZSgid2luZG93ZWxlbWVudCIpICE9ICJwcm9qZWN0Q29udGVudCIgJiYgZS50YXJnZXQuZ2V0QXR0cmlidXRlKCJ3aW5kb3dlbGVtZW50IikgIT0gInByb2plY3RDb250ZW50V3JhcGVyIiAmJiBlLnRhcmdldC5nZXRBdHRyaWJ1dGUoIndpbmRvd2VsZW1lbnQiKSAhPSAicHJvamVjdENvbnRlbnRJbm5lcldyYXBlciIpIHsgcmV0dXJuIH0NCiAgICAgICAgICAgIGlmICh0aGlzLmVkaXRpbmcpIHsNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddID09IHVuZGVmaW5lZCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLm5vd0VkaXRpbmcgPSBudWxsOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmhpZGVDb250ZW50Q2hhbmdlcigpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVNlbGVjdCgpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuZWxlbWVudEZ1bmN0aW9uc1t0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10udHlwZV0uc3RvcEVkaXQodGhpcy5lbGVtZW50cywgdGhpcy5ub3dFZGl0aW5nLCB0aGlzLmNvbnRlbnQpOw0KICAgICAgICAgICAgICAgIHRoaXMuZWRpdGluZyA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIHRoaXMucmVsb2FkRWxlbWVudCh0aGlzLm5vd0VkaXRpbmcpOw0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdGhpcy5ub3dFZGl0aW5nID0gbnVsbDsNCiAgICAgICAgICAgIHRoaXMuaGlkZUNvbnRlbnRDaGFuZ2VyKCk7DQogICAgICAgICAgICB0aGlzLnVwZGF0ZVNlbGVjdCgpOw0KICAgICAgICB9KTsNCg0KICAgICAgICAvKnRoaXMud2luZG93LmFkZEh0bWxFdmVudExpc3RlbmVyKCJvbmNsaWNrIiwgImNvbnRlbnRDaGFuZ2VyIiwgKF8sIF9fLCBfX18sIGUpID0+IHsNCiAgICAgICAgICAgIGlmIChlLnRhcmdldC5nZXRBdHRyaWJ1dGUoIndpbmRvd2VsZW1lbnQiKSA9PSAiY29udGVudENoYW5nZXJfYm9tbWwiKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfSBpZiAoZS50YXJnZXQuZ2V0QXR0cmlidXRlKCJ3aW5kb3dlbGVtZW50IikgPT0gImNvbnRlbnRDaGFuZ2VyQm9yZGVyUGFydCIpIHsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLmVkaXRDb250ZW50KCk7DQogICAgICAgIH0pOyovDQoNCiAgICAgICAgdGhpcy5jb250ZW50Q2hhbmdlci5jb250ZXh0c2NyaXB0ID0gKChlKSA9PiB7DQogICAgICAgICAgICB2YXIgb3V0ID0ge307DQogICAgICAgICAgICBmb3IgKHZhciB4IG9mIHRoaXMuY29udGV4dE1lbnVBbGwpIHsNCiAgICAgICAgICAgICAgICBvdXRbeC5uYW1lXSA9IHguYWN0aW9uLmJpbmQodGhpcywgdGhpcy5lbGVtZW50cywgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLmlkLCB0aGlzLmNvbnRlbnQsIHRoaXMpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB2YXIgcyA9IHRoaXMuZWxlbWVudEZ1bmN0aW9uc1t0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10udHlwZV0uY29udGV4dE1lbnU7DQogICAgICAgICAgICBmb3IgKHZhciB4IG9mIHMpIHsNCiAgICAgICAgICAgICAgICBvdXRbeC5uYW1lXSA9IHguYWN0aW9uLmJpbmQodGhpcywgdGhpcy5lbGVtZW50cywgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLmlkLCB0aGlzLmNvbnRlbnQsIHRoaXMpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIG91dDsNCiAgICAgICAgfSkuYmluZCh0aGlzKTsNCiAgICB9DQoNCiAgICBhc3luYyBjb250ZW50Q2hhbmdlck1vdmUoZSkgew0KICAgICAgICB2YXIgbW92ZW1lbnRYID0gZS5tb3ZlbWVudFggLyB0aGlzLnpvb20NCiAgICAgICAgdmFyIG1vdmVtZW50WSA9IGUubW92ZW1lbnRZIC8gdGhpcy56b29tDQogICAgICAgIGlmICh0aGlzLm1vdmluZyA9PSB0cnVlKSB7DQogICAgICAgICAgICB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10ucG9zLnggKz0gbW92ZW1lbnRYOw0KICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnBvcy55ICs9IG1vdmVtZW50WTsNCiAgICAgICAgICAgIHRoaXMucmVsb2FkRWxlbWVudCh0aGlzLm5vd0VkaXRpbmcpOw0KICAgICAgICAgICAgdGhpcy5zZXRDb250ZW50Q2hhbmdlcigpOw0KICAgICAgICB9DQogICAgICAgIGVsc2UgaWYgKHRoaXMucmVzaXplID09IHRydWUpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLm1vdXNlTW92ZW1lbnRUeXBlID09IDApIHsNCiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10ucG9zLnggKz0gbW92ZW1lbnRYOw0KICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5wb3MueSArPSBtb3ZlbWVudFk7DQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnNpemUud2lkdGggLT0gbW92ZW1lbnRYOw0KICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5zaXplLmhlaWdodCAtPSBtb3ZlbWVudFk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIGlmICh0aGlzLm1vdXNlTW92ZW1lbnRUeXBlID09IDEpIHsNCiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10ucG9zLnggKz0gbW92ZW1lbnRYOw0KICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5zaXplLndpZHRoIC09IG1vdmVtZW50WDsNCiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10uc2l6ZS5oZWlnaHQgKz0gbW92ZW1lbnRZOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5tb3VzZU1vdmVtZW50VHlwZSA9PSAyKSB7DQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnBvcy55ICs9IG1vdmVtZW50WTsNCiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10uc2l6ZS53aWR0aCArPSBtb3ZlbWVudFg7DQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnNpemUuaGVpZ2h0IC09IG1vdmVtZW50WTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMubW91c2VNb3ZlbWVudFR5cGUgPT0gMykgew0KICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5zaXplLndpZHRoICs9IG1vdmVtZW50WDsNCiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10uc2l6ZS5oZWlnaHQgKz0gbW92ZW1lbnRZOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy5yZWxvYWRFbGVtZW50KHRoaXMubm93RWRpdGluZyk7DQogICAgICAgICAgICB0aGlzLnNldENvbnRlbnRDaGFuZ2VyKCk7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoIXRoaXMubW92aW5nICYmICF0aGlzLnJlc2l6ZSkgew0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQoNCiAgICAgICAgLyp2YXIgW21heWJlSG9yaXpvbnRhbCwgbWF5YmVWZXJ0aWNhbF0gPSB0aGlzLmdldFBvc3NpYmxlQWxpZ25MaW5lcygpOw0KDQogICAgICAgIGlmIChtYXliZUhvcml6b250YWwubGVuZ3RoID09IDApIHsNCiAgICAgICAgICAgIHRoaXMuYWxpZ25MaW5lVmVydGljYWwuc3R5bGUuZGlzcGxheSA9ICJub25lIjsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHRoaXMuYWxpZ25MaW5lVmVydGljYWwuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7DQogICAgICAgIH0NCiAgICAgICAgdGhpcy5hbGlnbkxpbmVWZXJ0aWNhbC5zdHlsZS50b3AgPSBtYXliZUhvcml6b250YWxbMF0gKyAicHgiOyovDQoNCiAgICAgICAgdmFyIGxpbmUgPSBhd2FpdCB0aGlzLmdldFBvc3NpYmxlQWxpZ25MaW5lcygpOw0KICAgICAgICBpZiAobGluZS50eXBlID09ICItIikgew0KICAgICAgICAgICAgdGhpcy5hbGlnbkxpbmVIb3Jpem9udGFsLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7DQogICAgICAgICAgICB0aGlzLmFsaWduTGluZVZlcnRpY2FsLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAobGluZS50eXBlID09ICJ2ZXJ0aWNhbCIpIHsNCiAgICAgICAgICAgIHRoaXMuYWxpZ25MaW5lSG9yaXpvbnRhbC5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsNCiAgICAgICAgICAgIHRoaXMuYWxpZ25MaW5lVmVydGljYWwuc3R5bGUuZGlzcGxheSA9ICJub25lIjsNCiAgICAgICAgICAgIHRoaXMuYWxpZ25MaW5lSG9yaXpvbnRhbC5zdHlsZS5sZWZ0ID0gbGluZS5wb3MgKyAicHgiOw0KICAgICAgICB9DQogICAgICAgIGlmIChsaW5lLnR5cGUgPT0gImhvcml6b250YWwiKSB7DQogICAgICAgICAgICB0aGlzLmFsaWduTGluZUhvcml6b250YWwuc3R5bGUuZGlzcGxheSA9ICJub25lIjsNCiAgICAgICAgICAgIHRoaXMuYWxpZ25MaW5lVmVydGljYWwuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7DQogICAgICAgICAgICB0aGlzLmFsaWduTGluZVZlcnRpY2FsLnN0eWxlLnRvcCA9IGxpbmUucG9zICsgInB4IjsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGdldE1vdXNlUG9zT25FZGl0b3IoKSB7DQogICAgICAgIHZhciBtb3VzZVBvcyA9IHsgeDogU3lzdGVtLmV2ZW50SGFuZGxlci5tb3VzZS54LCB5OiBTeXN0ZW0uZXZlbnRIYW5kbGVyLm1vdXNlLnkgfTsNCiAgICAgICAgdmFyIGMgPSB0aGlzLmNvbnRlbnQNCiAgICAgICAgdmFyIGVkaXRvciA9IHsgIngiOiBjLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLngsICJ5IjogYy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS55IH07DQoNCiAgICAgICAgZWRpdG9yLnggKj0gdGhpcy56b29tOw0KICAgICAgICBlZGl0b3IueSAqPSB0aGlzLnpvb207DQoNCiAgICAgICAgbW91c2VQb3MueCAtPSBlZGl0b3IueDsNCiAgICAgICAgbW91c2VQb3MueSAtPSBlZGl0b3IueTsNCg0KICAgICAgICBtb3VzZVBvcy54IC89IHRoaXMuem9vbTsNCiAgICAgICAgbW91c2VQb3MueSAvPSB0aGlzLnpvb207DQogICAgICAgIHJldHVybiBtb3VzZVBvczsNCiAgICB9DQoNCiAgICBnZXRQb3NzaWJsZUFsaWduTGluZXMoKSB7DQogICAgICAgIC8vYWxpZ24gbGluZXMNCiAgICAgICAgY29uc3QgbmVhciA9IDM7DQoNCiAgICAgICAgdmFyIGVsZW1lbnRIb3Jpem9udGFsID0gW3RoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5wb3MueSwgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnBvcy55ICsgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnNpemUuaGVpZ2h0XTsNCiAgICAgICAgdmFyIGVsZW1lbnRWZXJ0aWNhbCA9IFt0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10ucG9zLngsIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5wb3MueCArIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5zaXplLndpZHRoXTsNCg0KICAgICAgICB2YXIgbW91c2UgPSB0aGlzLmdldE1vdXNlUG9zT25FZGl0b3IoKTsNCg0KICAgICAgICB2YXIgbGluZSA9IHsgInR5cGUiOiAiLSIsICJwb3MiOiAtMSwgImRpc3RhbmNlIjogLTEgfQ0KICAgICAgICBmb3IgKHZhciB4IG9mIE9iamVjdC5rZXlzKHRoaXMuYWxpZ25MaW5lcykpIHsNCiAgICAgICAgICAgIGlmICh4ID09IHRoaXMubm93RWRpdGluZykgew0KICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBmb3IgKHZhciB5IG9mIHRoaXMuYWxpZ25MaW5lc1t4XS5ob3Jpem9udGFsKSB7DQogICAgICAgICAgICAgICAgZm9yICh2YXIgeiBvZiBlbGVtZW50SG9yaXpvbnRhbCkgew0KICAgICAgICAgICAgICAgICAgICBpZiAoLyp5IC0gbmVhciA8IHogJiYgeSArIG5lYXIgPiB6IHx8Ki8geSAtIG5lYXIgPCBtb3VzZS55ICYmIHkgKyBuZWFyID4gbW91c2UueSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy9kaXN0YW5jZSBmcm9tIG1vdXNlIHRvIGxpbmUNCiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkaXN0YW5jZSA9IE1hdGguYWJzKHkgLSBtb3VzZS55KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkaXN0YW5jZSA8IGxpbmUuZGlzdGFuY2UgfHwgbGluZS5kaXN0YW5jZSA9PSAtMSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmUuZGlzdGFuY2UgPSBkaXN0YW5jZTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lLnBvcyA9IHk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGluZS50eXBlID0gImhvcml6b250YWwiOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBmb3IgKHZhciB5IG9mIHRoaXMuYWxpZ25MaW5lc1t4XS52ZXJ0aWNhbCkgew0KICAgICAgICAgICAgICAgIGZvciAodmFyIHogaW4gZWxlbWVudFZlcnRpY2FsKSB7DQogICAgICAgICAgICAgICAgICAgIGlmICgvKnkgLSBuZWFyIDwgZWxlbWVudFZlcnRpY2FsW3pdICYmIHkgKyBuZWFyID4gZWxlbWVudFZlcnRpY2FsW3pdIHx8Ki8geSAtIG5lYXIgPCBtb3VzZS54ICYmIHkgKyBuZWFyID4gbW91c2UueCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy9kaXN0YW5jZSBmcm9tIG1vdXNlIHRvIGxpbmUNCiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkaXN0YW5jZSA9IE1hdGguYWJzKHkgLSBtb3VzZS54KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkaXN0YW5jZSA8IGxpbmUuZGlzdGFuY2UgfHwgbGluZS5kaXN0YW5jZSA9PSAtMSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmUuZGlzdGFuY2UgPSBkaXN0YW5jZTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lLnBvcyA9IHk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGluZS50eXBlID0gInZlcnRpY2FsIjsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICAvKmZvciAodmFyIHkgb2YgdGhpcy5hbGlnbkxpbmVzW3hdLmhvcml6b250YWwpIHsNCiAgICAgICAgICAgIHZhciBpID0gMDsNCiAgICAgICAgICAgIGZvciAodmFyIHogb2YgZWxlbWVudEhvcml6b250YWwpIHsNCiAgICAgICAgICAgICAgICBpZiAoeSAtIG5lYXIgPCB6ICYmIHkgKyBuZWFyID4geikgew0KICAgICAgICAgICAgICAgICAgICBtYXliZUhvcml6b250YWwucHVzaChwYXJzZUludCh5KSk7DQogICAgICAgICAgICAgICAgICAgIHR5cGVIb3Jpem9udGFsLnB1c2goaSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGkrKzsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIGZvciAodmFyIHkgb2YgdGhpcy5hbGlnbkxpbmVzW3hdLnZlcnRpY2FsKSB7DQogICAgICAgICAgICB2YXIgaSA9IDA7DQogICAgICAgICAgICBmb3IgKHZhciB6IG9mIGVsZW1lbnRWZXJ0aWNhbCkgew0KICAgICAgICAgICAgICAgIGlmICh5IC0gbmVhciA8IHogJiYgeSArIG5lYXIgPiB6KSB7DQogICAgICAgICAgICAgICAgICAgIG1heWJlVmVydGljYWwucHVzaChwYXJzZUludCh5KSk7DQogICAgICAgICAgICAgICAgICAgIHR5cGVWZXJ0aWNhbC5wdXNoKGkpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpKys7DQogICAgICAgICAgICB9DQogICAgICAgIH0qLw0KDQogICAgICAgIC8qDQogICAgICAgIGlmICh0aGlzLm1vdmluZykgew0KICAgICAgICAgICAgdmFyIGNsb3Nlc3RIID0gLTE7DQoNCiAgICAgICAgICAgIGlmIChtYXliZUhvcml6b250YWwubGVuZ3RoICE9IDApDQogICAgICAgICAgICAgICAgZm9yICh2YXIgeCBvZiBtYXliZUhvcml6b250YWwpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKE1hdGguYWJzKHggLSBTeXN0ZW0uZXZlbnRIYW5kbGVyLm1vdXNlLnkpIDwgTWF0aC5hYnMobWF5YmVIb3Jpem9udGFsW2Nsb3Nlc3RdIC0gU3lzdGVtLmV2ZW50SGFuZGxlci5tb3VzZS55KSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY2xvc2VzdEggPSBtYXliZUhvcml6b250YWwuaW5kZXhPZih4KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHZhciBjbG9zZXN0ViA9IC0xOw0KDQogICAgICAgICAgICBpZiAobWF5YmVWZXJ0aWNhbC5sZW5ndGggIT0gMCkNCiAgICAgICAgICAgICAgICBmb3IgKHZhciB4IG9mIG1heWJlVmVydGljYWwpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKE1hdGguYWJzKHggLSBTeXN0ZW0uZXZlbnRIYW5kbGVyLm1vdXNlLngpIDwgTWF0aC5hYnMobWF5YmVWZXJ0aWNhbFtjbG9zZXN0XSAtIFN5c3RlbS5ldmVudEhhbmRsZXIubW91c2UueCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNsb3Nlc3RWID0gbWF5YmVWZXJ0aWNhbC5pbmRleE9mKHgpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB2YXIgY2xvc2VzdCA9IC0xOw0KICAgICAgICAgICAgaWYgKG1heWJlSG9yaXpvbnRhbFtjbG9zZXN0SF0gPiBtYXliZVZlcnRpY2FsW2Nsb3Nlc3RWXSkgew0KICAgICAgICAgICAgICAgIGNsb3Nlc3QgPSBjbG9zZXN0SDsNCiAgICAgICAgICAgICAgICBtYXliZUhvcml6b250YWwgPSBbbWF5YmVIb3Jpem9udGFsW2Nsb3Nlc3RIXV07DQogICAgICAgICAgICAgICAgdHlwZUhvcml6b250YWwgPSBbdHlwZUhvcml6b250YWxbY2xvc2VzdEhdXTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgY2xvc2VzdCA9IGNsb3Nlc3RWOw0KICAgICAgICAgICAgICAgIG1heWJlVmVydGljYWwgPSBbbWF5YmVWZXJ0aWNhbFtjbG9zZXN0Vl1dOw0KICAgICAgICAgICAgICAgIHR5cGVWZXJ0aWNhbCA9IFt0eXBlVmVydGljYWxbY2xvc2VzdFZdXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICBpZiAodGhpcy5yZXNpemUpIHsNCiAgICAgICAgICAgIHZhciBjbG9zZXN0SCA9IC0xOw0KDQogICAgICAgICAgICBpZiAobWF5YmVIb3Jpem9udGFsLmxlbmd0aCAhPSAwKQ0KICAgICAgICAgICAgICAgIGZvciAodmFyIHggb2YgbWF5YmVIb3Jpem9udGFsKSB7DQogICAgICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyh4IC0gU3lzdGVtLmV2ZW50SGFuZGxlci5tb3VzZS55KSA8IE1hdGguYWJzKG1heWJlSG9yaXpvbnRhbFtjbG9zZXN0XSAtIFN5c3RlbS5ldmVudEhhbmRsZXIubW91c2UueSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNsb3Nlc3RIID0gbWF5YmVIb3Jpem9udGFsLmluZGV4T2YoeCk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB2YXIgY2xvc2VzdFYgPSAtMTsNCg0KICAgICAgICAgICAgaWYgKG1heWJlVmVydGljYWwubGVuZ3RoICE9IDApDQogICAgICAgICAgICAgICAgZm9yICh2YXIgeCBvZiBtYXliZVZlcnRpY2FsKSB7DQogICAgICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyh4IC0gU3lzdGVtLmV2ZW50SGFuZGxlci5tb3VzZS54KSA8IE1hdGguYWJzKG1heWJlVmVydGljYWxbY2xvc2VzdF0gLSBTeXN0ZW0uZXZlbnRIYW5kbGVyLm1vdXNlLngpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjbG9zZXN0ViA9IG1heWJlVmVydGljYWwuaW5kZXhPZih4KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdmFyIGNsb3Nlc3QgPSAtMTsNCiAgICAgICAgICAgIGlmIChtYXliZUhvcml6b250YWxbY2xvc2VzdEhdID4gbWF5YmVWZXJ0aWNhbFtjbG9zZXN0Vl0pIHsNCiAgICAgICAgICAgICAgICBjbG9zZXN0ID0gY2xvc2VzdEg7DQogICAgICAgICAgICAgICAgbWF5YmVIb3Jpem9udGFsID0gW21heWJlSG9yaXpvbnRhbFtjbG9zZXN0SF1dOw0KICAgICAgICAgICAgICAgIHR5cGVIb3Jpem9udGFsID0gW3R5cGVIb3Jpem9udGFsW2Nsb3Nlc3RIXV07DQogICAgICAgICAgICAgICAgbWF5YmVWZXJ0aWNhbCA9IFtdOw0KICAgICAgICAgICAgICAgIHR5cGVWZXJ0aWNhbCA9IFtdOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICBjbG9zZXN0ID0gY2xvc2VzdFY7DQogICAgICAgICAgICAgICAgbWF5YmVWZXJ0aWNhbCA9IFttYXliZVZlcnRpY2FsW2Nsb3Nlc3RWXV07DQogICAgICAgICAgICAgICAgdHlwZVZlcnRpY2FsID0gW3R5cGVWZXJ0aWNhbFtjbG9zZXN0Vl1dOw0KICAgICAgICAgICAgICAgIG1heWJlSG9yaXpvbnRhbCA9IFtdOw0KICAgICAgICAgICAgICAgIHR5cGVIb3Jpem9udGFsID0gW107DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICByZXR1cm4gW21heWJlSG9yaXpvbnRhbCwgbWF5YmVWZXJ0aWNhbCwgdHlwZUhvcml6b250YWwsIHR5cGVWZXJ0aWNhbF07DQogICAgICAgICovDQoNCiAgICAgICAgcmV0dXJuIGxpbmU7DQogICAgfQ0KDQogICAgY2xpcE1vdmVtZW50KCkgew0KICAgICAgICAvKnRoaXMuYWxpZ25MaW5lVmVydGljYWwuc3R5bGUuZGlzcGxheSA9ICJub25lIjsNCiAgICAgICAgdmFyIFttYXliZUhvcml6b250YWwsIG1heWJlVmVydGljYWwsIHR5cGVIb3Jpem9udGFsLCB0eXBlVmVydGljYWxdID0gdGhpcy5nZXRQb3NzaWJsZUFsaWduTGluZXMoKTsNCg0KICAgICAgICBpZiAobWF5YmVIb3Jpem9udGFsLmxlbmd0aCA9PSAwKSB7DQogICAgICAgICAgICBjb25zb2xlLmxvZygibm8gaG9yaXpvbnRhbCIpDQogICAgICAgICAgICByZXR1cm4NCiAgICAgICAgfQ0KDQogICAgICAgIHZhciBtYXJnaW4gPSBwYXJzZUludChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBbdXVpZD0iJHt0aGlzLm5vd0VkaXRpbmd9Il1gKS5zdHlsZS5tYXJnaW4uc3BsaXQoInB4IilbMF0pICogLTE7DQogICAgICAgIGlmIChtYXJnaW4gPT0gTmFOKSB7DQogICAgICAgICAgICBtYXJnaW4gPSAwOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKHRoaXMubW92aW5nKSB7DQogICAgICAgICAgICBpZiAodHlwZUhvcml6b250YWxbMF0gPT0gMCkgew0KICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5wb3MueSA9IG1heWJlSG9yaXpvbnRhbFswXSArIG1hcmdpbjsNCiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZUhvcml6b250YWxbMF0gPT0gMSkgew0KICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5wb3MueSA9IChtYXliZUhvcml6b250YWxbMF0gLSB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10uc2l6ZS5oZWlnaHQpICsgbWFyZ2luOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKHRoaXMucmVzaXplKSB7DQogICAgICAgICAgICBpZiAodHlwZUhvcml6b250YWxbMF0gPT0gMCkgew0KICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5zaXplLmhlaWdodCA9IHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5zaXplLmhlaWdodCArICh0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10ucG9zLnkgKyBtYXliZUhvcml6b250YWxbMF0pIC0gbWFyZ2luOw0KICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5wb3MueSA9IG1heWJlSG9yaXpvbnRhbFswXSArIG1hcmdpbjsNCiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZUhvcml6b250YWxbMF0gPT0gMSkgew0KICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5zaXplLmhlaWdodCA9IG1heWJlSG9yaXpvbnRhbFswXSAtIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5wb3MueTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHRoaXMucmVsb2FkRWxlbWVudCh0aGlzLm5vd0VkaXRpbmcpOw0KICAgICAgICB0aGlzLnNldENvbnRlbnRDaGFuZ2VyKCk7Ki8NCg0KICAgICAgICB0aGlzLmFsaWduTGluZVZlcnRpY2FsLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7DQogICAgICAgIHRoaXMuYWxpZ25MaW5lSG9yaXpvbnRhbC5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOw0KDQogICAgICAgIHZhciBtYXJnaW4gPSBwYXJzZUludChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBbdXVpZD0iJHt0aGlzLm5vd0VkaXRpbmd9Il1gKS5zdHlsZS5tYXJnaW4uc3BsaXQoInB4IilbMF0pICogLTE7DQogICAgICAgIGlmIChTeXN0ZW0uZXZlbnRIYW5kbGVyLmtleXNEb3duWyJBbHRMZWZ0Il0gPT0gdHJ1ZSkgew0KICAgICAgICAgICAgbWFyZ2luID0gMDsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoU3lzdGVtLmV2ZW50SGFuZGxlci5rZXlzRG93blsiU2hpZnRMZWZ0Il0gPT0gdHJ1ZSkgew0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQogICAgICAgIHZhciBsaW5lID0gdGhpcy5nZXRQb3NzaWJsZUFsaWduTGluZXMoKTsNCiAgICAgICAgY29uc29sZS5sb2cobGluZSk7DQogICAgICAgIGlmIChsaW5lLnR5cGUgPT0gIi0iKSB7DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCg0KICAgICAgICBpZiAodGhpcy5tb3ZpbmcpIHsNCiAgICAgICAgICAgIGlmIChsaW5lLnR5cGUgPT0gImhvcml6b250YWwiKSB7DQogICAgICAgICAgICAgICAgdmFyIGRpc3RUb3AgPSBNYXRoLmFicyhsaW5lLnBvcyAtIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5wb3MueSk7DQogICAgICAgICAgICAgICAgdmFyIGRpc3RCb3R0b20gPSBNYXRoLmFicyhsaW5lLnBvcyAtICh0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10ucG9zLnkgKyB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10uc2l6ZS5oZWlnaHQpKTsNCiAgICAgICAgICAgICAgICBpZiAoZGlzdFRvcCA8IGRpc3RCb3R0b20pIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnBvcy55ID0gbGluZS5wb3MgKyBtYXJnaW47DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnBvcy55ID0gbGluZS5wb3MgLSB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10uc2l6ZS5oZWlnaHQgLSBtYXJnaW47DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBlbHNlIGlmIChsaW5lLnR5cGUgPT0gInZlcnRpY2FsIikgew0KICAgICAgICAgICAgICAgIHZhciBkaXN0TGVmdCA9IE1hdGguYWJzKGxpbmUucG9zIC0gdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnBvcy54KTsNCiAgICAgICAgICAgICAgICB2YXIgZGlzdFJpZ2h0ID0gTWF0aC5hYnMobGluZS5wb3MgLSAodGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnBvcy54ICsgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnNpemUud2lkdGgpKTsNCiAgICAgICAgICAgICAgICBpZiAoZGlzdExlZnQgPCBkaXN0UmlnaHQpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnBvcy54ID0gbGluZS5wb3MgKyBtYXJnaW47DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnBvcy54ID0gbGluZS5wb3MgLSB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10uc2l6ZS53aWR0aCAtIG1hcmdpbjsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0gZWxzZSBpZiAodGhpcy5yZXNpemUpIHsNCiAgICAgICAgICAgIGlmIChsaW5lLnR5cGUgPT0gImhvcml6b250YWwiKSB7DQogICAgICAgICAgICAgICAgdmFyIGRpc3RUb3AgPSBNYXRoLmFicyhsaW5lLnBvcyAtIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5wb3MueSk7DQogICAgICAgICAgICAgICAgdmFyIGRpc3RCb3R0b20gPSBNYXRoLmFicyhsaW5lLnBvcyAtICh0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10ucG9zLnkgKyB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10uc2l6ZS5oZWlnaHQpKTsNCiAgICAgICAgICAgICAgICBpZiAoZGlzdFRvcCA8IGRpc3RCb3R0b20pIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnNpemUuaGVpZ2h0ID0gdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnNpemUuaGVpZ2h0ICsgKHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5wb3MueSAtIGxpbmUucG9zKSAtIG1hcmdpbjsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnBvcy55ID0gbGluZS5wb3MgKyBtYXJnaW47DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnNpemUuaGVpZ2h0ID0gbGluZS5wb3MgLSB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10ucG9zLnk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBlbHNlIGlmIChsaW5lLnR5cGUgPT0gInZlcnRpY2FsIikgew0KICAgICAgICAgICAgICAgIHZhciBkaXN0TGVmdCA9IE1hdGguYWJzKGxpbmUucG9zIC0gdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnBvcy54KTsNCiAgICAgICAgICAgICAgICB2YXIgZGlzdFJpZ2h0ID0gTWF0aC5hYnMobGluZS5wb3MgLSAodGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnBvcy54ICsgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnNpemUud2lkdGgpKTsNCiAgICAgICAgICAgICAgICBpZiAoZGlzdExlZnQgPCBkaXN0UmlnaHQpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnNpemUud2lkdGggPSB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10uc2l6ZS53aWR0aCArICh0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10ucG9zLnggLSBsaW5lLnBvcykgLSBtYXJnaW47DQogICAgICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5wb3MueCA9IGxpbmUucG9zICsgbWFyZ2luOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5zaXplLndpZHRoID0gbGluZS5wb3MgLSB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10ucG9zLng7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgdGhpcy5yZWxvYWRFbGVtZW50KHRoaXMubm93RWRpdGluZyk7DQogICAgICAgIHRoaXMuc2V0Q29udGVudENoYW5nZXIoKTsNCiAgICB9DQoNCiAgICB1cGRhdGVTZWxlY3QoKSB7DQogICAgICAgIGlmICh0aGlzLm5vd0VkaXRpbmcgPT0gbnVsbCkNCiAgICAgICAgICAgIHRoaXMuc2VsZWN0KG51bGwpOw0KICAgICAgICBlbHNlDQogICAgICAgICAgICB0aGlzLnNlbGVjdCh0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10pOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7e3R5cGU6c3RyaW5nLCBkYXRhOnN0cmluZ3xhbnksIHBvczp7eDpudW1iZXIseTpudW1iZXJ9LCBzaXplOnt3aWR0aDpudW1iZXIsaGVpZ2h0Om51bWJlcn0sIHN0eWxpbmc6YW55fVtdfSBlbGVtZW50cyANCiAgICAgKi8NCiAgICBhc3luYyBsb2FkUHJvamVjdChlbGVtZW50cykgew0KICAgICAgICB0aGlzLmFsaWduTGluZXMgPSB7ICJib3JkZXIiOiB7ICJob3Jpem9udGFsIjogWzAsIHBhcnNlSW50KHRoaXMuZ3VpLnByb2plY3QucGl4ZWxSYXRpby5zcGxpdCgiOiIpWzFdKV0sICJ2ZXJ0aWNhbCI6IFswLCBwYXJzZUludCh0aGlzLmd1aS5wcm9qZWN0LnBpeGVsUmF0aW8uc3BsaXQoIjoiKVswXSldIH0sICJjZW50ZXIiOiB7ICJob3Jpem9udGFsIjogW10sICJ2ZXJ0aWNhbCI6IFtdIH0gfTsNCiAgICAgICAgdGhpcy5jb250ZW50LmlubmVySFRNTCA9ICIiOw0KICAgICAgICB0aGlzLmVsZW1lbnRzID0ge307DQoNCiAgICAgICAgZWxlbWVudHMgPSB0aGlzLnV0aWwuc29ydExheWVycyhlbGVtZW50cyk7DQoNCiAgICAgICAgZm9yICh2YXIgeCBvZiBlbGVtZW50cykgew0KICAgICAgICAgICAgdGhpcy5jcmVhdGVFbGVtZW50KHgsIHRydWUpOw0KICAgICAgICB9DQoNCiAgICAgICAgc2V0VGltZW91dCh0aGlzLmFwcGx5Wm9vbS5iaW5kKHRoaXMpLCAwKQ0KDQogICAgICAgIHRoaXMud2luZG93Lm9uUmVzaXplID0gKCkgPT4gew0KICAgICAgICAgICAgdGhpcy5hcHBseVpvb20oKTsNCiAgICAgICAgfTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiANCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcl9lbGVtZW50fSBlbGVtZW50DQogICAgICovDQogICAgY3JlYXRlRWxlbWVudChlbGVtZW50LCBmaXJzdCA9IGZhbHNlKSB7DQogICAgICAgIGVsZW1lbnQuaWQgPSBTeXN0ZW0ubWFrZWlkKDEwKTsNCiAgICAgICAgZWxlbWVudC5sYXllciA9IHRoaXMudXRpbC5nZXRMYXllck1heCh0aGlzLmVsZW1lbnRzKSArIDE7DQogICAgICAgIC8qKg0KICAgICAgICAgKiBAdHlwZSB7SFRNTEVsZW1lbnR9DQogICAgICAgICAqLw0KICAgICAgICB2YXIgZG9tRUw7DQogICAgICAgIGRvbUVMID0gdGhpcy5lbGVtZW50RnVuY3Rpb25zW2VsZW1lbnQudHlwZV0uY3JlYXRlKGVsZW1lbnQsIGRvbUVMKTsNCg0KICAgICAgICBkb21FTC5jb250ZXh0c2NyaXB0ID0gKChzZWxmKSA9PiB7DQogICAgICAgICAgICB2YXIgb3V0ID0ge307DQogICAgICAgICAgICBmb3IgKHZhciB4IG9mIHRoaXMuY29udGV4dE1lbnVBbGwpIHsNCiAgICAgICAgICAgICAgICBvdXRbeC5uYW1lXSA9IHguYWN0aW9uLmJpbmQodGhpcywgdGhpcy5lbGVtZW50cywgZWxlbWVudC5pZCwgdGhpcy5jb250ZW50LCB0aGlzKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdmFyIHMgPSB0aGlzLmVsZW1lbnRGdW5jdGlvbnNbc2VsZi50eXBlXS5jb250ZXh0TWVudTsNCiAgICAgICAgICAgIGZvciAodmFyIHggb2Ygcykgew0KICAgICAgICAgICAgICAgIG91dFt4Lm5hbWVdID0geC5hY3Rpb24uYmluZCh0aGlzLCB0aGlzLmVsZW1lbnRzLCBlbGVtZW50LmlkLCB0aGlzLmNvbnRlbnQsIHRoaXMpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIG91dDsNCiAgICAgICAgfSkuYmluZCh0aGlzLCBlbGVtZW50KTsNCg0KICAgICAgICB0aGlzLnNldEVsZW1lbnRJbmZvcm1hdGlvbihlbGVtZW50LCBkb21FTCwgdHJ1ZSk7DQoNCiAgICAgICAgZG9tRUwuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCB0aGlzLmNsaWNrLmJpbmQodGhpcywgZWxlbWVudC5pZCkpOw0KICAgICAgICBkb21FTC5zZXRBdHRyaWJ1dGUoInV1aWQiLCBlbGVtZW50LmlkKQ0KICAgICAgICBkb21FTC5zZXRBdHRyaWJ1dGUoImVsZW1lbnQiLCAicHJvamVjdENvbnRlbnRfZWxlbWVudCIpOw0KICAgICAgICB0aGlzLndpbmRvdy5wYXJzZU5ld0h0bWwoKTsNCiAgICAgICAgdGhpcy5lbGVtZW50c1tlbGVtZW50LmlkXSA9IGVsZW1lbnQ7DQogICAgICAgIHRoaXMuY29udGVudC5hcHBlbmRDaGlsZChkb21FTCk7DQoNCiAgICAgICAgdGhpcy5hbGlnbkxpbmVzW2VsZW1lbnQuaWRdID0gdGhpcy5jcmVhdGVBbGlnbkxpbmVzKGVsZW1lbnQuaWQpOw0KICAgICAgICB0aGlzLmdlbkFsbEFsaWduTGluZXMoKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiANCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcl9lbGVtZW50fSBlbGVtZW50IA0KICAgICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGRvbUVMIA0KICAgICAqLw0KICAgIHNldEVsZW1lbnRJbmZvcm1hdGlvbihlbGVtZW50LCBkb21FTCwgZmlyc3QgPSBmYWxzZSkgew0KICAgICAgICB2YXIgciA9IHRoaXMuZWxlbWVudEZ1bmN0aW9uc1tlbGVtZW50LnR5cGVdLnNldChlbGVtZW50LCBkb21FTCk7DQoNCiAgICAgICAgaWYgKCFyLmluY2x1ZGVzKCJzdHlsZV9wb3N0aW9uIikpIGRvbUVMLnN0eWxlLnBvc2l0aW9uID0gImFic29sdXRlIjsNCiAgICAgICAgaWYgKCFyLmluY2x1ZGVzKCJzdHlsZV9sZWZ0IikpIGRvbUVMLnN0eWxlLmxlZnQgPSBlbGVtZW50LnBvcy54ICsgInB4IjsNCiAgICAgICAgaWYgKCFyLmluY2x1ZGVzKCJzdHlsZV90b3AiKSkgZG9tRUwuc3R5bGUudG9wID0gZWxlbWVudC5wb3MueSArICJweCI7DQogICAgICAgIGlmICghci5pbmNsdWRlcygic3R5bGVfd2lkdGgiKSkgZG9tRUwuc3R5bGUud2lkdGggPSBlbGVtZW50LnNpemUud2lkdGggKyAicHgiOw0KICAgICAgICBpZiAoIXIuaW5jbHVkZXMoInN0eWxlX2hlaWdodCIpKSBkb21FTC5zdHlsZS5oZWlnaHQgPSBlbGVtZW50LnNpemUuaGVpZ2h0ICsgInB4IjsNCiAgICAgICAgaWYgKCFyLmluY2x1ZGVzKCJzdHlsZV96SW5kZXgiKSkgZG9tRUwuc3R5bGUuekluZGV4ID0gZWxlbWVudC5sYXllcjsNCg0KICAgICAgICB0aGlzLmd1aS5zZXRQYWdlKHRoaXMuZWxlbWVudHMpOw0KICAgICAgICBpZiAoIWZpcnN0KSB7DQogICAgICAgICAgICB0aGlzLmFsaWduTGluZXNbZWxlbWVudC5pZF0gPSB0aGlzLmNyZWF0ZUFsaWduTGluZXMoZWxlbWVudC5pZCk7DQogICAgICAgICAgICB0aGlzLmdlbkFsbEFsaWduTGluZXMoKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGNyZWF0ZUFsaWduTGluZXMoaWQpIHsNCiAgICAgICAgdmFyIGVsZW1lbnQgPSB0aGlzLmVsZW1lbnRzW2lkXTsNCiAgICAgICAgdmFyIG91dCA9IHt9Ow0KICAgICAgICBvdXRbInZlcnRpY2FsIl0gPSBbZWxlbWVudC5wb3MueCwgZWxlbWVudC5wb3MueCArIGVsZW1lbnQuc2l6ZS53aWR0aF07DQogICAgICAgIG91dFsiaG9yaXpvbnRhbCJdID0gW2VsZW1lbnQucG9zLnksIGVsZW1lbnQucG9zLnkgKyBlbGVtZW50LnNpemUuaGVpZ2h0XTsNCiAgICAgICAgcmV0dXJuIG91dDsNCiAgICB9DQoNCiAgICBhc3luYyBlZGl0Q29udGVudCgpIHsNCiAgICAgICAgdGhpcy5lZGl0aW5nID0gdHJ1ZTsNCiAgICAgICAgdmFyIGVsZW1lbnQgPSB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ107DQogICAgICAgIHZhciByID0gYXdhaXQgdGhpcy5lbGVtZW50RnVuY3Rpb25zW2VsZW1lbnQudHlwZV0uZWRpdENvbnRlbnQoZWxlbWVudCwgdGhpcy5ub3dFZGl0aW5nLCB0aGlzLmNvbnRlbnQpOw0KICAgICAgICBpZiAociAhPSB0cnVlKSB7DQogICAgICAgICAgICBjb25zb2xlLmxvZygiZWRpdENvbnRlbnQgcmV0dXJuZWQgZmFsc2UiKQ0KICAgICAgICAgICAgdGhpcy5lZGl0aW5nID0gZmFsc2U7DQogICAgICAgICAgICB0aGlzLm5vd0VkaXRpbmcgPSBudWxsOw0KICAgICAgICAgICAgdGhpcy5oaWRlQ29udGVudENoYW5nZXIoKTsNCiAgICAgICAgICAgIHRoaXMudXBkYXRlU2VsZWN0KCk7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICByZWxvYWRFbGVtZW50KGlkKSB7DQogICAgICAgIHRoaXMuc2V0RWxlbWVudEluZm9ybWF0aW9uKHRoaXMuZWxlbWVudHNbaWRdLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBbdXVpZD0iJHtpZH0iXWApKTsNCiAgICB9DQoNCiAgICBhc3luYyBjbGljayhpZCkgew0KICAgICAgICAvL3RoaXMuZWxlbWVudHNbaWRdLnBvcy54ICs9IDEwOw0KICAgICAgICBpZiAodGhpcy5ub3dFZGl0aW5nICE9IHVuZGVmaW5lZCkgew0KICAgICAgICAgICAgaWYgKHRoaXMuZWRpdGluZykgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmNvbnRlbnQucXVlcnlTZWxlY3RvcihgW3V1aWQ9IiR7dGhpcy5ub3dFZGl0aW5nfSJdYCkgPT0gbnVsbCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmVkaXRpbmcgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLm5vd0VkaXRpbmcgPSBpZDsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTZWxlY3QoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRDb250ZW50Q2hhbmdlcigpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHRoaXMuY29udGVudC5xdWVyeVNlbGVjdG9yKGBbdXVpZD0iJHt0aGlzLm5vd0VkaXRpbmd9Il1gKS5zdHlsZS5kaXNwbGF5ID0gIiI7DQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLmRhdGEgPSAoYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQoImNvbnRlbnRDaGFuZ2VyQ2hhbmdlVGV4dCIpKS52YWx1ZTsNCiAgICAgICAgICAgICAgICAoYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQoImNvbnRlbnRDaGFuZ2VyQ2hhbmdlVGV4dCIpKS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOw0KICAgICAgICAgICAgICAgIHRoaXMuZWRpdGluZyA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIHRoaXMucmVsb2FkRWxlbWVudCh0aGlzLm5vd0VkaXRpbmcpOw0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMubm93RWRpdGluZyA9PSBpZCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmVkaXRDb250ZW50KCk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgdGhpcy5ub3dFZGl0aW5nID0gaWQ7DQogICAgICAgIHRoaXMudXBkYXRlU2VsZWN0KCk7DQogICAgICAgIHRoaXMuc2V0Q29udGVudENoYW5nZXIoKTsNCiAgICB9DQoNCiAgICBzZXRDb250ZW50Q2hhbmdlcigpIHsNCiAgICAgICAgdmFyIGVsZW1lbnQgPSB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ107DQogICAgICAgIHRoaXMuY29udGVudENoYW5nZXIuc3R5bGUuZGlzcGxheSA9ICIiOw0KICAgICAgICB0aGlzLmNvbnRlbnRDaGFuZ2VyLnN0eWxlLnBvc2l0aW9uID0gImFic29sdXRlIjsNCiAgICAgICAgdGhpcy5jb250ZW50Q2hhbmdlci5zdHlsZS5sZWZ0ID0gZWxlbWVudC5wb3MueCArICJweCI7DQogICAgICAgIHRoaXMuY29udGVudENoYW5nZXIuc3R5bGUudG9wID0gZWxlbWVudC5wb3MueSArICJweCI7DQogICAgICAgIHRoaXMuY29udGVudENoYW5nZXIuc3R5bGUud2lkdGggPSBlbGVtZW50LnNpemUud2lkdGggKyAicHgiOw0KICAgICAgICB0aGlzLmNvbnRlbnRDaGFuZ2VyLnN0eWxlLmhlaWdodCA9IGVsZW1lbnQuc2l6ZS5oZWlnaHQgKyAicHgiOw0KICAgIH0NCiAgICBoaWRlQ29udGVudENoYW5nZXIoKSB7DQogICAgICAgIHRoaXMuY29udGVudENoYW5nZXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjsNCiAgICB9DQoNCiAgICBnZXQgcHJvamVjdFBhdGgoKSB7DQogICAgICAgIHJldHVybiB0aGlzLmdldFBhdGgoKTsNCiAgICB9DQoNCiAgICBnZXQgc2F2ZUZpbGUoKSB7DQogICAgICAgIHJldHVybiB0aGlzLmdldFNhdmVGaWxlKCk7DQogICAgfQ0KDQogICAgc2V0UGl4ZWxSYXRpbyhyKSB7DQogICAgICAgIHRoaXMuY29udGVudC5zdHlsZS53aWR0aCA9IHIuc3BsaXQoIjoiKVswXSArICJweCI7DQogICAgICAgIHRoaXMuY29udGVudC5zdHlsZS5oZWlnaHQgPSByLnNwbGl0KCI6IilbMV0gKyAicHgiOw0KDQogICAgICAgIHRoaXMuYWxpZ25MaW5lSG9yaXpvbnRhbC5zdHlsZS5oZWlnaHQgPSByLnNwbGl0KCI6IilbMV0gKyAicHgiOw0KICAgICAgICB0aGlzLmFsaWduTGluZUhvcml6b250YWwuc3R5bGUudG9wID0gIjBweCI7DQogICAgICAgIHRoaXMuYWxpZ25MaW5lVmVydGljYWwuc3R5bGUud2lkdGggPSByLnNwbGl0KCI6IilbMF0gKyAicHgiOw0KICAgICAgICB0aGlzLmFsaWduTGluZVZlcnRpY2FsLnN0eWxlLmxlZnQgPSAiMHB4IjsNCg0KICAgICAgICB0aGlzLmFwcGx5Wm9vbSgpOw0KICAgIH0NCg0KICAgIGdlbkFsbEFsaWduTGluZXMoKSB7DQogICAgICAgIGlmICghdGhpcy5hbGlnbkxpbmVzVmlzaWJsZSkgeyByZXR1cm4gfQ0KICAgICAgICB0aGlzLmFsbEFsaWduTGluZXMuaW5uZXJIVE1MID0gIiI7DQoNCiAgICAgICAgZm9yICh2YXIgeCBpbiB0aGlzLmFsaWduTGluZXMpIHsNCiAgICAgICAgICAgIHZhciBsaW5lcyA9IHRoaXMuYWxpZ25MaW5lc1t4XTsNCg0KICAgICAgICAgICAgZm9yICh2YXIgeSBvZiBsaW5lcy5ob3Jpem9udGFsKSB7DQogICAgICAgICAgICAgICAgdmFyIGxpbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsNCiAgICAgICAgICAgICAgICBsaW5lLnN0eWxlLnBvc2l0aW9uID0gImFic29sdXRlIjsNCiAgICAgICAgICAgICAgICBsaW5lLnN0eWxlLnRvcCA9ICh5IC0gLjUpICsgInB4IjsNCiAgICAgICAgICAgICAgICBsaW5lLnN0eWxlLmxlZnQgPSAiMHB4IjsNCiAgICAgICAgICAgICAgICBsaW5lLnN0eWxlLndpZHRoID0gIjEwMCUiOw0KICAgICAgICAgICAgICAgIGxpbmUuc3R5bGUuaGVpZ2h0ID0gIjAiOw0KICAgICAgICAgICAgICAgIGxpbmUuc3R5bGUuYm9yZGVyVG9wID0gIjFweCAjY2JjYmNiYzcgZG90dGVkIjsNCiAgICAgICAgICAgICAgICB0aGlzLmFsbEFsaWduTGluZXMuYXBwZW5kQ2hpbGQobGluZSk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGZvciAodmFyIHkgb2YgbGluZXMudmVydGljYWwpIHsNCiAgICAgICAgICAgICAgICB2YXIgbGluZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOw0KICAgICAgICAgICAgICAgIGxpbmUuc3R5bGUucG9zaXRpb24gPSAiYWJzb2x1dGUiOw0KICAgICAgICAgICAgICAgIGxpbmUuc3R5bGUudG9wID0gIjBweCI7DQogICAgICAgICAgICAgICAgbGluZS5zdHlsZS5sZWZ0ID0gKHkgLSAuNSkgKyAicHgiOw0KICAgICAgICAgICAgICAgIGxpbmUuc3R5bGUuaGVpZ2h0ID0gIjEwMCUiOw0KICAgICAgICAgICAgICAgIGxpbmUuc3R5bGUud2lkdGggPSAiMCI7DQogICAgICAgICAgICAgICAgbGluZS5zdHlsZS5ib3JkZXJMZWZ0ID0gIjFweCAjY2JjYmNiYzcgZG90dGVkIjsNCiAgICAgICAgICAgICAgICB0aGlzLmFsbEFsaWduTGluZXMuYXBwZW5kQ2hpbGQobGluZSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBzZXRWaXNpYmxlQWxpZ25MaW5lKHZhbCkgew0KICAgICAgICB0aGlzLmFsaWduTGluZXNWaXNpYmxlID0gdmFsOw0KICAgICAgICB0aGlzLmFsbEFsaWduTGluZXMuc3R5bGUuZGlzcGxheSA9IHZhbCA/ICIiIDogIm5vbmUiOw0KICAgICAgICB0aGlzLmdlbkFsbEFsaWduTGluZXMoKTsNCiAgICB9DQp9DQpuZXcgZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yKCk7Cg==", "ribbon": {"add.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiRWxlbWVudHMiOw0KICAgIH0NCiAgICBnZXRQb3MoKSB7DQogICAgICAgIHJldHVybiAzMDsNCiAgICB9DQogICAgZ2V0RnVuY3Rpb25zKCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgInRleHQiOiB7ICJ0eXBlIjogImJ1dHRvbiIsICJjaGFuZ2UiOiB0aGlzLnRleHQgfSwNCiAgICAgICAgICAgICJib3giOiB7ICJ0eXBlIjogImJ1dHRvbiIsICJjaGFuZ2UiOiB0aGlzLmJveCB9LA0KICAgICAgICAgICAgImNpcmNsZSI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuY2lyY2xlIH0sDQogICAgICAgICAgICAiYnV0dG9uIjogeyAidHlwZSI6ICJidXR0b24iLCAiY2hhbmdlIjogdGhpcy5idXR0b24gfSwNCiAgICAgICAgICAgICJpbWFnZSI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuaW1hZ2UgfSwNCiAgICAgICAgICAgICJ3ZWJzaXRlIjogeyAidHlwZSI6ICJidXR0b24iLCAiY2hhbmdlIjogdGhpcy53ZWJzaXRlIH0sDQogICAgICAgIH0NCiAgICB9DQogICAgLyoqDQogICAgICogDQogICAgICogQHBhcmFtIHtleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3J9IGVkaXRvciANCiAgICAgKi8NCiAgICBhc3luYyB0ZXh0KGVkaXRvcikgew0KICAgICAgICBlZGl0b3IuY3JlYXRlRWxlbWVudCh7DQogICAgICAgICAgICAidHlwZSI6ICJ0ZXh0IiwNCiAgICAgICAgICAgICJkYXRhIjogIlRleHQiLA0KICAgICAgICAgICAgInBvcyI6IHsNCiAgICAgICAgICAgICAgICB4OiAxMCwNCiAgICAgICAgICAgICAgICB5OiAxMA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICJzaXplIjogew0KICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAsDQogICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDANCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAic3R5bGluZyI6IHsNCiAgICAgICAgICAgICAgICAiZm9udFNpemUiOiA0MCwNCiAgICAgICAgICAgICAgICAiZm9udEZhbWlseSI6ICJBcmlhbCIsDQogICAgICAgICAgICAgICAgImNvbG9yIjogIiMwMDAwMDBmZiIsDQogICAgICAgICAgICAgICAgImJhY2tncm91bmRDb2xvciI6ICIjMDAwMDAwMDAiLA0KICAgICAgICAgICAgICAgICJib3JkZXIiOiAiMSIsDQogICAgICAgICAgICAgICAgImJvcmRlckNvbG9yIjogIiMwMDAwMDBmZiIsDQogICAgICAgICAgICB9DQogICAgICAgIH0pOw0KICAgIH0NCiAgICBhc3luYyBib3goZWRpdG9yKSB7DQogICAgICAgIGVkaXRvci5jcmVhdGVFbGVtZW50KHsNCiAgICAgICAgICAgICJ0eXBlIjogImJveCIsDQogICAgICAgICAgICAiZGF0YSI6IG51bGwsDQogICAgICAgICAgICAicG9zIjogew0KICAgICAgICAgICAgICAgIHg6IDEwLA0KICAgICAgICAgICAgICAgIHk6IDEwDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgInNpemUiOiB7DQogICAgICAgICAgICAgICAgd2lkdGg6IDEwMCwNCiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICJzdHlsaW5nIjogew0KICAgICAgICAgICAgICAgICJiYWNrZ3JvdW5kQ29sb3IiOiAiI2ZmMDAwMGZmIiwNCiAgICAgICAgICAgICAgICAiYm9yZGVyIjogIjIiLA0KICAgICAgICAgICAgICAgICJib3JkZXJDb2xvciI6ICIjMDAwMDAwZmYiLA0KICAgICAgICAgICAgfQ0KICAgICAgICB9KTsNCiAgICB9DQogICAgYXN5bmMgY2lyY2xlKGVkaXRvcikgew0KICAgICAgICBlZGl0b3IuY3JlYXRlRWxlbWVudCh7DQogICAgICAgICAgICAidHlwZSI6ICJjaXJjbGUiLA0KICAgICAgICAgICAgImRhdGEiOiBudWxsLA0KICAgICAgICAgICAgInBvcyI6IHsNCiAgICAgICAgICAgICAgICB4OiAxMCwNCiAgICAgICAgICAgICAgICB5OiAxMA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICJzaXplIjogew0KICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAsDQogICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDANCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAic3R5bGluZyI6IHsNCiAgICAgICAgICAgICAgICAiYmFja2dyb3VuZENvbG9yIjogIiMwMGZmMDBmZiIsDQogICAgICAgICAgICAgICAgImJvcmRlciI6ICIyIiwNCiAgICAgICAgICAgICAgICAiYm9yZGVyQ29sb3IiOiAiIzAwMDAwMGZmIiwNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSk7DQogICAgfQ0KICAgIGFzeW5jIGJ1dHRvbigpIHsNCiAgICAgICAgY29uc29sZS53YXJuKCJidXR0b24gbm90IGltcGxlbWVudGVkIik7DQogICAgfQ0KICAgIGFzeW5jIGltYWdlKGVkaXRvcikgew0KICAgICAgICBlZGl0b3IuY3JlYXRlRWxlbWVudCh7DQogICAgICAgICAgICAidHlwZSI6ICJpbWFnZSIsDQogICAgICAgICAgICAiZGF0YSI6ICJodHRwczovL3d3dy5nb29nbGUuY29tL2ltYWdlcy9icmFuZGluZy9nb29nbGVsb2dvLzJ4L2dvb2dsZWxvZ29fY29sb3JfMjcyeDkyZHAucG5nIiwNCiAgICAgICAgICAgICJwb3MiOiB7DQogICAgICAgICAgICAgICAgeDogMTAsDQogICAgICAgICAgICAgICAgeTogMTANCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAic2l6ZSI6IHsNCiAgICAgICAgICAgICAgICB3aWR0aDogMTAwLA0KICAgICAgICAgICAgICAgIGhlaWdodDogMTAwDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgInN0eWxpbmciOiB7DQogICAgICAgICAgICAgICAgImNvbnNpc3RlbnRTaXplIjogZmFsc2UsDQogICAgICAgICAgICAgICAgImJhY2tncm91bmRDb2xvciI6ICIjMDAwMDAwMDAiLA0KICAgICAgICAgICAgICAgICJib3JkZXIiOiAiMCIsDQogICAgICAgICAgICAgICAgImJvcmRlckNvbG9yIjogIiMwMDAwMDBmZiIsDQogICAgICAgICAgICB9DQogICAgICAgIH0pOw0KICAgIH0NCiAgICBhc3luYyB3ZWJzaXRlKCkgew0KICAgICAgICBjb25zb2xlLndhcm4oIndlYnNpdGUgbm90IGltcGxlbWVudGVkIik7DQogICAgfQ0KfSkoKTs=", "background.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgICAgIHRoaXMuZWxlbWVudCA9IG51bGw7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiQmFja2dyb3VuZCI7DQogICAgfQ0KICAgIGdldFBvcygpIHsNCiAgICAgICAgcmV0dXJuIDM2Ow0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge3t0eXBlOnN0cmluZywgZGF0YTpzdHJpbmd8YW55LCBwb3M6e3g6bnVtYmVyLHk6bnVtYmVyfSwgc2l6ZTp7d2lkdGg6bnVtYmVyLGhlaWdodDpudW1iZXJ9LCBzdHlsaW5nOmFueX19IGVsZW1lbnQNCiAgICAgKi8NCiAgICBnZXRGdW5jdGlvbnMoZWxlbWVudCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgIkJhY2tncm91bmQgY29sb3IiOiB7ICJ0eXBlIjogImNvbG9yIiwgImNoYW5nZSI6IHRoaXMuc2V0QmFja2dyb3VuZGNvbG9yLmJpbmQodGhpcyksICJnZXQiOiB0aGlzLmdldEJhY2tncm91bmRjb2xvci5iaW5kKHRoaXMpLCAibm9hbHBoYSI6IHRydWUgfSwNCiAgICAgICAgICAgICJfc2VwYXJhdG9yIjogIiIsDQogICAgICAgICAgICAiQmFja2dyb3VuZCBJbWFnZSI6IHsgInR5cGUiOiAiZmlsZSIsICJjaGFuZ2UiOiB0aGlzLnNldEJhY2tncm91bmRJbWFnZS5iaW5kKHRoaXMpLCAiZ2V0IjogdGhpcy5nZXRCYWNrZ3JvdW5kSW1hZ2UuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgIkJhY2tncm91bmQgSW1hZ2UgVXJsIjogeyAidHlwZSI6ICJzdHJpbmdBc2siLCAiY2hhbmdlIjogdGhpcy5pbWFnZVVybC5iaW5kKHRoaXMpLCAiZ2V0IjogdGhpcy5nZXRJbWFnZS5iaW5kKHRoaXMpIH0sDQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcmliYm9ufSByaWJib24NCiAgICAgKi8NCiAgICBnZXRCYWNrZ3JvdW5kY29sb3IocmliYm9uKSB7DQogICAgICAgIGlmIChyaWJib24uZWRpdG9yLmd1aS5wcm9qZWN0LnBhZ2VzW3JpYmJvbi5lZGl0b3IuZ3VpLnBhZ2VdLmJhY2tncm91bmQudHlwZSAhPSAiY29sb3IiKSB7DQogICAgICAgICAgICByZXR1cm4gIiMwMDAwMDBmZiI7DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIHJpYmJvbi5lZGl0b3IuZ3VpLnByb2plY3QucGFnZXNbcmliYm9uLmVkaXRvci5ndWkucGFnZV0uYmFja2dyb3VuZC5jb2xvcjsNCiAgICB9DQogICAgLyoqDQogICAgICogQHBhcmFtIHtleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3J9IGVkaXRvciANCiAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgDQogICAgICovDQogICAgc2V0QmFja2dyb3VuZGNvbG9yKGVkaXRvciwgY29sb3IpIHsNCiAgICAgICAgZWRpdG9yLmd1aS5wcm9qZWN0LnBhZ2VzW2VkaXRvci5ndWkucGFnZV0uYmFja2dyb3VuZC50eXBlID0gImNvbG9yIg0KICAgICAgICBjb2xvciA9IGNvbG9yLnN1YnN0cmluZygwLCA3KSArICJmZiI7DQogICAgICAgIGVkaXRvci5ndWkucHJvamVjdC5wYWdlc1tlZGl0b3IuZ3VpLnBhZ2VdLmJhY2tncm91bmQuY29sb3IgPSBjb2xvcjsNCiAgICAgICAgdGhpcy51cGRhdGVCYWNrZ3JvdW5kKGVkaXRvcik7DQogICAgfQ0KICAgIC8qKg0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3INCiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZmlsZVBhdGgNCiAgICAgKi8NCiAgICBhc3luYyBzZXRCYWNrZ3JvdW5kSW1hZ2UoZWRpdG9yLCBmaWxlUGF0aCkgew0KICAgICAgICBlZGl0b3IuZ3VpLnByb2plY3QucGFnZXNbZWRpdG9yLmd1aS5wYWdlXS5iYWNrZ3JvdW5kLnR5cGUgPSAiaW1hZ2UiDQogICAgICAgIGVkaXRvci5ndWkucHJvamVjdC5wYWdlc1tlZGl0b3IuZ3VpLnBhZ2VdLmJhY2tncm91bmQuZGF0YSA9IFN5c3RlbUZpbGVTeXN0ZW0udG9JbWcoYXdhaXQgU3lzdGVtRmlsZVN5c3RlbS5nZXRGaWxlU3RyaW5nKGZpbGVQYXRoKSkNCiAgICAgICAgdGhpcy51cGRhdGVCYWNrZ3JvdW5kKGVkaXRvcik7DQogICAgfQ0KICAgIC8qKg0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9yaWJib259IHJpYmJvbg0KICAgICAqLw0KICAgIGdldEJhY2tncm91bmRJbWFnZShyaWJib24pIHsNCg0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1cmwNCiAgICAgKi8NCiAgICBhc3luYyBpbWFnZVVybChlZGl0b3IsIHVybCkgew0KICAgICAgICB2YXIgbiA9IGF3YWl0IFN5c3RlbS5uZXR3b3JrLmluZm9ybWF0aW9uYWxGZXRjaF9UZXh0KHVybCk7DQogICAgICAgIGVkaXRvci5ndWkucHJvamVjdC5wYWdlc1tlZGl0b3IuZ3VpLnBhZ2VdLmJhY2tncm91bmQudHlwZSA9ICJpbWFnZSINCiAgICAgICAgZWRpdG9yLmd1aS5wcm9qZWN0LnBhZ2VzW2VkaXRvci5ndWkucGFnZV0uYmFja2dyb3VuZC5kYXRhID0gU3lzdGVtRmlsZVN5c3RlbS50b0ltZyhuKQ0KICAgICAgICB0aGlzLnVwZGF0ZUJhY2tncm91bmQoZWRpdG9yKTsNCiAgICB9DQogICAgLyoqDQogICAgICogQHBhcmFtIHtleGl0TWVfZ3VpX3JpYmJvbn0gcmliYm9uDQogICAgICovDQogICAgZ2V0SW1hZ2UocmliYm9uKSB7DQoNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIHVwZGF0ZUJhY2tncm91bmQoZWRpdG9yKSB7DQogICAgICAgIGlmIChlZGl0b3IuZ3VpLnByb2plY3QucGFnZXNbZWRpdG9yLmd1aS5wYWdlXS5iYWNrZ3JvdW5kLnR5cGUgPT0gImNvbG9yIikgew0KICAgICAgICAgICAgZWRpdG9yLmNvbnRlbnQuc3R5bGUuYmFja2dyb3VuZCA9IGVkaXRvci5ndWkucHJvamVjdC5wYWdlc1tlZGl0b3IuZ3VpLnBhZ2VdLmJhY2tncm91bmQuY29sb3I7DQogICAgICAgIH0gZWxzZSBpZiAoZWRpdG9yLmd1aS5wcm9qZWN0LnBhZ2VzW2VkaXRvci5ndWkucGFnZV0uYmFja2dyb3VuZC50eXBlID09ICJpbWFnZSIpIHsNCiAgICAgICAgICAgIGVkaXRvci5jb250ZW50LnN0eWxlLmJhY2tncm91bmQgPSAidXJsKCIgKyBlZGl0b3IuZ3VpLnByb2plY3QucGFnZXNbZWRpdG9yLmd1aS5wYWdlXS5iYWNrZ3JvdW5kLmRhdGEgKyAiKSI7DQogICAgICAgIH0NCiAgICB9DQp9KSgpOw==", "edit.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgICAgIHRoaXMuZWxlbWVudCA9IG51bGw7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiRWRpdCI7DQogICAgfQ0KICAgIGdldFBvcygpIHsNCiAgICAgICAgcmV0dXJuIDIwOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge3t0eXBlOnN0cmluZywgZGF0YTpzdHJpbmd8YW55LCBwb3M6e3g6bnVtYmVyLHk6bnVtYmVyfSwgc2l6ZTp7d2lkdGg6bnVtYmVyLGhlaWdodDpudW1iZXJ9LCBzdHlsaW5nOmFueX19IGVsZW1lbnQNCiAgICAgKi8NCiAgICBnZXRGdW5jdGlvbnMoZWxlbWVudCkgew0KICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50Ow0KDQogICAgICAgIGlmIChlbGVtZW50ID09IG51bGwpIHsNCiAgICAgICAgICAgIHJldHVybiB7fTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoZWxlbWVudC50eXBlID09ICJib3giIHx8IGVsZW1lbnQudHlwZSA9PSAiY2lyY2xlIiB8fCBlbGVtZW50LnR5cGUgPT0gInRleHQiIHx8IGVsZW1lbnQudHlwZSA9PSAiaW1hZ2UiKSB7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgICJfZGVzY3JpcHRvciI6ICJCYWNrZ3JvdW5kIiwNCiAgICAgICAgICAgICAgICAiQmFja2dyb3VuZCI6IHsgInR5cGUiOiAiY29sb3IiLCAiY2hhbmdlIjogdGhpcy5iYWNrZ3JvdW5kQ29sb3IuYmluZCh0aGlzKSwgImdldCI6IHRoaXMuZ2V0QmFja2dyb3VuZENvbG9yLmJpbmQodGhpcykgfSwNCiAgICAgICAgICAgICAgICAiX3NlcGFyYXRvciI6ICIiLA0KICAgICAgICAgICAgICAgICJfZGVzY3JpcHRvcjIiOiAiQm9yZGVyIiwNCiAgICAgICAgICAgICAgICAiQm9yZGVyIjogeyAidHlwZSI6ICJudW1iZXIiLCAiY2hhbmdlIjogdGhpcy5ib3JkZXIuYmluZCh0aGlzKSwgImdldCI6IHRoaXMuZ2V0Qm9yZGVyLmJpbmQodGhpcykgfSwNCiAgICAgICAgICAgICAgICAiQm9yZGVyQ29sb3IiOiB7ICJ0eXBlIjogImNvbG9yIiwgImNoYW5nZSI6IHRoaXMuYm9yZGVyQ29sb3IuYmluZCh0aGlzKSwgImdldCI6IHRoaXMuZ2V0Qm9yZGVyQ29sb3IuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgcmV0dXJuIHt9Ow0KICAgICAgICB9DQogICAgfQ0KICAgIGdldEJhY2tncm91bmRDb2xvcigpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudC5zdHlsaW5nLmJhY2tncm91bmRDb2xvcjsNCiAgICB9DQogICAgLyoqDQogICAgICogQHBhcmFtIHtleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3J9IGVkaXRvciANCiAgICAgKiBAcGFyYW0ge0hUTUxJbnB1dEVsZW1lbnR9IGVsZW1lbnQgDQogICAgICovDQogICAgYmFja2dyb3VuZENvbG9yKGVkaXRvciwgY29sb3IpIHsNCiAgICAgICAgZWRpdG9yLmVsZW1lbnRzW2VkaXRvci5ub3dFZGl0aW5nXS5zdHlsaW5nLmJhY2tncm91bmRDb2xvciA9IGNvbG9yOw0KICAgICAgICBlZGl0b3IucmVsb2FkRWxlbWVudChlZGl0b3Iubm93RWRpdGluZyk7DQogICAgfQ0KDQogICAgYm9yZGVyKGVkaXRvciwgZWwpIHsNCiAgICAgICAgaWYgKHBhcnNlSW50KGVsLnZhbHVlKSA8IDApIHsNCiAgICAgICAgICAgIGVsLnZhbHVlID0gMDsNCiAgICAgICAgfQ0KICAgICAgICBlZGl0b3IuZWxlbWVudHNbZWRpdG9yLm5vd0VkaXRpbmddLnN0eWxpbmcuYm9yZGVyID0gZWwudmFsdWU7DQogICAgICAgIGVkaXRvci5yZWxvYWRFbGVtZW50KGVkaXRvci5ub3dFZGl0aW5nKTsNCiAgICB9DQogICAgZ2V0Qm9yZGVyKCkgew0KICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LnN0eWxpbmcuYm9yZGVyOw0KICAgIH0NCiAgICBib3JkZXJDb2xvcihlZGl0b3IsIGNvbG9yKSB7DQogICAgICAgIGVkaXRvci5lbGVtZW50c1tlZGl0b3Iubm93RWRpdGluZ10uc3R5bGluZy5ib3JkZXJDb2xvciA9IGNvbG9yOw0KICAgICAgICBlZGl0b3IucmVsb2FkRWxlbWVudChlZGl0b3Iubm93RWRpdGluZyk7DQogICAgfQ0KICAgIGdldEJvcmRlckNvbG9yKCkgew0KICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LnN0eWxpbmcuYm9yZGVyQ29sb3I7DQogICAgfQ0KfSkoKTs=", "file.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiZmlsZSI7DQogICAgfQ0KICAgIGdldFBvcygpIHsNCiAgICAgICAgcmV0dXJuIDA7DQogICAgfQ0KICAgIGdldEZ1bmN0aW9ucygpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICJzYXZlUHJvamVjdCI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuc2F2ZVByb2plY3QuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgInNhdmVQcm9qZWN0QXMiOiB7ICJ0eXBlIjogImJ1dHRvbiIsICJjaGFuZ2UiOiB0aGlzLnNhdmVQcm9qZWN0QXMuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgImNsb3NlUHJvamVjdCI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuY2xvc2VQcm9qZWN0IH0sDQogICAgICAgICAgICAiZXhpdCI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuZXhpdCB9LA0KICAgICAgICAgICAgInBpeGVsIHJhdGlvIjogeyAidHlwZSI6ICJ0ZXh0IiwgImNoYW5nZSI6IHRoaXMuc2V0UGl4ZWxSYXRpby5iaW5kKHRoaXMpLCAiZ2V0IjogdGhpcy5nZXRQaXhlbFJhdGlvIH0NCiAgICAgICAgfQ0KICAgIH0NCiAgICAvKioNCiAgICAgKiANCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIGFzeW5jIHNhdmVQcm9qZWN0KGVkaXRvcikgew0KICAgICAgICB2YXIgeCA9IHRoaXMuZ2VuZXJhdGVTYXZlRmlsZShlZGl0b3IpOw0KICAgICAgICBTeXN0ZW1GaWxlU3lzdGVtLnNldEZpbGVTdHJpbmcoZWRpdG9yLnByb2plY3RQYXRoLCBKU09OLnN0cmluZ2lmeSh4KSk7DQogICAgfQ0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3IgDQogICAgICovDQogICAgYXN5bmMgc2F2ZVByb2plY3RBcyhlZGl0b3IpIHsNCiAgICAgICAgY29uc29sZS53YXJuKCJzYXZlUHJvamVjdEFzIG5vdCBpbXBsZW1lbnRlZCIpOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiANCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIGFzeW5jIGNsb3NlUHJvamVjdChlZGl0b3IpIHsNCiAgICAgICAgY29uc29sZS53YXJuKCJjbG9zZVByb2plY3Qgbm90IGltcGxlbWVudGVkIik7DQogICAgfQ0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3IgDQogICAgICovDQogICAgYXN5bmMgZXhpdChlZGl0b3IpIHsNCiAgICAgICAgY29uc29sZS53YXJuKCJleGl0IG5vdCBpbXBsZW1lbnRlZCIpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3INCiAgICAgKi8NCiAgICBnZW5lcmF0ZVNhdmVGaWxlKGVkaXRvcikgew0KICAgICAgICByZXR1cm4gZWRpdG9yLnNhdmVGaWxlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3INCiAgICAgKi8NCiAgICBzZXRQaXhlbFJhdGlvKGVkaXRvciwgZWxlbWVudCkgew0KICAgICAgICBlZGl0b3IuZ3VpLnByb2plY3QucGl4ZWxSYXRpbyA9IGVsZW1lbnQudmFsdWU7DQogICAgICAgIGVkaXRvci5ndWkubG9hZFByb2plY3RTZXR0aW5ncygpOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcmliYm9ufSByaWJib24NCiAgICAgKi8NCiAgICBnZXRQaXhlbFJhdGlvKHJpYmJvbikgew0KICAgICAgICByZXR1cm4gcmliYm9uLmVkaXRvci5ndWkucHJvamVjdC5waXhlbFJhdGlvOw0KICAgIH0NCn0pKCk7", "present.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiUHJlc2VudCI7DQogICAgfQ0KICAgIGdldFBvcygpIHsNCiAgICAgICAgcmV0dXJuIDQwOw0KICAgIH0NCiAgICBnZXRGdW5jdGlvbnMoKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAic3RhcnQiOiB7ICJ0eXBlIjogImJ1dHRvbiIsICJjaGFuZ2UiOiB0aGlzLnN0YXJ0IH0sDQogICAgICAgIH0NCiAgICB9DQogICAgc3RhcnQoKSB7DQoNCiAgICB9DQp9KSgpOw==", "start.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgICAgIHRoaXMuZWxlbWVudCA9IG51bGw7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiU3RhcnQiOw0KICAgIH0NCiAgICBnZXRQb3MoKSB7DQogICAgICAgIHJldHVybiAxMDsNCiAgICB9DQogICAgLyoqDQogICAgICogQHBhcmFtIHt7dHlwZTpzdHJpbmcsIGRhdGE6c3RyaW5nfGFueSwgcG9zOnt4Om51bWJlcix5Om51bWJlcn0sIHNpemU6e3dpZHRoOm51bWJlcixoZWlnaHQ6bnVtYmVyfSwgc3R5bGluZzphbnl9fSBlbGVtZW50DQogICAgICovDQogICAgZ2V0RnVuY3Rpb25zKGVsZW1lbnQpIHsNCiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDsNCg0KICAgICAgICBpZiAoZWxlbWVudCA9PSBudWxsKSB7DQogICAgICAgICAgICByZXR1cm4ge307DQogICAgICAgIH0NCiAgICAgICAgaWYgKGVsZW1lbnQudHlwZSA9PSAidGV4dCIpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgImZvbnRTaXplIjogeyAidHlwZSI6ICJudW1iZXIiLCAiY2hhbmdlIjogdGhpcy5mb250U2l6ZS5iaW5kKHRoaXMpLCAiZ2V0IjogdGhpcy5nZXRGb250U2l6ZS5iaW5kKHRoaXMpIH0sDQogICAgICAgICAgICAgICAgImZvbnRGYW1pbHkiOiB7ICJ0eXBlIjogInRleHQiLCAiY2hhbmdlIjogdGhpcy5mb250RmFtaWx5LmJpbmQodGhpcyksICJnZXQiOiB0aGlzLmdldEZvbnRGYW1pbHkuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgICAgICJjb2xvciI6IHsgInR5cGUiOiAiY29sb3IiLCAiY2hhbmdlIjogdGhpcy5jb2xvci5iaW5kKHRoaXMpLCAiZ2V0IjogdGhpcy5nZXRDb2xvci5iaW5kKHRoaXMpIH0sDQogICAgICAgICAgICAgICAgIl9kZXNjcmlwdG9yIjogIkZvbnQiLA0KICAgICAgICAgICAgICAgICJfc2VwYXJhdG9yIjogIiIsDQogICAgICAgICAgICB9DQogICAgICAgIH0gZWxzZSBpZiAoZWxlbWVudC50eXBlID09ICJpbWFnZSIpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgIkltYWdlIjogeyAidHlwZSI6ICJmaWxlIiwgImNoYW5nZSI6IHRoaXMuaW1hZ2VTcmMuYmluZCh0aGlzKSwgImdldCI6IHRoaXMuZ2V0SW1hZ2UuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgICAgICJJbWFnZSBVcmwiOiB7ICJ0eXBlIjogInN0cmluZ0FzayIsICJjaGFuZ2UiOiB0aGlzLmltYWdlVXJsLmJpbmQodGhpcyksICJnZXQiOiB0aGlzLmdldEltYWdlLmJpbmQodGhpcykgfSwNCiAgICAgICAgICAgICAgICAiQ29uc2lzdGVudCBTaXplIjogeyAidHlwZSI6ICJjaGVja2JveCIsICJjaGFuZ2UiOiB0aGlzLmltYWdlQ29uc2lzdGVudFNpemUuYmluZCh0aGlzKSwgImdldCI6IHRoaXMuZ2V0SW1hZ2VDb25zaXN0ZW50U2l6ZS5iaW5kKHRoaXMpIH0NCiAgICAgICAgICAgIH07DQogICAgICAgIH0gZWxzZSBpZiAoZWxlbWVudC50eXBlID09ICJib3giIHx8IGVsZW1lbnQudHlwZSA9PSAiY2lyY2xlIikgew0KICAgICAgICB9DQogICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgcmV0dXJuIHt9Ow0KICAgICAgICB9DQogICAgfQ0KICAgIGdldEZvbnRTaXplKCkgew0KICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LnN0eWxpbmcuZm9udFNpemU7DQogICAgfQ0KICAgIGdldEZvbnRGYW1pbHkoKSB7DQogICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQuc3R5bGluZy5mb250RmFtaWx5Ow0KICAgIH0NCiAgICBnZXRDb2xvcigpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudC5zdHlsaW5nLmNvbG9yOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yDQogICAgICogQHBhcmFtIHtIVE1MSW5wdXRFbGVtZW50fSBlbGVtZW50IA0KICAgICAqLw0KICAgIGZvbnRTaXplKGVkaXRvciwgZWxlbWVudCkgew0KICAgICAgICBlZGl0b3IuZWxlbWVudHNbZWRpdG9yLm5vd0VkaXRpbmddLnN0eWxpbmcuZm9udFNpemUgPSBlbGVtZW50LnZhbHVlOw0KICAgICAgICBlZGl0b3IucmVsb2FkRWxlbWVudChlZGl0b3Iubm93RWRpdGluZyk7DQogICAgfQ0KICAgIC8qKg0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3IgDQogICAgICogQHBhcmFtIHtIVE1MSW5wdXRFbGVtZW50fSBlbGVtZW50IA0KICAgICAqLw0KICAgIGZvbnRGYW1pbHkoZWRpdG9yLCBlbGVtZW50KSB7DQogICAgICAgIGVkaXRvci5lbGVtZW50c1tlZGl0b3Iubm93RWRpdGluZ10uc3R5bGluZy5mb250RmFtaWx5ID0gZWxlbWVudC52YWx1ZTsNCiAgICAgICAgZWRpdG9yLnJlbG9hZEVsZW1lbnQoZWRpdG9yLm5vd0VkaXRpbmcpOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqIEBwYXJhbSB7c3RyaW5nfSBlbGVtZW50IA0KICAgICAqLw0KICAgIGNvbG9yKGVkaXRvciwgY29sb3IpIHsNCiAgICAgICAgZWRpdG9yLmVsZW1lbnRzW2VkaXRvci5ub3dFZGl0aW5nXS5zdHlsaW5nLmNvbG9yID0gY29sb3I7DQogICAgICAgIGVkaXRvci5yZWxvYWRFbGVtZW50KGVkaXRvci5ub3dFZGl0aW5nKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yDQogICAgICogQHBhcmFtIHtzdHJpbmd9IGZpbGVQYXRoDQogICAgICovDQogICAgYXN5bmMgaW1hZ2VTcmMoZWRpdG9yLCBmaWxlUGF0aCkgew0KICAgICAgICBlZGl0b3IuZWxlbWVudHNbZWRpdG9yLm5vd0VkaXRpbmddLmRhdGEgPSBTeXN0ZW1GaWxlU3lzdGVtLnRvSW1nKGF3YWl0IFN5c3RlbUZpbGVTeXN0ZW0uZ2V0RmlsZVN0cmluZyhmaWxlUGF0aCkpOw0KICAgICAgICBlZGl0b3IuZWxlbWVudHNbZWRpdG9yLm5vd0VkaXRpbmddLnBhdGggPSBmaWxlUGF0aDsNCiAgICAgICAgZWRpdG9yLnJlbG9hZEVsZW1lbnQoZWRpdG9yLm5vd0VkaXRpbmcpOw0KICAgIH0NCg0KICAgIGFzeW5jIGltYWdlVXJsKGVkaXRvciwgdXJsKSB7DQogICAgICAgIHZhciBuID0gYXdhaXQgU3lzdGVtLm5ldHdvcmsuaW5mb3JtYXRpb25hbEZldGNoX1RleHQodXJsKTsNCg0KICAgICAgICBlZGl0b3IuZWxlbWVudHNbZWRpdG9yLm5vd0VkaXRpbmddLmRhdGEgPSBTeXN0ZW1GaWxlU3lzdGVtLnRvSW1nKG4pOw0KICAgICAgICBlZGl0b3IuZWxlbWVudHNbZWRpdG9yLm5vd0VkaXRpbmddLnBhdGggPSAidXJsIjsNCiAgICAgICAgZWRpdG9yLnJlbG9hZEVsZW1lbnQoZWRpdG9yLm5vd0VkaXRpbmcpOw0KICAgIH0NCg0KICAgIGdldEltYWdlKCkgew0KICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LnBhdGg7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtIHtleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3J9IGVkaXRvcg0KICAgICAqIEBwYXJhbSB7SFRNTElucHV0RWxlbWVudH0gZWxlbWVudA0KICAgICAqLw0KICAgIGltYWdlQ29uc2lzdGVudFNpemUoZWRpdG9yLCBlbGVtZW50KSB7DQogICAgICAgIGVkaXRvci5lbGVtZW50c1tlZGl0b3Iubm93RWRpdGluZ10uc3R5bGluZy5jb25zaXN0ZW50U2l6ZSA9IGVsZW1lbnQuY2hlY2tlZDsNCiAgICAgICAgZWRpdG9yLnJlbG9hZEVsZW1lbnQoZWRpdG9yLm5vd0VkaXRpbmcpOw0KICAgIH0NCg0KICAgIGdldEltYWdlQ29uc2lzdGVudFNpemUoKSB7DQogICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQuc3R5bGluZy5jb25zaXN0ZW50U2l6ZTsNCiAgICB9DQp9KSgpOw==", "view.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgICAgIHRoaXMuZWxlbWVudCA9IG51bGw7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiVmlldyI7DQogICAgfQ0KICAgIGdldFBvcygpIHsNCiAgICAgICAgcmV0dXJuIDM1Ow0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge3t0eXBlOnN0cmluZywgZGF0YTpzdHJpbmd8YW55LCBwb3M6e3g6bnVtYmVyLHk6bnVtYmVyfSwgc2l6ZTp7d2lkdGg6bnVtYmVyLGhlaWdodDpudW1iZXJ9LCBzdHlsaW5nOmFueX19IGVsZW1lbnQNCiAgICAgKi8NCiAgICBnZXRGdW5jdGlvbnMoZWxlbWVudCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgIk92ZXJsYXkgb3V0bGluZSI6IHsNCiAgICAgICAgICAgICAgICAidHlwZSI6ICJjaGVja2JveCIsICJjaGFuZ2UiOiB0aGlzLnNldG91dGxpbmUuYmluZCh0aGlzKSwgImdldCI6IHRoaXMuZ2V0b3V0bGluZS5iaW5kKHRoaXMpDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgIkFsaWduIExpbmVzIjogew0KICAgICAgICAgICAgICAgICJ0eXBlIjogImNoZWNrYm94IiwgImNoYW5nZSI6IHRoaXMuc2V0VmlzaWJsZUFsaWduTGluZS5iaW5kKHRoaXMpLCAiZ2V0IjogdGhpcy5nZXRWaXNpYmxlQWxpZ25MaW5lLmJpbmQodGhpcykNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9yaWJib259IGVkaXRvciANCiAgICAgKiBAcmV0dXJucyANCiAgICAgKi8NCiAgICBnZXRvdXRsaW5lKGVkaXRvcikgew0KICAgICAgICByZXR1cm4gZWRpdG9yLmVkaXRvci5vdmVybGF5T3V0bGluZTsNCiAgICB9DQoNCiAgICBzZXRvdXRsaW5lKGVkaXRvciwgZWxlbWVudCkgew0KICAgICAgICBlZGl0b3Iub3ZlcmxheU91dGxpbmUgPSBlbGVtZW50LmNoZWNrZWQ7DQogICAgICAgIGVkaXRvci51cGRhdGVPdmVybGF5T3V0bGluZSgpOw0KICAgIH0NCg0KICAgIHNldFZpc2libGVBbGlnbkxpbmUoZWRpdG9yLCBlbGVtZW50KSB7DQogICAgICAgIGVkaXRvci5zZXRWaXNpYmxlQWxpZ25MaW5lKGVsZW1lbnQuY2hlY2tlZCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogDQogICAgICogQHBhcmFtIHtleGl0TWVfZ3VpX3JpYmJvbn0gZWRpdG9yIA0KICAgICAqIEByZXR1cm5zIA0KICAgICAqLw0KICAgIGdldFZpc2libGVBbGlnbkxpbmUoZWRpdG9yKSB7DQogICAgICAgIHJldHVybiBlZGl0b3IuZWRpdG9yLmFsaWduTGluZXNWaXNpYmxlOw0KICAgIH0NCn0pKCk7"}, "ribbon.js": "", "util": {"projectEditorUtil.js": "Y2xhc3MgZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX3V0aWwgew0KICAgIC8qKg0KICAgICAqIEBwYXJhbSB7e1tpZDpzdHJpbmddOmV4aXRNZV9ndWlfcHJvamVjdEVkaXRvcl9lbGVtZW50fX0gZWxlbWVudHMNCiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfQ0KICAgICAqLw0KICAgIGdldExheWVyTWF4KGVsZW1lbnRzKSB7DQogICAgICAgIHZhciBtYXggPSAtMTsNCiAgICAgICAgZm9yICh2YXIgeCBvZiBPYmplY3QudmFsdWVzKGVsZW1lbnRzKSkgew0KICAgICAgICAgICAgaWYgKHgubGF5ZXIgPiBtYXgpIHsNCiAgICAgICAgICAgICAgICBtYXggPSB4LmxheWVyOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIHJldHVybiBtYXg7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogc29ydHMgZWxlbWVudHMgYnkgbGF5ZXINCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcl9lbGVtZW50W119IGVsZW1lbnRzIA0KICAgICAqIEByZXR1cm5zIHtleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3JfZWxlbWVudFtdfQ0KICAgICAqLw0KICAgIHNvcnRMYXllcnMoZWxlbWVudHMpIHsNCiAgICAgICAgcmV0dXJuIGVsZW1lbnRzLnNvcnQoKGEsIGIpID0+IHsNCiAgICAgICAgICAgIHJldHVybiBhLmxheWVyIC0gYi5sYXllcjsNCiAgICAgICAgfSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtIHt7W2lkOnN0cmluZ106ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX2VsZW1lbnR9fSBlbGVtZW50cw0KICAgICAqIEBwYXJhbSB7c3RyaW5nfSBpZA0KICAgICAqIEBwYXJhbSB7bnVtYmVyfSBsYXllcg0KICAgICAqIEByZXR1cm5zIHt7W2lkOnN0cmluZ106ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX2VsZW1lbnR9fQ0KICAgICAqLw0KICAgIHNldExheWVyKGVsZW1lbnRzLCBpZCwgbGF5ZXIpIHsNCiAgICAgICAgZm9yICh2YXIgeCBvZiBPYmplY3Qua2V5cyhlbGVtZW50cykpIHsNCiAgICAgICAgICAgIGlmIChlbGVtZW50c1t4XS5sYXllciA+PSBsYXllcikgew0KICAgICAgICAgICAgICAgIGVsZW1lbnRzW3hdLmxheWVyKys7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgZWxlbWVudHNbaWRdLmxheWVyID0gbGF5ZXI7DQogICAgICAgIHJldHVybiBlbGVtZW50czsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBtYWtlcyBzdXJlIHRoYXQgdGhlIGxheWVycyBhcmVudCBzcGFjZWQgb3V0DQogICAgICogQHBhcmFtIHt7W2lkOnN0cmluZ106ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX2VsZW1lbnR9fSBlbGVtZW50cyANCiAgICAgKiBAcmV0dXJucyB7e1tpZDpzdHJpbmddOmV4aXRNZV9ndWlfcHJvamVjdEVkaXRvcl9lbGVtZW50fX0NCiAgICAgKi8NCiAgICBjYXBMYXllcnMoZWxlbWVudHMpIHsNCiAgICAgICAgdmFyIGxheWVycyA9IFtdOw0KICAgICAgICB2YXIgZSA9IHt9Ow0KICAgICAgICBmb3IgKHZhciB4IG9mIE9iamVjdC52YWx1ZXMoZWxlbWVudHMpKSB7DQogICAgICAgICAgICBsYXllcnMucHVzaCh4LmxheWVyKTsNCiAgICAgICAgICAgIGVbeC5sYXllcl0gPSB4LmlkOw0KICAgICAgICB9DQoNCiAgICAgICAgbGF5ZXJzLnNvcnQoKGEsIGIpID0+IHsNCiAgICAgICAgICAgIHJldHVybiBhIC0gYjsNCiAgICAgICAgfSk7DQoNCiAgICAgICAgdmFyIGkgPSAwOw0KICAgICAgICBmb3IgKHZhciB4IG9mIGxheWVycykgew0KICAgICAgICAgICAgZWxlbWVudHNbZVt4XV0ubGF5ZXIgPSBpOw0KICAgICAgICAgICAgaSsrOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiBlbGVtZW50czsNCiAgICB9DQogICAgZGV0ZWN0Q29sbGlzaW9ucyhlbGVtZW50cykgew0KICAgICAgICB2YXIgbGF5ZXJzID0gW107DQogICAgICAgIGZvciAodmFyIHggb2YgT2JqZWN0LnZhbHVlcyhlbGVtZW50cykpIHsNCiAgICAgICAgICAgIGlmIChsYXllcnMuaW5jbHVkZXMoeC5sYXllcikpIHsNCiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oImNvbGxpc2lvbiBkZXRlY3RlZCIpOw0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHgpOw0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBsYXllcnMucHVzaCh4LmxheWVyKTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICB9DQp9DQpuZXcgZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX3V0aWwoKTs="}}, "gui.js": "Y2xhc3MgZXhpdE1lX2d1aSBleHRlbmRzIFN5c3RlbS5wcm9ncmFtLmRlZmF1bHQgew0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7SHRtbFdpbmRvd30gd2luZG93IA0KICAgICAqLw0KICAgIGFzeW5jIGluaXQod2luZG93KSB7DQogICAgICAgIHRoaXMuZ2V0UGF0aCA9ICgpID0+IHsgfTsNCiAgICAgICAgdGhpcy50eXBlcyA9IFsicHJvamVjdENob29zZSIsICJwcm9qZWN0RWRpdCJdOw0KICAgICAgICB0aGlzLndpbmRvdyA9IHdpbmRvdzsNCg0KICAgICAgICB0aGlzLmxvYWRQcm9qZWN0ID0gKG5hbWUpID0+IHsgfTsNCiAgICAgICAgdGhpcy5zaG93KCJwcm9qZWN0Q2hvb3NlIik7DQoNCiAgICAgICAgdGhpcy5wcm9qZWN0ID0gbnVsbDsNCiAgICAgICAgdGhpcy5wYWdlID0gMDsNCg0KICAgICAgICAvKioNCiAgICAgICAgICogQHR5cGUge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0NCiAgICAgICAgICovDQogICAgICAgIHRoaXMucHJvamVjdEVkaXRvciA9IGF3YWl0IFN5c3RlbS5wcm9ncmFtLnJ1blByb2dyYW0odGhpcy5QQVRILmZvbGRlcigpICsgIi9ndWkvcHJvamVjdEVkaXRvci5qcyIsIFt0aGlzLndpbmRvdywgdGhpc10pOw0KICAgICAgICB0aGlzLnByb2plY3RFZGl0b3IuZ2V0UGF0aCA9IHRoaXMuZ2V0UGF0aC5iaW5kKHRoaXMpOw0KICAgICAgICB0aGlzLnByb2plY3RFZGl0b3IuZ2V0U2F2ZUZpbGUgPSB0aGlzLmdldFNhdmVGaWxlLmJpbmQodGhpcyk7DQogICAgICAgIHRoaXMucHJvamVjdEVkaXRvci5zZXRQYWdlID0gdGhpcy5zZXRQYWdlLmJpbmQodGhpcyk7DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIEB0eXBlIHtleGl0TWVfZ3VpX3JpYmJvbn0NCiAgICAgICAgICovDQogICAgICAgIHRoaXMucmliYm9uID0gYXdhaXQgU3lzdGVtLnByb2dyYW0ucnVuUHJvZ3JhbSh0aGlzLlBBVEguZm9sZGVyKCkgKyAiL2d1aS9yaWJib24uanMiLCBbdGhpcy53aW5kb3csIHRoaXMucHJvamVjdEVkaXRvcl0pOw0KICAgICAgICAvKioNCiAgICAgICAgICogQHR5cGUge2V4aXRNZV9ndWlfYm90dG9tQ29udHJvbGx9DQogICAgICAgICAqLw0KICAgICAgICB0aGlzLmJvdHRvbUNvbnRyb2xsID0gYXdhaXQgU3lzdGVtLnByb2dyYW0ucnVuUHJvZ3JhbSh0aGlzLlBBVEguZm9sZGVyKCkgKyAiL2d1aS9ib3R0b21Db250cm9sbC5qcyIsIFt0aGlzLndpbmRvdywgdGhpcy5wcm9qZWN0RWRpdG9yXSk7DQoNCiAgICAgICAgdGhpcy5wcm9qZWN0RWRpdG9yLnNlbGVjdCA9IHRoaXMucmliYm9uLnNldEVsZW1lbnQuYmluZCh0aGlzLnJpYmJvbik7DQogICAgfQ0KDQogICAgYXN5bmMgc2hvdyh0eXApIHsNCiAgICAgICAgZm9yICh2YXIgeCBvZiB0aGlzLnR5cGVzKSB7DQogICAgICAgICAgICBpZiAoeCA9PSB0eXApIHsNCiAgICAgICAgICAgICAgICAoYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQodHlwKSkuc3R5bGUuZGlzcGxheSA9ICIiOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAoYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQoeCkpLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBwcm9qZWN0cyANCiAgICAgKiBAcmV0dXJucyANCiAgICAgKi8NCiAgICBhc3luYyBzZXRQcm9qZWN0cyhwcm9qZWN0cykgew0KICAgICAgICB2YXIgYXZhaWxQcm9qZWN0cyA9IGF3YWl0IHRoaXMud2luZG93LmdldEh0bWxFbGVtZW50KCJhdmFpbFByb2plY3RzIik7DQogICAgICAgIGF2YWlsUHJvamVjdHMuaW5uZXJIVE1MID0gIiI7DQoNCiAgICAgICAgaWYgKHByb2plY3RzLmxlbmd0aCA9PSAwKSB7DQogICAgICAgICAgICBhdmFpbFByb2plY3RzLmlubmVySFRNTCA9ICI8cD48aT5ObyBwcm9qZWN0cyBmb3VuZDwvaT48L3A+IjsNCiAgICAgICAgICAgIHJldHVybg0KICAgICAgICB9DQoNCiAgICAgICAgZm9yICh2YXIgeCBvZiBwcm9qZWN0cykgew0KICAgICAgICAgICAgdmFyIHByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJidXR0b24iKTsNCiAgICAgICAgICAgIHByb2plY3QuY2xhc3NOYW1lID0gInByb2plY3QiOw0KICAgICAgICAgICAgcHJvamVjdC5pbm5lclRleHQgPSB4Lm5hbWU7DQogICAgICAgICAgICBwcm9qZWN0Lm9uY2xpY2sgPSAoKSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5sb2FkUHJvamVjdCh4Lm5hbWUpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgYXZhaWxQcm9qZWN0cy5hcHBlbmRDaGlsZChwcm9qZWN0KTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGFzeW5jIGxvYWRJbnRvUHJvamVjdChwYXRoKSB7DQogICAgICAgIHRoaXMucHJvamVjdCA9IGF3YWl0IFN5c3RlbUZpbGVTeXN0ZW0uZ2V0RmlsZUpzb24ocGF0aCk7DQogICAgICAgIHRoaXMucGFnZSA9IDA7DQogICAgICAgIGF3YWl0IHRoaXMucHJvamVjdEVkaXRvci5sb2FkUHJvamVjdCh0aGlzLnByb2plY3QucGFnZXNbdGhpcy5wYWdlXS5lbGVtZW50cyk7DQogICAgICAgIHRoaXMubG9hZFByb2plY3RTZXR0aW5ncygpOw0KICAgIH0NCg0KICAgIGFzeW5jIGxvYWRQcm9qZWN0U2V0dGluZ3MoKSB7DQogICAgICAgIHRoaXMucHJvamVjdEVkaXRvci5zZXRQaXhlbFJhdGlvKHRoaXMucHJvamVjdC5waXhlbFJhdGlvKTsNCiAgICB9DQoNCiAgICBnZXRTYXZlRmlsZSgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMucHJvamVjdDsNCiAgICB9DQoNCiAgICBzZXRQYWdlKGVsZW1lbnRzKSB7DQogICAgICAgIHZhciBvdXQgPSBbXTsNCiAgICAgICAgZm9yICh2YXIgeCBvZiBPYmplY3QudmFsdWVzKGVsZW1lbnRzKSkgew0KICAgICAgICAgICAgdmFyIHggPSBPYmplY3QuYXNzaWduKHt9LCB4KTsNCiAgICAgICAgICAgIGRlbGV0ZSB4WyJpZCJdOw0KICAgICAgICAgICAgb3V0LnB1c2goeCk7DQogICAgICAgIH0NCg0KICAgICAgICB0aGlzLnByb2plY3QucGFnZXNbdGhpcy5wYWdlXS5lbGVtZW50cyA9IG91dDsNCiAgICB9DQp9DQpuZXcgZXhpdE1lX2d1aSgpOw==", "html.html": "PGRpdiBlbGVtZW50PSJwcm9qZWN0Q2hvb3NlIj4NCiAgICA8aDE+Q2hvb3NlIGEgcHJvamVjdCB0byBlZGl0PC9oMT4NCiAgICA8ZGl2IGVsZW1lbnQ9ImF2YWlsUHJvamVjdHMiPg0KDQogICAgPC9kaXY+DQogICAgPGhyPg0KICAgIDxidXR0b24gZWxlbWVudD0ibmV3UHJvamVjdCI+TmV3IFByb2plY3Q8L2J1dHRvbj4NCjwvZGl2Pg0KPGRpdiBlbGVtZW50PSJwcm9qZWN0RWRpdCI+DQogICAgPGRpdiBlbGVtZW50PSJyaWJib25Db250cm9sbEJhciI+DQogICAgICAgIDxkaXYgZWxlbWVudD0idG9wQmFyIj4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxkaXYgZWxlbWVudD0idG9vbFNlbGVjdCI+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KDQogICAgPGRpdiBlbGVtZW50PSJlZGl0b3IiPg0KICAgICAgICA8ZGl2IGVsZW1lbnQ9InBhZ2VTZWxlY3QiPg0KICAgICAgICAgICAgPGRpdiBlbGVtZW50PSJzbWFsbFBhZ2UiPg0KICAgICAgICAgICAgICAgIDxjYW52YXMgZWxlbWVudD0icGFnZVJlbmRlciI+PC9jYW52YXM+DQogICAgICAgICAgICAgICAgPHA+UGFnZSAxPC9wPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8ZGl2IGVsZW1lbnQ9ImVkaXRvclJpZ2h0U2lkZSI+DQogICAgICAgICAgICA8ZGl2IGVsZW1lbnQ9InByb2plY3RDb250ZW50V3JhcGVyIj4NCiAgICAgICAgICAgICAgICA8ZGl2IGVsZW1lbnQ9InByb2plY3RDb250ZW50SW5uZXJXcmFwZXIiPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGVsZW1lbnQ9InByb2plY3RDb250ZW50IiBzdHlsZT0id2lkdGg6IDUwMHB4OyBoZWlnaHQ6IDUwMHB4OyI+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGVsZW1lbnQ9ImNvbnRlbnRDaGFuZ2VyIiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQ6IHRyYW5zcGFyZW50O3dpZHRoOiAxMDAlO2JvcmRlcjogMDtoZWlnaHQ6IDEwMCU7ZGlzcGxheTogbm9uZTtwYWRkaW5nOiAwO3Jlc2l6ZTogbm9uZTsiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudD0iY29udGVudENoYW5nZXJDaGFuZ2VUZXh0Ij5VZmY8L3RleHRhcmVhPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBlbGVtZW50PSJjb250ZW50Q2hhbmdlckJvcmRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBlbGVtZW50PSJjb250ZW50Q2hhbmdlckJvcmRlclBhcnQiIG1vdmVtZW50VHlwZT0iMCI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBlbGVtZW50PSJjb250ZW50Q2hhbmdlckJvcmRlclBhcnQiIG1vdmVtZW50VHlwZT0iMSI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBlbGVtZW50PSJjb250ZW50Q2hhbmdlckJvcmRlclBhcnQiIG1vdmVtZW50VHlwZT0iMiI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBlbGVtZW50PSJjb250ZW50Q2hhbmdlckJvcmRlclBhcnQiIG1vdmVtZW50VHlwZT0iMyI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgZWxlbWVudD0iYWxpZ25MaW5lSG9yaXpvbnRhbCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgZWxlbWVudD0iYWxpZ25MaW5lVmVydGljYWwiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGVsZW1lbnQ9ImFsbEFsaWduTGluZXMiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGVsZW1lbnQ9Im91dGxpbmVPdmVybGF5Ij4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDxkaXYgZWxlbWVudD0iYm90dG9tQ29udHJvbGwiPg0KICAgICAgICAgICAgICAgIDxwPmJvdHRvbSBjb250cm9sbDwvcD4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCjwvZGl2Pg==", "install.js": "YXN5bmMgZnVuY3Rpb24gcnVuKCkgew0KICAgIGF3YWl0IFN5c3RlbS5vcHRpb25zLmFkZFZhbHVlKCJwcm9ncmFtcyIsICJleGl0TWUiLCB7ICJwYXRoIjogImMvcHJvZ3JhbXMvZXhpdE1lL21haW4uanMiLCAibmFtZSI6ICJFeGl0IEdhbWUgVG9vbGtpdCIsICJydW4iOiAiYy9wcm9ncmFtcy9leGl0TWUvcnVuLmpzIiB9LCB0cnVlKTsNCiAgICBTeXN0ZW1IdG1sLnVwZGF0ZVN0YXJ0bWVudSgpDQoNCiAgICAvL2Rlc2t0b3Agc2hvcnRjdXQNCiAgICBpZiAoIWF3YWl0IFN5c3RlbUh0bWwuZGVza3RvcC5leGlzdHNMaW5rKCJjL3Byb2dyYW1zL2V4aXRNZS9ydW4uanMiKSl7DQogICAgICAgIGF3YWl0IFN5c3RlbUh0bWwuZGVza3RvcC5hZGRMaW5rKCJjL3Byb2dyYW1zL2V4aXRNZS9ydW4uanMiLCAiRXhpdCBHYW1lIFRvb2xraXQiLCAiYy9wcm9ncmFtcy9leGl0TWUvbG9nby53ZWJwIik7DQogICAgfQ0KICAgIHJldHVybiB0cnVlOw0KfQ0KcnVuKCk7", "installLocation.dat": "Yy9wcm9ncmFtcy9leGl0TWU=", "main.js": "Y2xhc3MgcHJvZ3JhbSBleHRlbmRzIFN5c3RlbS5wcm9ncmFtLmRlZmF1bHQgew0KICAgIGFzeW5jIGluaXQoKSB7DQogICAgICAgIC8qKg0KICAgICAgICAgKiBAdHlwZSB7SHRtbFdpbmRvd30NCiAgICAgICAgICovDQogICAgICAgIHRoaXMud2luZG93ID0gYXdhaXQgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLmNyZWF0ZVdpbmRvdygiUHJlc2VudCBJVCEiLA0KICAgICAgICAgICAgLy9vbnJlYWR5Og0KICAgICAgICAgICAgYXN5bmMgKCkgPT4gew0KICAgICAgICAgICAgICAgIC8vc2V0IGh0bWwNCiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLndpbmRvdy5zZXRDb250ZW50KCI8c3R5bGU+IiArIChhd2FpdCBTeXN0ZW1GaWxlU3lzdGVtLmdldEZpbGVTdHJpbmcodGhpcy5QQVRILmZvbGRlcigpICsgIi9zdHlsZS5jc3MiKSkucmVwbGFjZUFsbCgie3t3aW5kb3dJZH19IiwgdGhpcy53aW5kb3cuZ2V0SWQoKSkgKyAiPC9zdHlsZT4iICsgYXdhaXQgU3lzdGVtRmlsZVN5c3RlbS5nZXRGaWxlU3RyaW5nKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvaHRtbC5odG1sIikpOw0KICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMud2luZG93LnNpemUuc2V0U2l6ZSgzMjAsIDQwMCkNCiAgICAgICAgICAgICAgICB0aGlzLndpbmRvdy5zaXplLnVzZXJDYW5SZXNpemUodHJ1ZSkNCiAgICAgICAgICAgICAgICB0aGlzLndpbmRvdy5zaXplLnNldE1heCgpOw0KDQogICAgICAgICAgICAgICAgLyoqDQogICAgICAgICAgICAgICAgICogQHR5cGUge2V4aXRNZV9ndWl9DQogICAgICAgICAgICAgICAgICovDQogICAgICAgICAgICAgICAgdGhpcy5ndWkgPSBhd2FpdCBTeXN0ZW0ucHJvZ3JhbS5ydW5Qcm9ncmFtKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvZ3VpLmpzIiwgdGhpcy53aW5kb3cpOw0KICAgICAgICAgICAgICAgIHRoaXMuZ2V0UHJvamVjdExpc3QoKTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuZ3VpLmxvYWRQcm9qZWN0ID0gdGhpcy5sb2FkUHJvamVjdC5iaW5kKHRoaXMpOw0KICAgICAgICAgICAgICAgIHRoaXMuZ3VpLmdldFBhdGggPSB0aGlzLmdldFBhdGguYmluZCh0aGlzKTsNCg0KICAgICAgICAgICAgICAgIC8vc2V0IGV2ZW50cw0KICAgICAgICAgICAgICAgIHRoaXMud2luZG93LmFkZEh0bWxFdmVudExpc3RlbmVyKCJjbGljayIsICJuZXdQcm9qZWN0IiwgYXN5bmMgKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICB2YXIgbmFtZSA9IGF3YWl0IFN5c3RlbUh0bWwuV2luZG93SGFuZGxlci5wcmVzZXRzLmNyZWF0ZVN0cmluZ1NlbGVjdCgiTmV3IFByb2plY3QiLCAiRW50ZXIgYSBuYW1lIGZvciB0aGUgbmV3IHByb2plY3QiKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUgPT0gbnVsbCkgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICBpZiAobmFtZSA9PSAiIikgew0KICAgICAgICAgICAgICAgICAgICAgICAgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLnByZXNldHMuY3JlYXRlSW5mb3JtYXRpb24oIkVycm9yIiwgIlByb2plY3QgbmFtZSBjYW4ndCBiZSBlbXB0eSIpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGlmIChuYW1lLmluY2x1ZGVzKCIvIikpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIFN5c3RlbUh0bWwuV2luZG93SGFuZGxlci5wcmVzZXRzLmNyZWF0ZUluZm9ybWF0aW9uKCJFcnJvciIsICJQcm9qZWN0IG5hbWUgY2FuJ3QgY29udGFpbiAnLyciKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAobmFtZS5pbmNsdWRlcygiXFwiKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLnByZXNldHMuY3JlYXRlSW5mb3JtYXRpb24oIkVycm9yIiwgIlByb2plY3QgbmFtZSBjYW4ndCBjb250YWluICdcXCciKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAobmFtZS5pbmNsdWRlcygiOiIpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBTeXN0ZW1IdG1sLldpbmRvd0hhbmRsZXIucHJlc2V0cy5jcmVhdGVJbmZvcm1hdGlvbigiRXJyb3IiLCAiUHJvamVjdCBuYW1lIGNhbid0IGNvbnRhaW4gJzonIik7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUuaW5jbHVkZXMoIioiKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLnByZXNldHMuY3JlYXRlSW5mb3JtYXRpb24oIkVycm9yIiwgIlByb2plY3QgbmFtZSBjYW4ndCBjb250YWluICcqJyIpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGlmIChuYW1lLmluY2x1ZGVzKCI/IikpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIFN5c3RlbUh0bWwuV2luZG93SGFuZGxlci5wcmVzZXRzLmNyZWF0ZUluZm9ybWF0aW9uKCJFcnJvciIsICJQcm9qZWN0IG5hbWUgY2FuJ3QgY29udGFpbiAnPyciKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAobmFtZS5pbmNsdWRlcygiXCIiKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLnByZXNldHMuY3JlYXRlSW5mb3JtYXRpb24oIkVycm9yIiwgIlByb2plY3QgbmFtZSBjYW4ndCBjb250YWluICdcIiciKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAobmFtZS5pbmNsdWRlcygiPCIpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBTeXN0ZW1IdG1sLldpbmRvd0hhbmRsZXIucHJlc2V0cy5jcmVhdGVJbmZvcm1hdGlvbigiRXJyb3IiLCAiUHJvamVjdCBuYW1lIGNhbid0IGNvbnRhaW4gJzwnIik7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUuaW5jbHVkZXMoIj4iKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLnByZXNldHMuY3JlYXRlSW5mb3JtYXRpb24oIkVycm9yIiwgIlByb2plY3QgbmFtZSBjYW4ndCBjb250YWluICc+JyIpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGlmIChuYW1lLmluY2x1ZGVzKCJ8IikpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIFN5c3RlbUh0bWwuV2luZG93SGFuZGxlci5wcmVzZXRzLmNyZWF0ZUluZm9ybWF0aW9uKCJFcnJvciIsICJQcm9qZWN0IG5hbWUgY2FuJ3QgY29udGFpbiAnfCciKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAobmFtZS5pbmNsdWRlcygiLiIpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBTeXN0ZW1IdG1sLldpbmRvd0hhbmRsZXIucHJlc2V0cy5jcmVhdGVJbmZvcm1hdGlvbigiRXJyb3IiLCAiUHJvamVjdCBuYW1lIGNhbid0IGNvbnRhaW4gJy4nIik7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUuaW5jbHVkZXMoIiAiKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLnByZXNldHMuY3JlYXRlSW5mb3JtYXRpb24oIkVycm9yIiwgIlByb2plY3QgbmFtZSBjYW4ndCBjb250YWluICcgJyIpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHZhciBwcm9qZWN0cyA9IGF3YWl0IFN5c3RlbUZpbGVTeXN0ZW0uZ2V0RmlsZUpzb24odGhpcy5QQVRILmZvbGRlcigpICsgIi9wcm9qZWN0cy5qc29uIik7DQogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvamVjdHMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwcm9qZWN0c1tpXS5uYW1lID09IG5hbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTeXN0ZW1IdG1sLldpbmRvd0hhbmRsZXIucHJlc2V0cy5jcmVhdGVJbmZvcm1hdGlvbigiRXJyb3IiLCAiUHJvamVjdCBuYW1lIGFscmVhZHkgZXhpc3RzIik7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgcHJvamVjdHMucHVzaCh7DQogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgcGF0aDogdGhpcy5QQVRILmZvbGRlcigpICsgIi9wcm9qZWN0cy8iICsgbmFtZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgYXdhaXQgU3lzdGVtRmlsZVN5c3RlbS5zZXRGaWxlU3RyaW5nKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvcHJvamVjdHMuanNvbiIsIEpTT04uc3RyaW5naWZ5KHByb2plY3RzKSk7DQogICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuZ2V0UHJvamVjdExpc3QoKTsNCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgfSk7DQogICAgICAgIHRoaXMud2luZG93LmNsb3NlID0gKCkgPT4gew0KICAgICAgICAgICAgdGhpcy5zdG9wKCkNCiAgICAgICAgICAgIHJldHVybiB0cnVlDQogICAgICAgIH0NCiAgICB9DQogICAgYXN5bmMgZ2V0UHJvamVjdExpc3QoKSB7DQogICAgICAgIHRoaXMuZ3VpLnNob3coInByb2plY3RDaG9vc2UiKQ0KICAgICAgICBpZiAoIWF3YWl0IFN5c3RlbUZpbGVTeXN0ZW0uZmlsZUV4aXN0cyh0aGlzLlBBVEguZm9sZGVyKCkgKyAiL3Byb2plY3RzLmpzb24iKSkgew0KICAgICAgICAgICAgYXdhaXQgU3lzdGVtRmlsZVN5c3RlbS5zZXRGaWxlU3RyaW5nKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvcHJvamVjdHMuanNvbiIsICJbXSIpOw0KICAgICAgICB9DQoNCiAgICAgICAgdmFyIHByb2plY3RzID0gYXdhaXQgU3lzdGVtRmlsZVN5c3RlbS5nZXRGaWxlSnNvbih0aGlzLlBBVEguZm9sZGVyKCkgKyAiL3Byb2plY3RzLmpzb24iKTsNCg0KICAgICAgICB0aGlzLnByb2plY3RzID0ge307DQogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvamVjdHMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgIHRoaXMucHJvamVjdHNbcHJvamVjdHNbaV0ubmFtZV0gPSBwcm9qZWN0c1tpXTsNCiAgICAgICAgfQ0KDQogICAgICAgIGF3YWl0IHRoaXMuZ3VpLnNldFByb2plY3RzKHByb2plY3RzKTsNCiAgICB9DQoNCiAgICBhc3luYyBsb2FkUHJvamVjdChuYW1lKSB7DQogICAgICAgIHRoaXMuZ3VpLnNob3coInByb2plY3RFZGl0Iik7DQogICAgICAgIHRoaXMuZ3VpLnJpYmJvbi5sb2FkUmliYm9ucygpOw0KICAgICAgICANCiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTsNCiAgICAgICAgdGhpcy5wYXRoID0gdGhpcy5wcm9qZWN0c1tuYW1lXS5wYXRoOw0KDQogICAgICAgIHRoaXMuZ3VpLmxvYWRJbnRvUHJvamVjdCh0aGlzLnBhdGgpOw0KICAgIH0NCg0KICAgIGdldFBhdGgoKSB7DQogICAgICAgIHJldHVybiB0aGlzLnBhdGg7DQogICAgfQ0KfQ0KbmV3IHByb2dyYW0oKTs=", "projects": {"test.json": ""}, "projects.json": "Ww0KICAgIHsNCiAgICAgICAgIm5hbWUiOiAidGVzdCIsDQogICAgICAgICJwYXRoIjogImMvcHJvZ3JhbXMvZXhpdE1lL3Byb2plY3RzL3Rlc3QuanNvbiINCiAgICB9DQpd", "run.js": "U3lzdGVtLnByb2dyYW0ucnVuUHJvZ3JhbShQQVRILmZvbGRlcigpICsgIi9tYWluLmpzIik=", "style.css": ""}
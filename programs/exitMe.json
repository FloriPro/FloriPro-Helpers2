{"gui": {"bottomControll": {"core.js": "bmV3IChjbGFzcyB7DQogICAgZ2V0RWxlbWVudHMoZ3VpKSB7DQogICAgICAgIHJldHVybiBbDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgdHlwZTogInNsaWRlciIsDQogICAgICAgICAgICAgICAgZ2V0OiB0aGlzLmdldFpvb20uYmluZCh0aGlzKSwNCiAgICAgICAgICAgICAgICBjaGFuZ2U6IHRoaXMuc2V0Wm9vbS5iaW5kKHRoaXMpLA0KICAgICAgICAgICAgICAgIG5hbWU6ICJab29tIiwNCiAgICAgICAgICAgICAgICBtaW46IDAuMSwNCiAgICAgICAgICAgICAgICBtYXg6IDMsDQogICAgICAgICAgICB9DQogICAgICAgIF0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIGdldFpvb20oZWRpdG9yKSB7DQogICAgICAgIHJldHVybiBlZGl0b3Iuem9vbTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIHNldFpvb20oZWRpdG9yLCB2YWx1ZSkgew0KICAgICAgICBlZGl0b3Iuem9vbSA9IHZhbHVlOw0KICAgICAgICBlZGl0b3IuYXBwbHlab29tKCk7DQogICAgfQ0KfSkoKTs="}, "bottomControll.js": "Y2xhc3MgZXhpdE1lX2d1aV9ib3R0b21Db250cm9sbCBleHRlbmRzIFN5c3RlbS5wcm9ncmFtLmRlZmF1bHQgew0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7W0h0bWxXaW5kb3csIGV4aXRNZV9ndWldfSBwYXJhbTAgDQogICAgICovDQogICAgYXN5bmMgaW5pdChbd2luZG93LCBndWldKSB7DQogICAgICAgIHRoaXMud2luZG93ID0gd2luZG93Ow0KICAgICAgICB0aGlzLmd1aSA9IGd1aTsNCiAgICAgICAgdGhpcy5wcm9ncmFtcyA9IFtdOw0KDQogICAgICAgIHRoaXMuYmFyID0gYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQoImJvdHRvbUNvbnRyb2xsIik7DQogICAgICAgIHRoaXMubG9hZEJhcigpOw0KDQogICAgICAgIHRoaXMuc2V0SW50ZXJ2YWwodGhpcy51cGRhdGVJbmZvcy5iaW5kKHRoaXMpLCA1MDApOw0KICAgIH0NCg0KICAgIGFzeW5jIGxvYWRCYXIoKSB7DQogICAgICAgIHRoaXMuYmFyLmlubmVySFRNTCA9ICIiOw0KDQogICAgICAgIHZhciBpID0gMDsNCiAgICAgICAgdmFyIHNjcmlwdHMgPSBhd2FpdCBTeXN0ZW1GaWxlU3lzdGVtLmdldEZpbGVzKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvYm90dG9tQ29udHJvbGwiKTsNCiAgICAgICAgZm9yICh2YXIgeCBvZiBzY3JpcHRzKSB7DQogICAgICAgICAgICB2YXIgcHJvZyA9IGF3YWl0IFN5c3RlbS5ydW4odGhpcy5QQVRILmZvbGRlcigpICsgIi9ib3R0b21Db250cm9sbC8iICsgeCk7DQogICAgICAgICAgICB0aGlzLnByb2dyYW1zLnB1c2gocHJvZyk7DQogICAgICAgICAgICB2YXIgZWxlbWVudHMgPSBhd2FpdCBwcm9nLmdldEVsZW1lbnRzKHRoaXMuZ3VpKTsNCg0KICAgICAgICAgICAgZm9yICh2YXIgZWxlbWVudCBvZiBlbGVtZW50cykgew0KICAgICAgICAgICAgICAgIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsNCiAgICAgICAgICAgICAgICBkaXYuY2xhc3NOYW1lID0gImJvdHRvbUNvbnRyb2xsRWxlbWVudCI7DQoNCiAgICAgICAgICAgICAgICB2YXIgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJsYWJlbCIpOw0KICAgICAgICAgICAgICAgIGxhYmVsLmlubmVySFRNTCA9IGVsZW1lbnQubmFtZTsNCiAgICAgICAgICAgICAgICBkaXYuYXBwZW5kQ2hpbGQobGFiZWwpOw0KDQogICAgICAgICAgICAgICAgdmFyIGlucHV0Ow0KICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LnR5cGUgPT0gInNsaWRlciIpIHsNCiAgICAgICAgICAgICAgICAgICAgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbnB1dCIpOw0KICAgICAgICAgICAgICAgICAgICBpbnB1dC50eXBlID0gInJhbmdlIjsNCiAgICAgICAgICAgICAgICAgICAgaW5wdXQubWluID0gZWxlbWVudC5taW47DQogICAgICAgICAgICAgICAgICAgIGlucHV0Lm1heCA9IGVsZW1lbnQubWF4Ow0KICAgICAgICAgICAgICAgICAgICBpbnB1dC5zdGVwID0gZWxlbWVudC5zdGVwIHx8IDAuMDE7DQogICAgICAgICAgICAgICAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgiYm90dG9tY29udHJvbGxlciIsIGkpDQogICAgICAgICAgICAgICAgICAgIGlucHV0LnZhbHVlID0gYXdhaXQgZWxlbWVudC5nZXQodGhpcy5ndWkpOw0KICAgICAgICAgICAgICAgICAgICBpbnB1dC5vbmlucHV0ID0gYXN5bmMgKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgZWxlbWVudC5jaGFuZ2UodGhpcy5ndWksIGlucHV0LnZhbHVlKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGRpdi5hcHBlbmRDaGlsZChpbnB1dCk7DQogICAgICAgICAgICAgICAgdGhpcy5iYXIuYXBwZW5kQ2hpbGQoZGl2KTsNCiAgICAgICAgICAgICAgICBpKys7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBhc3luYyB1cGRhdGVJbmZvcygpIHsNCiAgICAgICAgdmFyIGkgPSAwOw0KICAgICAgICBmb3IgKHZhciB4IG9mIHRoaXMucHJvZ3JhbXMpIHsNCiAgICAgICAgICAgIHZhciBlbGVtZW50cyA9IGF3YWl0IHguZ2V0RWxlbWVudHModGhpcy5ndWkpOw0KICAgICAgICAgICAgZm9yICh2YXIgZWxlbWVudCBvZiBlbGVtZW50cykgew0KICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LnR5cGUgPT0gInNsaWRlciIpIHsNCiAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gdGhpcy5iYXIucXVlcnlTZWxlY3RvcigiW2JvdHRvbWNvbnRyb2xsZXI9JyIgKyBpICsgIiddIik7DQogICAgICAgICAgICAgICAgICAgIGlucHV0LnZhbHVlID0gYXdhaXQgZWxlbWVudC5nZXQodGhpcy5ndWkpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpKys7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQp9DQpuZXcgZXhpdE1lX2d1aV9ib3R0b21Db250cm9sbCgpOw==", "elementFunctions": {"core.js": ""}, "projectEditor.js": "Y2xhc3MgZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yIGV4dGVuZHMgU3lzdGVtLnByb2dyYW0uZGVmYXVsdCB7DQogICAgLyoqDQogICAgICogDQogICAgICogQHBhcmFtIHtbSHRtbFdpbmRvdywgZXhpdE1lX2d1aV19IHdpbmRvdyANCiAgICAgKi8NCiAgICBhc3luYyBpbml0KFt3aW5kb3csIGd1aV0pIHsNCiAgICAgICAgdGhpcy5nZXRQYXRoID0gKCkgPT4gew0KICAgICAgICAgICAgY29uc29sZS5lcnJvcigiZnVuY3Rpb24gbm90IHNldCEiKQ0KICAgICAgICB9Ow0KICAgICAgICB0aGlzLmdldFNhdmVGaWxlID0gKCkgPT4gew0KICAgICAgICAgICAgY29uc29sZS5lcnJvcigiZnVuY3Rpb24gbm90IHNldCEiKQ0KICAgICAgICB9Ow0KICAgICAgICB0aGlzLnNldFBhZ2UgPSAoZWxlbWVudHMpID0+IHsNCiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoImZ1bmN0aW9uIG5vdCBzZXQhIikNCiAgICAgICAgfTsNCiAgICAgICAgdGhpcy5zZWxlY3QgPSAoZWxlbWVudCkgPT4gew0KICAgICAgICAgICAgY29uc29sZS5lcnJvcigiZnVuY3Rpb24gbm90IHNldCEiKQ0KICAgICAgICB9Ow0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiBAdHlwZSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX3V0aWx9DQogICAgICAgICAqLw0KICAgICAgICB0aGlzLnV0aWwgPSBhd2FpdCBTeXN0ZW0ucnVuKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvdXRpbC9wcm9qZWN0RWRpdG9yVXRpbC5qcyIpOw0KICAgICAgICAvKioNCiAgICAgICAgICogQHR5cGUge2V4aXRNZV9ndWl9DQogICAgICAgICAqLw0KICAgICAgICB0aGlzLmd1aSA9IGd1aTsNCiAgICAgICAgLyoqDQogICAgICAgICAqIEB0eXBlIHt7W2tleTogc3RyaW5nXTpleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3JfZWxlbWVudH19DQogICAgICAgICAqLw0KICAgICAgICB0aGlzLmVsZW1lbnRzID0ge307DQogICAgICAgIHRoaXMud2luZG93ID0gd2luZG93Ow0KDQogICAgICAgIHRoaXMuZWxlbWVudEZ1bmN0aW9ucyA9IHt9Ow0KICAgICAgICB0aGlzLmNvbnRleHRNZW51QWxsID0gW107DQogICAgICAgIGF3YWl0IHRoaXMuaW5pdEVsZW1lbnRGdW5jdGlvbnMoKTsNCg0KICAgICAgICB0aGlzLnJlc2l6ZSA9IGZhbHNlOw0KICAgICAgICB0aGlzLm1vdmluZyA9IGZhbHNlOw0KICAgICAgICB0aGlzLmVkaXRpbmcgPSBmYWxzZTsNCg0KICAgICAgICB0aGlzLm5vd0VkaXRpbmcgPSBudWxsOw0KICAgICAgICB0aGlzLmNvbnRlbnRDaGFuZ2VyID0gYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQoImNvbnRlbnRDaGFuZ2VyIik7DQogICAgICAgIHRoaXMubWFrZUNvbnRlbnRDaGFuZ2VyKCk7DQoNCiAgICAgICAgdGhpcy56b29tID0gMTsNCiAgICAgICAgdGhpcy5pbml0Wm9vbSgpOw0KDQogICAgICAgIHRoaXMudXBkYXRlTGF5ZXJzID0gKCgpID0+IHsNCiAgICAgICAgICAgIHRoaXMuZ3VpLnNldFBhZ2UodGhpcy5lbGVtZW50cyk7DQoNCiAgICAgICAgICAgIHRoaXMuZWxlbWVudHMgPSB0aGlzLnV0aWwuY2FwTGF5ZXJzKHRoaXMuZWxlbWVudHMpOw0KDQogICAgICAgICAgICBmb3IgKHZhciB4IGluIHRoaXMuZWxlbWVudHMpIHsNCiAgICAgICAgICAgICAgICB0aGlzLnJlbG9hZEVsZW1lbnQoeCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0pLmJpbmQodGhpcyk7DQogICAgfQ0KDQogICAgaW5pdFpvb20oKSB7DQogICAgICAgIHRoaXMud2luZG93LmFkZEh0bWxFdmVudExpc3RlbmVyKCJvbndoZWVsIiwgInByb2plY3RFZGl0IiwgKChhLCBiLCBjLCBlKSA9PiB7DQogICAgICAgICAgICBpZiAoIWUuYWx0S2V5KSB7IHJldHVybiB9DQogICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7DQoNCiAgICAgICAgICAgIGlmIChlLmRlbHRhWSA+IDApIHsNCiAgICAgICAgICAgICAgICB0aGlzLnpvb20gLT0gMC4xOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICB0aGlzLnpvb20gKz0gMC4xOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy5hcHBseVpvb20oKTsNCiAgICAgICAgfSkuYmluZCh0aGlzKSk7DQogICAgfQ0KDQogICAgYXBwbHlab29tKCkgew0KICAgICAgICBpZiAodGhpcy56b29tIDwgMC4xKSB7DQogICAgICAgICAgICB0aGlzLnpvb20gPSAwLjE7DQogICAgICAgIH0NCiAgICAgICAgaWYgKHRoaXMuem9vbSA+IDMpIHsNCiAgICAgICAgICAgIHRoaXMuem9vbSA9IDM7DQogICAgICAgIH0NCiAgICAgICAgdGhpcy5jb250ZW50LnN0eWxlLnNldFByb3BlcnR5KCJ6b29tIiwgdGhpcy56b29tKTsNCiAgICAgICAgdGhpcy5jb250ZW50Q2hhbmdlci5zdHlsZS5zZXRQcm9wZXJ0eSgiem9vbSIsIHRoaXMuem9vbSk7DQoNCiAgICAgICAgZm9yICh2YXIgeCBvZiB0aGlzLmNvbnRlbnRDaGFuZ2VyLmNoaWxkcmVuKSB7DQogICAgICAgICAgICB4LnN0eWxlLnNldFByb3BlcnR5KCJ6b29tIiwgMSAvIHRoaXMuem9vbSk7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBhc3luYyBpbml0RWxlbWVudEZ1bmN0aW9ucygpIHsNCiAgICAgICAgdmFyIGZpbGVzID0gYXdhaXQgU3lzdGVtRmlsZVN5c3RlbS5nZXRGaWxlcyh0aGlzLlBBVEguZm9sZGVyKCkgKyAiL2VsZW1lbnRGdW5jdGlvbnMiKTsNCiAgICAgICAgZm9yICh2YXIgZmlsZSBvZiBmaWxlcykgew0KICAgICAgICAgICAgdmFyIGNsYXMgPSBuZXcgKGF3YWl0IFN5c3RlbS5ydW4odGhpcy5QQVRILmZvbGRlcigpICsgIi9lbGVtZW50RnVuY3Rpb25zLyIgKyBmaWxlKSkodGhpcy53aW5kb3cpOw0KICAgICAgICAgICAgdmFyIGluZm8gPSBjbGFzLmdldCgpOw0KICAgICAgICAgICAgZm9yICh2YXIgeCBvZiBPYmplY3Qua2V5cyhpbmZvKSkgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmVsZW1lbnRGdW5jdGlvbnNbeF0gIT0gdW5kZWZpbmVkKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIkVsZW1lbnQgZnVuY3Rpb24gIiArIHggKyAiIGFscmVhZHkgZXhpc3RzISIpOw0KICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50RnVuY3Rpb25zW3hdID0gaW5mb1t4XTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdmFyIHIgPSBjbGFzLmNvbnRleHRNZW51QWxsKCk7DQogICAgICAgICAgICBpZiAociAhPSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgICBmb3IgKHZhciB4IG9mIHIpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0TWVudUFsbC5wdXNoKHgpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIG1ha2VDb250ZW50Q2hhbmdlcigpIHsNCiAgICAgICAgdmFyIHR5cGVzID0gWw0KICAgICAgICAgICAgeyAidG9wIjogIi0xMHB4IiwgImxlZnQiOiAiLTEwcHgiLCAiY3Vyc29yIjogIm53LXJlc2l6ZSIgfSwNCiAgICAgICAgICAgIHsgImJvdHRvbSI6ICItMTBweCIsICJsZWZ0IjogIi0xMHB4IiwgImN1cnNvciI6ICJzdy1yZXNpemUiIH0sDQogICAgICAgICAgICB7ICJ0b3AiOiAiLTEwcHgiLCAicmlnaHQiOiAiLTEwcHgiLCAiY3Vyc29yIjogIm5lLXJlc2l6ZSIgfSwNCiAgICAgICAgICAgIHsgImJvdHRvbSI6ICItMTBweCIsICJyaWdodCI6ICItMTBweCIsICJjdXJzb3IiOiAic2UtcmVzaXplIiB9LA0KICAgICAgICBdOw0KDQogICAgICAgIGZvciAodmFyIGkgaW4gdHlwZXMpIHsNCiAgICAgICAgICAgIHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOw0KICAgICAgICAgICAgZWwuc2V0QXR0cmlidXRlKCJlbGVtZW50IiwgImNvbnRlbnRDaGFuZ2VyX2JvbW1sIik7DQoNCiAgICAgICAgICAgIGZvciAodmFyIHkgb2YgT2JqZWN0LmtleXModHlwZXNbaV0pKSB7DQogICAgICAgICAgICAgICAgZWwuc3R5bGUuc2V0UHJvcGVydHkoeSwgdHlwZXNbaV1beV0pOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBlbC5vbm1vdXNlZG93biA9ICgoaSkgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMucmVzaXplID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICB0aGlzLnJlc2l6ZVR5cGUgPSBpOw0KICAgICAgICAgICAgfSkuYmluZCh0aGlzLCBpKTsNCiAgICAgICAgICAgIGVsLm9udG91Y2hzdGFydCA9ICgoaSkgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMucmVzaXplID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICB0aGlzLnJlc2l6ZVR5cGUgPSBpOw0KICAgICAgICAgICAgfSkuYmluZCh0aGlzLCBpKTsNCiAgICAgICAgICAgIHRoaXMuY29udGVudENoYW5nZXIuYXBwZW5kQ2hpbGQoZWwpOw0KICAgICAgICB9DQoNCiAgICAgICAgdGhpcy5jb250ZW50Q2hhbmdlci5xdWVyeVNlbGVjdG9yKCJbd2luZG93ZWxlbWVudD0nY29udGVudENoYW5nZXJCb3JkZXInXSIpLm9ubW91c2Vkb3duID0gKCgpID0+IHsNCiAgICAgICAgICAgIHRoaXMubW92aW5nID0gdHJ1ZTsNCiAgICAgICAgfSkuYmluZCh0aGlzKTsNCiAgICAgICAgdGhpcy5jb250ZW50Q2hhbmdlci5xdWVyeVNlbGVjdG9yKCJbd2luZG93ZWxlbWVudD0nY29udGVudENoYW5nZXJCb3JkZXInXSIpLm9udG91Y2hzdGFydCA9ICgoKSA9PiB7DQogICAgICAgICAgICB0aGlzLm1vdmluZyA9IHRydWU7DQogICAgICAgIH0pLmJpbmQodGhpcyk7DQoNCiAgICAgICAgdGhpcy53aW5kb3cuZ2V0SHRtbCgpLm9ubW91c2V1cCA9ICgoKSA9PiB7DQogICAgICAgICAgICB0aGlzLm1vdmluZyA9IGZhbHNlOw0KICAgICAgICAgICAgdGhpcy5yZXNpemUgPSBmYWxzZTsNCiAgICAgICAgfSkuYmluZCh0aGlzKTsNCiAgICAgICAgdGhpcy53aW5kb3cuZ2V0SHRtbCgpLm9udG91Y2hlbmQgPSAoKCkgPT4gew0KICAgICAgICAgICAgdGhpcy5tb3ZpbmcgPSBmYWxzZTsNCiAgICAgICAgICAgIHRoaXMucmVzaXplID0gZmFsc2U7DQogICAgICAgIH0pLmJpbmQodGhpcyk7DQoNCiAgICAgICAgU3lzdGVtLmV2ZW50SGFuZGxlci5hZGRFdmVudEhhbmRsZXIoIm1vdXNlbW92ZSIsIHRoaXMuY29udGVudENoYW5nZXJNb3ZlLmJpbmQodGhpcykpOw0KDQogICAgICAgIHRoaXMud2luZG93LmFkZEh0bWxFdmVudExpc3RlbmVyKCJvbmNsaWNrIiwgInByb2plY3RDb250ZW50IiwgYXN5bmMgKF8sIF9fLCBfX18sIGUpID0+IHsNCiAgICAgICAgICAgIGlmIChlLnRhcmdldC5nZXRBdHRyaWJ1dGUoIndpbmRvd2VsZW1lbnQiKSAhPSAicHJvamVjdENvbnRlbnQiKSB7IHJldHVybiB9DQogICAgICAgICAgICBpZiAodGhpcy5lZGl0aW5nKSB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXSA9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5ub3dFZGl0aW5nID0gbnVsbDsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5oaWRlQ29udGVudENoYW5nZXIoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTZWxlY3QoKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmVsZW1lbnRGdW5jdGlvbnNbdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnR5cGVdLnN0b3BFZGl0KHRoaXMuZWxlbWVudHMsIHRoaXMubm93RWRpdGluZywgdGhpcy5jb250ZW50KTsNCiAgICAgICAgICAgICAgICB0aGlzLmVkaXRpbmcgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICB0aGlzLnJlbG9hZEVsZW1lbnQodGhpcy5ub3dFZGl0aW5nKTsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRoaXMubm93RWRpdGluZyA9IG51bGw7DQogICAgICAgICAgICB0aGlzLmhpZGVDb250ZW50Q2hhbmdlcigpOw0KICAgICAgICAgICAgdGhpcy51cGRhdGVTZWxlY3QoKTsNCiAgICAgICAgfSk7DQoNCiAgICAgICAgdGhpcy53aW5kb3cuYWRkSHRtbEV2ZW50TGlzdGVuZXIoIm9uY2xpY2siLCAiY29udGVudENoYW5nZXIiLCAoXywgX18sIF9fXywgZSkgPT4gew0KICAgICAgICAgICAgaWYgKGUudGFyZ2V0LmdldEF0dHJpYnV0ZSgid2luZG93ZWxlbWVudCIpID09ICJjb250ZW50Q2hhbmdlcl9ib21tbCIpIHsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9IGlmIChlLnRhcmdldC5nZXRBdHRyaWJ1dGUoIndpbmRvd2VsZW1lbnQiKSA9PSAiY29udGVudENoYW5nZXJCb3JkZXJQYXJ0Iikgew0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHRoaXMuZWRpdENvbnRlbnQoKTsNCiAgICAgICAgfSk7DQoNCiAgICAgICAgdGhpcy5jb250ZW50Q2hhbmdlci5jb250ZXh0c2NyaXB0ID0gKChlKSA9PiB7DQogICAgICAgICAgICB2YXIgb3V0ID0ge307DQogICAgICAgICAgICBmb3IgKHZhciB4IG9mIHRoaXMuY29udGV4dE1lbnVBbGwpIHsNCiAgICAgICAgICAgICAgICBvdXRbeC5uYW1lXSA9IHguYWN0aW9uLmJpbmQodGhpcywgdGhpcy5lbGVtZW50cywgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLmlkLCB0aGlzLmNvbnRlbnQsIHRoaXMpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB2YXIgcyA9IHRoaXMuZWxlbWVudEZ1bmN0aW9uc1t0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10udHlwZV0uY29udGV4dE1lbnU7DQogICAgICAgICAgICBmb3IgKHZhciB4IG9mIHMpIHsNCiAgICAgICAgICAgICAgICBvdXRbeC5uYW1lXSA9IHguYWN0aW9uLmJpbmQodGhpcywgdGhpcy5lbGVtZW50cywgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLmlkLCB0aGlzLmNvbnRlbnQsIHRoaXMpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIG91dDsNCiAgICAgICAgfSkuYmluZCh0aGlzKTsNCiAgICB9DQoNCiAgICBjb250ZW50Q2hhbmdlck1vdmUoZSkgew0KICAgICAgICB2YXIgbW92ZW1lbnRYID0gZS5tb3ZlbWVudFggLyB0aGlzLnpvb20NCiAgICAgICAgdmFyIG1vdmVtZW50WSA9IGUubW92ZW1lbnRZIC8gdGhpcy56b29tDQogICAgICAgIGlmICh0aGlzLm1vdmluZyA9PSB0cnVlKSB7DQogICAgICAgICAgICB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10ucG9zLnggKz0gbW92ZW1lbnRYOw0KICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnBvcy55ICs9IG1vdmVtZW50WTsNCiAgICAgICAgICAgIHRoaXMucmVsb2FkRWxlbWVudCh0aGlzLm5vd0VkaXRpbmcpOw0KICAgICAgICAgICAgdGhpcy5zZXRDb250ZW50Q2hhbmdlcigpOw0KICAgICAgICB9DQogICAgICAgIGVsc2UgaWYgKHRoaXMucmVzaXplID09IHRydWUpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLnJlc2l6ZVR5cGUgPT0gMCkgew0KICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXS5wb3MueCArPSBtb3ZlbWVudFg7DQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnBvcy55ICs9IG1vdmVtZW50WTsNCiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10uc2l6ZS53aWR0aCAtPSBtb3ZlbWVudFg7DQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnNpemUuaGVpZ2h0IC09IG1vdmVtZW50WTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMucmVzaXplVHlwZSA9PSAxKSB7DQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnBvcy54ICs9IG1vdmVtZW50WDsNCiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10uc2l6ZS53aWR0aCAtPSBtb3ZlbWVudFg7DQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnNpemUuaGVpZ2h0ICs9IG1vdmVtZW50WTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMucmVzaXplVHlwZSA9PSAyKSB7DQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnBvcy55ICs9IG1vdmVtZW50WTsNCiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10uc2l6ZS53aWR0aCArPSBtb3ZlbWVudFg7DQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnNpemUuaGVpZ2h0IC09IG1vdmVtZW50WTsNCiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5yZXNpemVUeXBlID09IDMpIHsNCiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRzW3RoaXMubm93RWRpdGluZ10uc2l6ZS53aWR0aCArPSBtb3ZlbWVudFg7DQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLnNpemUuaGVpZ2h0ICs9IG1vdmVtZW50WTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHRoaXMucmVsb2FkRWxlbWVudCh0aGlzLm5vd0VkaXRpbmcpOw0KICAgICAgICAgICAgdGhpcy5zZXRDb250ZW50Q2hhbmdlcigpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgdXBkYXRlU2VsZWN0KCkgew0KICAgICAgICBpZiAodGhpcy5ub3dFZGl0aW5nID09IG51bGwpDQogICAgICAgICAgICB0aGlzLnNlbGVjdChudWxsKTsNCiAgICAgICAgZWxzZQ0KICAgICAgICAgICAgdGhpcy5zZWxlY3QodGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiANCiAgICAgKiBAcGFyYW0ge3t0eXBlOnN0cmluZywgZGF0YTpzdHJpbmd8YW55LCBwb3M6e3g6bnVtYmVyLHk6bnVtYmVyfSwgc2l6ZTp7d2lkdGg6bnVtYmVyLGhlaWdodDpudW1iZXJ9LCBzdHlsaW5nOmFueX1bXX0gZWxlbWVudHMgDQogICAgICovDQogICAgYXN5bmMgbG9hZFByb2plY3QoZWxlbWVudHMpIHsNCiAgICAgICAgdGhpcy5jb250ZW50ID0gYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQoInByb2plY3RDb250ZW50Iik7DQogICAgICAgIHRoaXMuY29udGVudC5pbm5lckhUTUwgPSAiIjsNCiAgICAgICAgdGhpcy5lbGVtZW50cyA9IHt9Ow0KDQogICAgICAgIGVsZW1lbnRzID0gdGhpcy51dGlsLnNvcnRMYXllcnMoZWxlbWVudHMpOw0KDQogICAgICAgIGZvciAodmFyIHggb2YgZWxlbWVudHMpIHsNCiAgICAgICAgICAgIHRoaXMuY3JlYXRlRWxlbWVudCh4KTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX2VsZW1lbnR9IGVsZW1lbnQNCiAgICAgKi8NCiAgICBjcmVhdGVFbGVtZW50KGVsZW1lbnQpIHsNCiAgICAgICAgZWxlbWVudC5pZCA9IFN5c3RlbS5tYWtlaWQoMTApOw0KICAgICAgICBlbGVtZW50LmxheWVyID0gdGhpcy51dGlsLmdldExheWVyTWF4KHRoaXMuZWxlbWVudHMpICsgMTsNCiAgICAgICAgLyoqDQogICAgICAgICAqIEB0eXBlIHtIVE1MRWxlbWVudH0NCiAgICAgICAgICovDQogICAgICAgIHZhciBkb21FTDsNCiAgICAgICAgZG9tRUwgPSB0aGlzLmVsZW1lbnRGdW5jdGlvbnNbZWxlbWVudC50eXBlXS5jcmVhdGUoZWxlbWVudCwgZG9tRUwpOw0KDQogICAgICAgIGRvbUVMLmNvbnRleHRzY3JpcHQgPSAoKHNlbGYpID0+IHsNCiAgICAgICAgICAgIHZhciBvdXQgPSB7fTsNCiAgICAgICAgICAgIGZvciAodmFyIHggb2YgdGhpcy5jb250ZXh0TWVudUFsbCkgew0KICAgICAgICAgICAgICAgIG91dFt4Lm5hbWVdID0geC5hY3Rpb24uYmluZCh0aGlzLCB0aGlzLmVsZW1lbnRzLCBlbGVtZW50LmlkLCB0aGlzLmNvbnRlbnQsIHRoaXMpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB2YXIgcyA9IHRoaXMuZWxlbWVudEZ1bmN0aW9uc1tzZWxmLnR5cGVdLmNvbnRleHRNZW51Ow0KICAgICAgICAgICAgZm9yICh2YXIgeCBvZiBzKSB7DQogICAgICAgICAgICAgICAgb3V0W3gubmFtZV0gPSB4LmFjdGlvbi5iaW5kKHRoaXMsIHRoaXMuZWxlbWVudHMsIGVsZW1lbnQuaWQsIHRoaXMuY29udGVudCwgdGhpcyk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICByZXR1cm4gb3V0Ow0KICAgICAgICB9KS5iaW5kKHRoaXMsIGVsZW1lbnQpOw0KDQogICAgICAgIHRoaXMuc2V0RWxlbWVudEluZm9ybWF0aW9uKGVsZW1lbnQsIGRvbUVMKTsNCg0KICAgICAgICBkb21FTC5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIHRoaXMuY2xpY2suYmluZCh0aGlzLCBlbGVtZW50LmlkKSk7DQogICAgICAgIGRvbUVMLnNldEF0dHJpYnV0ZSgidXVpZCIsIGVsZW1lbnQuaWQpDQogICAgICAgIGRvbUVMLnNldEF0dHJpYnV0ZSgid2luZG93ZWxlbWVudCIsICJwcm9qZWN0Q29udGVudF9lbGVtZW50IikNCiAgICAgICAgZG9tRUwuc2V0QXR0cmlidXRlKCJ3aW5kb3dpZCIsIHRoaXMud2luZG93LmdldElkKCkpDQogICAgICAgIHRoaXMuZWxlbWVudHNbZWxlbWVudC5pZF0gPSBlbGVtZW50Ow0KICAgICAgICB0aGlzLmNvbnRlbnQuYXBwZW5kQ2hpbGQoZG9tRUwpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX2VsZW1lbnR9IGVsZW1lbnQgDQogICAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZG9tRUwgDQogICAgICovDQogICAgc2V0RWxlbWVudEluZm9ybWF0aW9uKGVsZW1lbnQsIGRvbUVMKSB7DQogICAgICAgIHZhciByID0gdGhpcy5lbGVtZW50RnVuY3Rpb25zW2VsZW1lbnQudHlwZV0uc2V0KGVsZW1lbnQsIGRvbUVMKTsNCg0KICAgICAgICBpZiAoIXIuaW5jbHVkZXMoInN0eWxlX3Bvc3Rpb24iKSkgZG9tRUwuc3R5bGUucG9zaXRpb24gPSAiYWJzb2x1dGUiOw0KICAgICAgICBpZiAoIXIuaW5jbHVkZXMoInN0eWxlX2xlZnQiKSkgZG9tRUwuc3R5bGUubGVmdCA9IGVsZW1lbnQucG9zLnggKyAicHgiOw0KICAgICAgICBpZiAoIXIuaW5jbHVkZXMoInN0eWxlX3RvcCIpKSBkb21FTC5zdHlsZS50b3AgPSBlbGVtZW50LnBvcy55ICsgInB4IjsNCiAgICAgICAgaWYgKCFyLmluY2x1ZGVzKCJzdHlsZV93aWR0aCIpKSBkb21FTC5zdHlsZS53aWR0aCA9IGVsZW1lbnQuc2l6ZS53aWR0aCArICJweCI7DQogICAgICAgIGlmICghci5pbmNsdWRlcygic3R5bGVfaGVpZ2h0IikpIGRvbUVMLnN0eWxlLmhlaWdodCA9IGVsZW1lbnQuc2l6ZS5oZWlnaHQgKyAicHgiOw0KICAgICAgICBpZiAoIXIuaW5jbHVkZXMoInN0eWxlX3pJbmRleCIpKSBkb21FTC5zdHlsZS56SW5kZXggPSBlbGVtZW50LmxheWVyOw0KDQogICAgICAgIHRoaXMuZ3VpLnNldFBhZ2UodGhpcy5lbGVtZW50cyk7DQogICAgfQ0KDQogICAgYXN5bmMgZWRpdENvbnRlbnQoKSB7DQogICAgICAgIHRoaXMuZWRpdGluZyA9IHRydWU7DQogICAgICAgIHZhciBlbGVtZW50ID0gdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddOw0KICAgICAgICB2YXIgciA9IGF3YWl0IHRoaXMuZWxlbWVudEZ1bmN0aW9uc1tlbGVtZW50LnR5cGVdLmVkaXRDb250ZW50KGVsZW1lbnQsIHRoaXMubm93RWRpdGluZywgdGhpcy5jb250ZW50KTsNCiAgICAgICAgaWYgKHIgIT0gdHJ1ZSkgew0KICAgICAgICAgICAgdGhpcy5lZGl0aW5nID0gZmFsc2U7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICByZWxvYWRFbGVtZW50KGlkKSB7DQogICAgICAgIHRoaXMuc2V0RWxlbWVudEluZm9ybWF0aW9uKHRoaXMuZWxlbWVudHNbaWRdLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBbdXVpZD0iJHtpZH0iXWApKTsNCiAgICB9DQoNCiAgICBhc3luYyBjbGljayhpZCkgew0KICAgICAgICAvL3RoaXMuZWxlbWVudHNbaWRdLnBvcy54ICs9IDEwOw0KICAgICAgICBpZiAodGhpcy5ub3dFZGl0aW5nICE9IHVuZGVmaW5lZCkgew0KICAgICAgICAgICAgaWYgKHRoaXMuZWRpdGluZykgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmNvbnRlbnQucXVlcnlTZWxlY3RvcihgW3V1aWQ9IiR7dGhpcy5ub3dFZGl0aW5nfSJdYCkgPT0gbnVsbCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmVkaXRpbmcgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLm5vd0VkaXRpbmcgPSBpZDsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTZWxlY3QoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRDb250ZW50Q2hhbmdlcigpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHRoaXMuY29udGVudC5xdWVyeVNlbGVjdG9yKGBbdXVpZD0iJHt0aGlzLm5vd0VkaXRpbmd9Il1gKS5zdHlsZS5kaXNwbGF5ID0gIiI7DQogICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1t0aGlzLm5vd0VkaXRpbmddLmRhdGEgPSAoYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQoImNvbnRlbnRDaGFuZ2VyQ2hhbmdlVGV4dCIpKS52YWx1ZTsNCiAgICAgICAgICAgICAgICAoYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQoImNvbnRlbnRDaGFuZ2VyQ2hhbmdlVGV4dCIpKS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOw0KICAgICAgICAgICAgICAgIHRoaXMuZWRpdGluZyA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIHRoaXMucmVsb2FkRWxlbWVudCh0aGlzLm5vd0VkaXRpbmcpOw0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICB0aGlzLm5vd0VkaXRpbmcgPSBpZDsNCiAgICAgICAgdGhpcy51cGRhdGVTZWxlY3QoKTsNCiAgICAgICAgdGhpcy5zZXRDb250ZW50Q2hhbmdlcigpOw0KICAgIH0NCg0KICAgIHNldENvbnRlbnRDaGFuZ2VyKCkgew0KICAgICAgICB2YXIgZWxlbWVudCA9IHRoaXMuZWxlbWVudHNbdGhpcy5ub3dFZGl0aW5nXTsNCiAgICAgICAgdGhpcy5jb250ZW50Q2hhbmdlci5zdHlsZS5kaXNwbGF5ID0gIiI7DQogICAgICAgIHRoaXMuY29udGVudENoYW5nZXIuc3R5bGUucG9zaXRpb24gPSAiYWJzb2x1dGUiOw0KICAgICAgICB0aGlzLmNvbnRlbnRDaGFuZ2VyLnN0eWxlLmxlZnQgPSBlbGVtZW50LnBvcy54ICsgInB4IjsNCiAgICAgICAgdGhpcy5jb250ZW50Q2hhbmdlci5zdHlsZS50b3AgPSBlbGVtZW50LnBvcy55ICsgInB4IjsNCiAgICAgICAgdGhpcy5jb250ZW50Q2hhbmdlci5zdHlsZS53aWR0aCA9IGVsZW1lbnQuc2l6ZS53aWR0aCArICJweCI7DQogICAgICAgIHRoaXMuY29udGVudENoYW5nZXIuc3R5bGUuaGVpZ2h0ID0gZWxlbWVudC5zaXplLmhlaWdodCArICJweCI7DQogICAgfQ0KICAgIGhpZGVDb250ZW50Q2hhbmdlcigpIHsNCiAgICAgICAgdGhpcy5jb250ZW50Q2hhbmdlci5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOw0KICAgIH0NCg0KICAgIGdldCBwcm9qZWN0UGF0aCgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UGF0aCgpOw0KICAgIH0NCg0KICAgIGdldCBzYXZlRmlsZSgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0U2F2ZUZpbGUoKTsNCiAgICB9DQoNCiAgICBzZXRQaXhlbFJhdGlvKHIpIHsNCiAgICAgICAgdGhpcy5jb250ZW50LnN0eWxlLndpZHRoID0gci5zcGxpdCgiOiIpWzBdICsgInB4IjsNCiAgICAgICAgdGhpcy5jb250ZW50LnN0eWxlLmhlaWdodCA9IHIuc3BsaXQoIjoiKVsxXSArICJweCI7DQogICAgfQ0KfQ0KbmV3IGV4aXRNZV9ndWlfcHJvamVjdEVkaXRvcigpOwo=", "ribbon": {"add.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiRWxlbWVudHMiOw0KICAgIH0NCiAgICBnZXRQb3MoKSB7DQogICAgICAgIHJldHVybiAzMDsNCiAgICB9DQogICAgZ2V0RnVuY3Rpb25zKCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgInRleHQiOiB7ICJ0eXBlIjogImJ1dHRvbiIsICJjaGFuZ2UiOiB0aGlzLnRleHQgfSwNCiAgICAgICAgICAgICJib3giOiB7ICJ0eXBlIjogImJ1dHRvbiIsICJjaGFuZ2UiOiB0aGlzLmJveCB9LA0KICAgICAgICAgICAgImNpcmNsZSI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuY2lyY2xlIH0sDQogICAgICAgICAgICAiYnV0dG9uIjogeyAidHlwZSI6ICJidXR0b24iLCAiY2hhbmdlIjogdGhpcy5idXR0b24gfSwNCiAgICAgICAgICAgICJpbWFnZSI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuaW1hZ2UgfSwNCiAgICAgICAgICAgICJ3ZWJzaXRlIjogeyAidHlwZSI6ICJidXR0b24iLCAiY2hhbmdlIjogdGhpcy53ZWJzaXRlIH0sDQogICAgICAgIH0NCiAgICB9DQogICAgLyoqDQogICAgICogDQogICAgICogQHBhcmFtIHtleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3J9IGVkaXRvciANCiAgICAgKi8NCiAgICBhc3luYyB0ZXh0KGVkaXRvcikgew0KICAgICAgICBlZGl0b3IuY3JlYXRlRWxlbWVudCh7DQogICAgICAgICAgICAidHlwZSI6ICJ0ZXh0IiwNCiAgICAgICAgICAgICJkYXRhIjogIlRleHQiLA0KICAgICAgICAgICAgInBvcyI6IHsNCiAgICAgICAgICAgICAgICB4OiAxMCwNCiAgICAgICAgICAgICAgICB5OiAxMA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICJzaXplIjogew0KICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAsDQogICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDANCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAic3R5bGluZyI6IHsNCiAgICAgICAgICAgICAgICAiZm9udFNpemUiOiA0MCwNCiAgICAgICAgICAgICAgICAiZm9udEZhbWlseSI6ICJBcmlhbCIsDQogICAgICAgICAgICAgICAgImNvbG9yIjogIiMwMDAwMDBmZiIsDQogICAgICAgICAgICAgICAgImJhY2tncm91bmRDb2xvciI6ICIjMDAwMDAwMDAiLA0KICAgICAgICAgICAgICAgICJib3JkZXIiOiAiMSIsDQogICAgICAgICAgICAgICAgImJvcmRlckNvbG9yIjogIiMwMDAwMDBmZiIsDQogICAgICAgICAgICB9DQogICAgICAgIH0pOw0KICAgIH0NCiAgICBhc3luYyBib3goZWRpdG9yKSB7DQogICAgICAgIGVkaXRvci5jcmVhdGVFbGVtZW50KHsNCiAgICAgICAgICAgICJ0eXBlIjogImJveCIsDQogICAgICAgICAgICAiZGF0YSI6IG51bGwsDQogICAgICAgICAgICAicG9zIjogew0KICAgICAgICAgICAgICAgIHg6IDEwLA0KICAgICAgICAgICAgICAgIHk6IDEwDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgInNpemUiOiB7DQogICAgICAgICAgICAgICAgd2lkdGg6IDEwMCwNCiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICJzdHlsaW5nIjogew0KICAgICAgICAgICAgICAgICJiYWNrZ3JvdW5kQ29sb3IiOiAiI2ZmMDAwMGZmIiwNCiAgICAgICAgICAgICAgICAiYm9yZGVyIjogIjIiLA0KICAgICAgICAgICAgICAgICJib3JkZXJDb2xvciI6ICIjMDAwMDAwZmYiLA0KICAgICAgICAgICAgfQ0KICAgICAgICB9KTsNCiAgICB9DQogICAgYXN5bmMgY2lyY2xlKGVkaXRvcikgew0KICAgICAgICBlZGl0b3IuY3JlYXRlRWxlbWVudCh7DQogICAgICAgICAgICAidHlwZSI6ICJjaXJjbGUiLA0KICAgICAgICAgICAgImRhdGEiOiBudWxsLA0KICAgICAgICAgICAgInBvcyI6IHsNCiAgICAgICAgICAgICAgICB4OiAxMCwNCiAgICAgICAgICAgICAgICB5OiAxMA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICJzaXplIjogew0KICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAsDQogICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDANCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAic3R5bGluZyI6IHsNCiAgICAgICAgICAgICAgICAiYmFja2dyb3VuZENvbG9yIjogIiMwMGZmMDBmZiIsDQogICAgICAgICAgICAgICAgImJvcmRlciI6ICIyIiwNCiAgICAgICAgICAgICAgICAiYm9yZGVyQ29sb3IiOiAiIzAwMDAwMGZmIiwNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSk7DQogICAgfQ0KICAgIGFzeW5jIGJ1dHRvbigpIHsNCiAgICAgICAgY29uc29sZS53YXJuKCJidXR0b24gbm90IGltcGxlbWVudGVkIik7DQogICAgfQ0KICAgIGFzeW5jIGltYWdlKGVkaXRvcikgew0KICAgICAgICBlZGl0b3IuY3JlYXRlRWxlbWVudCh7DQogICAgICAgICAgICAidHlwZSI6ICJpbWFnZSIsDQogICAgICAgICAgICAiZGF0YSI6ICJodHRwczovL3d3dy5nb29nbGUuY29tL2ltYWdlcy9icmFuZGluZy9nb29nbGVsb2dvLzJ4L2dvb2dsZWxvZ29fY29sb3JfMjcyeDkyZHAucG5nIiwNCiAgICAgICAgICAgICJwb3MiOiB7DQogICAgICAgICAgICAgICAgeDogMTAsDQogICAgICAgICAgICAgICAgeTogMTANCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAic2l6ZSI6IHsNCiAgICAgICAgICAgICAgICB3aWR0aDogMTAwLA0KICAgICAgICAgICAgICAgIGhlaWdodDogMTAwDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgInN0eWxpbmciOiB7DQogICAgICAgICAgICAgICAgImNvbnNpc3RlbnRTaXplIjogZmFsc2UsDQogICAgICAgICAgICAgICAgImJhY2tncm91bmRDb2xvciI6ICIjMDAwMDAwMDAiLA0KICAgICAgICAgICAgICAgICJib3JkZXIiOiAiMCIsDQogICAgICAgICAgICAgICAgImJvcmRlckNvbG9yIjogIiMwMDAwMDBmZiIsDQogICAgICAgICAgICB9DQogICAgICAgIH0pOw0KICAgIH0NCiAgICBhc3luYyB3ZWJzaXRlKCkgew0KICAgICAgICBjb25zb2xlLndhcm4oIndlYnNpdGUgbm90IGltcGxlbWVudGVkIik7DQogICAgfQ0KfSkoKTs=", "edit.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgICAgIHRoaXMuZWxlbWVudCA9IG51bGw7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiRWRpdCI7DQogICAgfQ0KICAgIGdldFBvcygpIHsNCiAgICAgICAgcmV0dXJuIDIwOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge3t0eXBlOnN0cmluZywgZGF0YTpzdHJpbmd8YW55LCBwb3M6e3g6bnVtYmVyLHk6bnVtYmVyfSwgc2l6ZTp7d2lkdGg6bnVtYmVyLGhlaWdodDpudW1iZXJ9LCBzdHlsaW5nOmFueX19IGVsZW1lbnQNCiAgICAgKi8NCiAgICBnZXRGdW5jdGlvbnMoZWxlbWVudCkgew0KICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50Ow0KDQogICAgICAgIGlmIChlbGVtZW50ID09IG51bGwpIHsNCiAgICAgICAgICAgIHJldHVybiB7fTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoZWxlbWVudC50eXBlID09ICJib3giIHx8IGVsZW1lbnQudHlwZSA9PSAiY2lyY2xlIiB8fCBlbGVtZW50LnR5cGUgPT0gInRleHQiIHx8IGVsZW1lbnQudHlwZSA9PSAiaW1hZ2UiKSB7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgICJfZGVzY3JpcHRvciI6ICJCYWNrZ3JvdW5kIiwNCiAgICAgICAgICAgICAgICAiQmFja2dyb3VuZCI6IHsgInR5cGUiOiAiY29sb3IiLCAiY2hhbmdlIjogdGhpcy5iYWNrZ3JvdW5kQ29sb3IuYmluZCh0aGlzKSwgImdldCI6IHRoaXMuZ2V0QmFja2dyb3VuZENvbG9yLmJpbmQodGhpcykgfSwNCiAgICAgICAgICAgICAgICAiX3NlcGFyYXRvciI6ICIiLA0KICAgICAgICAgICAgICAgICJfZGVzY3JpcHRvcjIiOiAiQm9yZGVyIiwNCiAgICAgICAgICAgICAgICAiQm9yZGVyIjogeyAidHlwZSI6ICJudW1iZXIiLCAiY2hhbmdlIjogdGhpcy5ib3JkZXIuYmluZCh0aGlzKSwgImdldCI6IHRoaXMuZ2V0Qm9yZGVyLmJpbmQodGhpcykgfSwNCiAgICAgICAgICAgICAgICAiQm9yZGVyQ29sb3IiOiB7ICJ0eXBlIjogImNvbG9yIiwgImNoYW5nZSI6IHRoaXMuYm9yZGVyQ29sb3IuYmluZCh0aGlzKSwgImdldCI6IHRoaXMuZ2V0Qm9yZGVyQ29sb3IuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgcmV0dXJuIHt9Ow0KICAgICAgICB9DQogICAgfQ0KICAgIGdldEJhY2tncm91bmRDb2xvcigpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudC5zdHlsaW5nLmJhY2tncm91bmRDb2xvcjsNCiAgICB9DQogICAgLyoqDQogICAgICogQHBhcmFtIHtleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3J9IGVkaXRvciANCiAgICAgKiBAcGFyYW0ge0hUTUxJbnB1dEVsZW1lbnR9IGVsZW1lbnQgDQogICAgICovDQogICAgYmFja2dyb3VuZENvbG9yKGVkaXRvciwgY29sb3IpIHsNCiAgICAgICAgZWRpdG9yLmVsZW1lbnRzW2VkaXRvci5ub3dFZGl0aW5nXS5zdHlsaW5nLmJhY2tncm91bmRDb2xvciA9IGNvbG9yOw0KICAgICAgICBlZGl0b3IucmVsb2FkRWxlbWVudChlZGl0b3Iubm93RWRpdGluZyk7DQogICAgfQ0KDQogICAgYm9yZGVyKGVkaXRvciwgZWwpIHsNCiAgICAgICAgaWYgKHBhcnNlSW50KGVsLnZhbHVlKSA8IDApIHsNCiAgICAgICAgICAgIGVsLnZhbHVlID0gMDsNCiAgICAgICAgfQ0KICAgICAgICBlZGl0b3IuZWxlbWVudHNbZWRpdG9yLm5vd0VkaXRpbmddLnN0eWxpbmcuYm9yZGVyID0gZWwudmFsdWU7DQogICAgICAgIGVkaXRvci5yZWxvYWRFbGVtZW50KGVkaXRvci5ub3dFZGl0aW5nKTsNCiAgICB9DQogICAgZ2V0Qm9yZGVyKCkgew0KICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LnN0eWxpbmcuYm9yZGVyOw0KICAgIH0NCiAgICBib3JkZXJDb2xvcihlZGl0b3IsIGNvbG9yKSB7DQogICAgICAgIGVkaXRvci5lbGVtZW50c1tlZGl0b3Iubm93RWRpdGluZ10uc3R5bGluZy5ib3JkZXJDb2xvciA9IGNvbG9yOw0KICAgICAgICBlZGl0b3IucmVsb2FkRWxlbWVudChlZGl0b3Iubm93RWRpdGluZyk7DQogICAgfQ0KICAgIGdldEJvcmRlckNvbG9yKCkgew0KICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LnN0eWxpbmcuYm9yZGVyQ29sb3I7DQogICAgfQ0KfSkoKTs=", "file.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiZmlsZSI7DQogICAgfQ0KICAgIGdldFBvcygpIHsNCiAgICAgICAgcmV0dXJuIDA7DQogICAgfQ0KICAgIGdldEZ1bmN0aW9ucygpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICJzYXZlUHJvamVjdCI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuc2F2ZVByb2plY3QuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgInNhdmVQcm9qZWN0QXMiOiB7ICJ0eXBlIjogImJ1dHRvbiIsICJjaGFuZ2UiOiB0aGlzLnNhdmVQcm9qZWN0QXMuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgImNsb3NlUHJvamVjdCI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuY2xvc2VQcm9qZWN0IH0sDQogICAgICAgICAgICAiZXhpdCI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuZXhpdCB9LA0KICAgICAgICAgICAgInBpeGVsIHJhdGlvIjogeyAidHlwZSI6ICJ0ZXh0IiwgImNoYW5nZSI6IHRoaXMuc2V0UGl4ZWxSYXRpby5iaW5kKHRoaXMpLCAiZ2V0IjogdGhpcy5nZXRQaXhlbFJhdGlvIH0NCiAgICAgICAgfQ0KICAgIH0NCiAgICAvKioNCiAgICAgKiANCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIGFzeW5jIHNhdmVQcm9qZWN0KGVkaXRvcikgew0KICAgICAgICB2YXIgeCA9IHRoaXMuZ2VuZXJhdGVTYXZlRmlsZShlZGl0b3IpOw0KICAgICAgICBTeXN0ZW1GaWxlU3lzdGVtLnNldEZpbGVTdHJpbmcoZWRpdG9yLnByb2plY3RQYXRoLCBKU09OLnN0cmluZ2lmeSh4KSk7DQogICAgfQ0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3IgDQogICAgICovDQogICAgYXN5bmMgc2F2ZVByb2plY3RBcyhlZGl0b3IpIHsNCiAgICAgICAgY29uc29sZS53YXJuKCJzYXZlUHJvamVjdEFzIG5vdCBpbXBsZW1lbnRlZCIpOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiANCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIGFzeW5jIGNsb3NlUHJvamVjdChlZGl0b3IpIHsNCiAgICAgICAgY29uc29sZS53YXJuKCJjbG9zZVByb2plY3Qgbm90IGltcGxlbWVudGVkIik7DQogICAgfQ0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3IgDQogICAgICovDQogICAgYXN5bmMgZXhpdChlZGl0b3IpIHsNCiAgICAgICAgY29uc29sZS53YXJuKCJleGl0IG5vdCBpbXBsZW1lbnRlZCIpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3INCiAgICAgKi8NCiAgICBnZW5lcmF0ZVNhdmVGaWxlKGVkaXRvcikgew0KICAgICAgICByZXR1cm4gZWRpdG9yLnNhdmVGaWxlOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3INCiAgICAgKi8NCiAgICBzZXRQaXhlbFJhdGlvKGVkaXRvciwgZWxlbWVudCkgew0KICAgICAgICBlZGl0b3IuZ3VpLnByb2plY3QucGl4ZWxSYXRpbyA9IGVsZW1lbnQudmFsdWU7DQogICAgICAgIGVkaXRvci5ndWkubG9hZFByb2plY3RTZXR0aW5ncygpOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcmliYm9ufSByaWJib24NCiAgICAgKi8NCiAgICBnZXRQaXhlbFJhdGlvKHJpYmJvbikgew0KICAgICAgICByZXR1cm4gcmliYm9uLmVkaXRvci5ndWkucHJvamVjdC5waXhlbFJhdGlvOw0KICAgIH0NCn0pKCk7", "present.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiUHJlc2VudCI7DQogICAgfQ0KICAgIGdldFBvcygpIHsNCiAgICAgICAgcmV0dXJuIDQwOw0KICAgIH0NCiAgICBnZXRGdW5jdGlvbnMoKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAic3RhcnQiOiB7ICJ0eXBlIjogImJ1dHRvbiIsICJjaGFuZ2UiOiB0aGlzLnN0YXJ0IH0sDQogICAgICAgIH0NCiAgICB9DQogICAgc3RhcnQoKSB7DQoNCiAgICB9DQp9KSgpOw==", "start.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgICAgIHRoaXMuZWxlbWVudCA9IG51bGw7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiU3RhcnQiOw0KICAgIH0NCiAgICBnZXRQb3MoKSB7DQogICAgICAgIHJldHVybiAxMDsNCiAgICB9DQogICAgLyoqDQogICAgICogQHBhcmFtIHt7dHlwZTpzdHJpbmcsIGRhdGE6c3RyaW5nfGFueSwgcG9zOnt4Om51bWJlcix5Om51bWJlcn0sIHNpemU6e3dpZHRoOm51bWJlcixoZWlnaHQ6bnVtYmVyfSwgc3R5bGluZzphbnl9fSBlbGVtZW50DQogICAgICovDQogICAgZ2V0RnVuY3Rpb25zKGVsZW1lbnQpIHsNCiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDsNCg0KICAgICAgICBpZiAoZWxlbWVudCA9PSBudWxsKSB7DQogICAgICAgICAgICByZXR1cm4ge307DQogICAgICAgIH0NCiAgICAgICAgaWYgKGVsZW1lbnQudHlwZSA9PSAidGV4dCIpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgImZvbnRTaXplIjogeyAidHlwZSI6ICJudW1iZXIiLCAiY2hhbmdlIjogdGhpcy5mb250U2l6ZS5iaW5kKHRoaXMpLCAiZ2V0IjogdGhpcy5nZXRGb250U2l6ZS5iaW5kKHRoaXMpIH0sDQogICAgICAgICAgICAgICAgImZvbnRGYW1pbHkiOiB7ICJ0eXBlIjogInRleHQiLCAiY2hhbmdlIjogdGhpcy5mb250RmFtaWx5LmJpbmQodGhpcyksICJnZXQiOiB0aGlzLmdldEZvbnRGYW1pbHkuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgICAgICJjb2xvciI6IHsgInR5cGUiOiAiY29sb3IiLCAiY2hhbmdlIjogdGhpcy5jb2xvci5iaW5kKHRoaXMpLCAiZ2V0IjogdGhpcy5nZXRDb2xvci5iaW5kKHRoaXMpIH0sDQogICAgICAgICAgICAgICAgIl9kZXNjcmlwdG9yIjogIkZvbnQiLA0KICAgICAgICAgICAgICAgICJfc2VwYXJhdG9yIjogIiIsDQogICAgICAgICAgICB9DQogICAgICAgIH0gZWxzZSBpZiAoZWxlbWVudC50eXBlID09ICJpbWFnZSIpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgIkltYWdlIjogeyAidHlwZSI6ICJmaWxlIiwgImNoYW5nZSI6IHRoaXMuaW1hZ2VTcmMuYmluZCh0aGlzKSwgImdldCI6IHRoaXMuZ2V0SW1hZ2UuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgICAgICJJbWFnZSBVcmwiOiB7ICJ0eXBlIjogInN0cmluZ0FzayIsICJjaGFuZ2UiOiB0aGlzLmltYWdlVXJsLmJpbmQodGhpcyksICJnZXQiOiB0aGlzLmdldEltYWdlLmJpbmQodGhpcykgfSwNCiAgICAgICAgICAgICAgICAiQ29uc2lzdGVudCBTaXplIjogeyAidHlwZSI6ICJjaGVja2JveCIsICJjaGFuZ2UiOiB0aGlzLmltYWdlQ29uc2lzdGVudFNpemUuYmluZCh0aGlzKSwgImdldCI6IHRoaXMuZ2V0SW1hZ2VDb25zaXN0ZW50U2l6ZS5iaW5kKHRoaXMpIH0NCiAgICAgICAgICAgIH07DQogICAgICAgIH0gZWxzZSBpZiAoZWxlbWVudC50eXBlID09ICJib3giIHx8IGVsZW1lbnQudHlwZSA9PSAiY2lyY2xlIikgew0KICAgICAgICB9DQogICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgcmV0dXJuIHt9Ow0KICAgICAgICB9DQogICAgfQ0KICAgIGdldEZvbnRTaXplKCkgew0KICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LnN0eWxpbmcuZm9udFNpemU7DQogICAgfQ0KICAgIGdldEZvbnRGYW1pbHkoKSB7DQogICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQuc3R5bGluZy5mb250RmFtaWx5Ow0KICAgIH0NCiAgICBnZXRDb2xvcigpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudC5zdHlsaW5nLmNvbG9yOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yDQogICAgICogQHBhcmFtIHtIVE1MSW5wdXRFbGVtZW50fSBlbGVtZW50IA0KICAgICAqLw0KICAgIGZvbnRTaXplKGVkaXRvciwgZWxlbWVudCkgew0KICAgICAgICBlZGl0b3IuZWxlbWVudHNbZWRpdG9yLm5vd0VkaXRpbmddLnN0eWxpbmcuZm9udFNpemUgPSBlbGVtZW50LnZhbHVlOw0KICAgICAgICBlZGl0b3IucmVsb2FkRWxlbWVudChlZGl0b3Iubm93RWRpdGluZyk7DQogICAgfQ0KICAgIC8qKg0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3IgDQogICAgICogQHBhcmFtIHtIVE1MSW5wdXRFbGVtZW50fSBlbGVtZW50IA0KICAgICAqLw0KICAgIGZvbnRGYW1pbHkoZWRpdG9yLCBlbGVtZW50KSB7DQogICAgICAgIGVkaXRvci5lbGVtZW50c1tlZGl0b3Iubm93RWRpdGluZ10uc3R5bGluZy5mb250RmFtaWx5ID0gZWxlbWVudC52YWx1ZTsNCiAgICAgICAgZWRpdG9yLnJlbG9hZEVsZW1lbnQoZWRpdG9yLm5vd0VkaXRpbmcpOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqIEBwYXJhbSB7SFRNTElucHV0RWxlbWVudH0gZWxlbWVudCANCiAgICAgKi8NCiAgICBjb2xvcihlZGl0b3IsIGNvbG9yKSB7DQogICAgICAgIGVkaXRvci5lbGVtZW50c1tlZGl0b3Iubm93RWRpdGluZ10uc3R5bGluZy5jb2xvciA9IGNvbG9yOw0KICAgICAgICBlZGl0b3IucmVsb2FkRWxlbWVudChlZGl0b3Iubm93RWRpdGluZyk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtIHtleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3J9IGVkaXRvcg0KICAgICAqIEBwYXJhbSB7c3RyaW5nfSBmaWxlUGF0aA0KICAgICAqLw0KICAgIGFzeW5jIGltYWdlU3JjKGVkaXRvciwgZmlsZVBhdGgpIHsNCiAgICAgICAgZWRpdG9yLmVsZW1lbnRzW2VkaXRvci5ub3dFZGl0aW5nXS5kYXRhID0gU3lzdGVtRmlsZVN5c3RlbS50b0ltZyhhd2FpdCBTeXN0ZW1GaWxlU3lzdGVtLmdldEZpbGVTdHJpbmcoZmlsZVBhdGgpKTsNCiAgICAgICAgZWRpdG9yLmVsZW1lbnRzW2VkaXRvci5ub3dFZGl0aW5nXS5wYXRoID0gZmlsZVBhdGg7DQogICAgICAgIGVkaXRvci5yZWxvYWRFbGVtZW50KGVkaXRvci5ub3dFZGl0aW5nKTsNCiAgICB9DQoNCiAgICBhc3luYyBpbWFnZVVybChlZGl0b3IsIHVybCkgew0KICAgICAgICB2YXIgbiA9IGF3YWl0IFN5c3RlbS5uZXR3b3JrLmluZm9ybWF0aW9uYWxGZXRjaF9UZXh0KHVybCk7DQoNCiAgICAgICAgZWRpdG9yLmVsZW1lbnRzW2VkaXRvci5ub3dFZGl0aW5nXS5kYXRhID0gU3lzdGVtRmlsZVN5c3RlbS50b0ltZyhuKTsNCiAgICAgICAgZWRpdG9yLmVsZW1lbnRzW2VkaXRvci5ub3dFZGl0aW5nXS5wYXRoID0gInVybCI7DQogICAgICAgIGVkaXRvci5yZWxvYWRFbGVtZW50KGVkaXRvci5ub3dFZGl0aW5nKTsNCiAgICB9DQoNCiAgICBnZXRJbWFnZSgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudC5wYXRoOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3INCiAgICAgKiBAcGFyYW0ge0hUTUxJbnB1dEVsZW1lbnR9IGVsZW1lbnQNCiAgICAgKi8NCiAgICBpbWFnZUNvbnNpc3RlbnRTaXplKGVkaXRvciwgZWxlbWVudCkgew0KICAgICAgICBlZGl0b3IuZWxlbWVudHNbZWRpdG9yLm5vd0VkaXRpbmddLnN0eWxpbmcuY29uc2lzdGVudFNpemUgPSBlbGVtZW50LmNoZWNrZWQ7DQogICAgICAgIGVkaXRvci5yZWxvYWRFbGVtZW50KGVkaXRvci5ub3dFZGl0aW5nKTsNCiAgICB9DQoNCiAgICBnZXRJbWFnZUNvbnNpc3RlbnRTaXplKCkgew0KICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LnN0eWxpbmcuY29uc2lzdGVudFNpemU7DQogICAgfQ0KfSkoKTs="}, "ribbon.js": "", "util": {"projectEditorUtil.js": "Y2xhc3MgZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX3V0aWwgew0KICAgIC8qKg0KICAgICAqIEBwYXJhbSB7e1tpZDpzdHJpbmddOmV4aXRNZV9ndWlfcHJvamVjdEVkaXRvcl9lbGVtZW50fX0gZWxlbWVudHMNCiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfQ0KICAgICAqLw0KICAgIGdldExheWVyTWF4KGVsZW1lbnRzKSB7DQogICAgICAgIHZhciBtYXggPSAtMTsNCiAgICAgICAgZm9yICh2YXIgeCBvZiBPYmplY3QudmFsdWVzKGVsZW1lbnRzKSkgew0KICAgICAgICAgICAgaWYgKHgubGF5ZXIgPiBtYXgpIHsNCiAgICAgICAgICAgICAgICBtYXggPSB4LmxheWVyOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIHJldHVybiBtYXg7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogc29ydHMgZWxlbWVudHMgYnkgbGF5ZXINCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcl9lbGVtZW50W119IGVsZW1lbnRzIA0KICAgICAqIEByZXR1cm5zIHtleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3JfZWxlbWVudFtdfQ0KICAgICAqLw0KICAgIHNvcnRMYXllcnMoZWxlbWVudHMpIHsNCiAgICAgICAgcmV0dXJuIGVsZW1lbnRzLnNvcnQoKGEsIGIpID0+IHsNCiAgICAgICAgICAgIHJldHVybiBhLmxheWVyIC0gYi5sYXllcjsNCiAgICAgICAgfSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtIHt7W2lkOnN0cmluZ106ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX2VsZW1lbnR9fSBlbGVtZW50cw0KICAgICAqIEBwYXJhbSB7c3RyaW5nfSBpZA0KICAgICAqIEBwYXJhbSB7bnVtYmVyfSBsYXllcg0KICAgICAqIEByZXR1cm5zIHt7W2lkOnN0cmluZ106ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX2VsZW1lbnR9fQ0KICAgICAqLw0KICAgIHNldExheWVyKGVsZW1lbnRzLCBpZCwgbGF5ZXIpIHsNCiAgICAgICAgZm9yICh2YXIgeCBvZiBPYmplY3Qua2V5cyhlbGVtZW50cykpIHsNCiAgICAgICAgICAgIGlmIChlbGVtZW50c1t4XS5sYXllciA+PSBsYXllcikgew0KICAgICAgICAgICAgICAgIGVsZW1lbnRzW3hdLmxheWVyKys7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgZWxlbWVudHNbaWRdLmxheWVyID0gbGF5ZXI7DQogICAgICAgIHJldHVybiBlbGVtZW50czsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBtYWtlcyBzdXJlIHRoYXQgdGhlIGxheWVycyBhcmVudCBzcGFjZWQgb3V0DQogICAgICogQHBhcmFtIHt7W2lkOnN0cmluZ106ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX2VsZW1lbnR9fSBlbGVtZW50cyANCiAgICAgKiBAcmV0dXJucyB7e1tpZDpzdHJpbmddOmV4aXRNZV9ndWlfcHJvamVjdEVkaXRvcl9lbGVtZW50fX0NCiAgICAgKi8NCiAgICBjYXBMYXllcnMoZWxlbWVudHMpIHsNCiAgICAgICAgdmFyIGxheWVycyA9IFtdOw0KICAgICAgICB2YXIgZSA9IHt9Ow0KICAgICAgICBmb3IgKHZhciB4IG9mIE9iamVjdC52YWx1ZXMoZWxlbWVudHMpKSB7DQogICAgICAgICAgICBsYXllcnMucHVzaCh4LmxheWVyKTsNCiAgICAgICAgICAgIGVbeC5sYXllcl0gPSB4LmlkOw0KICAgICAgICB9DQoNCiAgICAgICAgbGF5ZXJzLnNvcnQoKGEsIGIpID0+IHsNCiAgICAgICAgICAgIHJldHVybiBhIC0gYjsNCiAgICAgICAgfSk7DQoNCiAgICAgICAgdmFyIGkgPSAwOw0KICAgICAgICBmb3IgKHZhciB4IG9mIGxheWVycykgew0KICAgICAgICAgICAgZWxlbWVudHNbZVt4XV0ubGF5ZXIgPSBpOw0KICAgICAgICAgICAgaSsrOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiBlbGVtZW50czsNCiAgICB9DQogICAgZGV0ZWN0Q29sbGlzaW9ucyhlbGVtZW50cykgew0KICAgICAgICB2YXIgbGF5ZXJzID0gW107DQogICAgICAgIGZvciAodmFyIHggb2YgT2JqZWN0LnZhbHVlcyhlbGVtZW50cykpIHsNCiAgICAgICAgICAgIGlmIChsYXllcnMuaW5jbHVkZXMoeC5sYXllcikpIHsNCiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oImNvbGxpc2lvbiBkZXRlY3RlZCIpOw0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHgpOw0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBsYXllcnMucHVzaCh4LmxheWVyKTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICB9DQp9DQpuZXcgZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX3V0aWwoKTs="}}, "gui.js": "Y2xhc3MgZXhpdE1lX2d1aSBleHRlbmRzIFN5c3RlbS5wcm9ncmFtLmRlZmF1bHQgew0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7SHRtbFdpbmRvd30gd2luZG93IA0KICAgICAqLw0KICAgIGFzeW5jIGluaXQod2luZG93KSB7DQogICAgICAgIHRoaXMuZ2V0UGF0aCA9ICgpID0+IHsgfTsNCiAgICAgICAgdGhpcy50eXBlcyA9IFsicHJvamVjdENob29zZSIsICJwcm9qZWN0RWRpdCJdOw0KICAgICAgICB0aGlzLndpbmRvdyA9IHdpbmRvdzsNCg0KICAgICAgICB0aGlzLmxvYWRQcm9qZWN0ID0gKG5hbWUpID0+IHsgfTsNCiAgICAgICAgdGhpcy5zaG93KCJwcm9qZWN0Q2hvb3NlIik7DQoNCiAgICAgICAgdGhpcy5wcm9qZWN0ID0gbnVsbDsNCiAgICAgICAgdGhpcy5wYWdlID0gMDsNCg0KICAgICAgICAvKioNCiAgICAgICAgICogQHR5cGUge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0NCiAgICAgICAgICovDQogICAgICAgIHRoaXMucHJvamVjdEVkaXRvciA9IGF3YWl0IFN5c3RlbS5wcm9ncmFtLnJ1blByb2dyYW0odGhpcy5QQVRILmZvbGRlcigpICsgIi9ndWkvcHJvamVjdEVkaXRvci5qcyIsIFt0aGlzLndpbmRvdywgdGhpc10pOw0KICAgICAgICB0aGlzLnByb2plY3RFZGl0b3IuZ2V0UGF0aCA9IHRoaXMuZ2V0UGF0aC5iaW5kKHRoaXMpOw0KICAgICAgICB0aGlzLnByb2plY3RFZGl0b3IuZ2V0U2F2ZUZpbGUgPSB0aGlzLmdldFNhdmVGaWxlLmJpbmQodGhpcyk7DQogICAgICAgIHRoaXMucHJvamVjdEVkaXRvci5zZXRQYWdlID0gdGhpcy5zZXRQYWdlLmJpbmQodGhpcyk7DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIEB0eXBlIHtleGl0TWVfZ3VpX3JpYmJvbn0NCiAgICAgICAgICovDQogICAgICAgIHRoaXMucmliYm9uID0gYXdhaXQgU3lzdGVtLnByb2dyYW0ucnVuUHJvZ3JhbSh0aGlzLlBBVEguZm9sZGVyKCkgKyAiL2d1aS9yaWJib24uanMiLCBbdGhpcy53aW5kb3csIHRoaXMucHJvamVjdEVkaXRvcl0pOw0KICAgICAgICAvKioNCiAgICAgICAgICogQHR5cGUge2V4aXRNZV9ndWlfYm90dG9tQ29udHJvbGx9DQogICAgICAgICAqLw0KICAgICAgICB0aGlzLmJvdHRvbUNvbnRyb2xsID0gYXdhaXQgU3lzdGVtLnByb2dyYW0ucnVuUHJvZ3JhbSh0aGlzLlBBVEguZm9sZGVyKCkgKyAiL2d1aS9ib3R0b21Db250cm9sbC5qcyIsIFt0aGlzLndpbmRvdywgdGhpcy5wcm9qZWN0RWRpdG9yXSk7DQoNCiAgICAgICAgdGhpcy5wcm9qZWN0RWRpdG9yLnNlbGVjdCA9IHRoaXMucmliYm9uLnNldEVsZW1lbnQuYmluZCh0aGlzLnJpYmJvbik7DQogICAgfQ0KDQogICAgYXN5bmMgc2hvdyh0eXApIHsNCiAgICAgICAgZm9yICh2YXIgeCBvZiB0aGlzLnR5cGVzKSB7DQogICAgICAgICAgICBpZiAoeCA9PSB0eXApIHsNCiAgICAgICAgICAgICAgICAoYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQodHlwKSkuc3R5bGUuZGlzcGxheSA9ICIiOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAoYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQoeCkpLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBwcm9qZWN0cyANCiAgICAgKiBAcmV0dXJucyANCiAgICAgKi8NCiAgICBhc3luYyBzZXRQcm9qZWN0cyhwcm9qZWN0cykgew0KICAgICAgICB2YXIgYXZhaWxQcm9qZWN0cyA9IGF3YWl0IHRoaXMud2luZG93LmdldEh0bWxFbGVtZW50KCJhdmFpbFByb2plY3RzIik7DQogICAgICAgIGF2YWlsUHJvamVjdHMuaW5uZXJIVE1MID0gIiI7DQoNCiAgICAgICAgaWYgKHByb2plY3RzLmxlbmd0aCA9PSAwKSB7DQogICAgICAgICAgICBhdmFpbFByb2plY3RzLmlubmVySFRNTCA9ICI8cD48aT5ObyBwcm9qZWN0cyBmb3VuZDwvaT48L3A+IjsNCiAgICAgICAgICAgIHJldHVybg0KICAgICAgICB9DQoNCiAgICAgICAgZm9yICh2YXIgeCBvZiBwcm9qZWN0cykgew0KICAgICAgICAgICAgdmFyIHByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJidXR0b24iKTsNCiAgICAgICAgICAgIHByb2plY3QuY2xhc3NOYW1lID0gInByb2plY3QiOw0KICAgICAgICAgICAgcHJvamVjdC5pbm5lclRleHQgPSB4Lm5hbWU7DQogICAgICAgICAgICBwcm9qZWN0Lm9uY2xpY2sgPSAoKSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5sb2FkUHJvamVjdCh4Lm5hbWUpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgYXZhaWxQcm9qZWN0cy5hcHBlbmRDaGlsZChwcm9qZWN0KTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGFzeW5jIGxvYWRJbnRvUHJvamVjdChwYXRoKSB7DQogICAgICAgIHRoaXMucHJvamVjdCA9IGF3YWl0IFN5c3RlbUZpbGVTeXN0ZW0uZ2V0RmlsZUpzb24ocGF0aCk7DQogICAgICAgIHRoaXMucGFnZSA9IDA7DQogICAgICAgIGF3YWl0IHRoaXMucHJvamVjdEVkaXRvci5sb2FkUHJvamVjdCh0aGlzLnByb2plY3QucGFnZXNbdGhpcy5wYWdlXSk7DQogICAgICAgIHRoaXMubG9hZFByb2plY3RTZXR0aW5ncygpOw0KICAgIH0NCg0KICAgIGFzeW5jIGxvYWRQcm9qZWN0U2V0dGluZ3MoKSB7DQogICAgICAgIHRoaXMucHJvamVjdEVkaXRvci5zZXRQaXhlbFJhdGlvKHRoaXMucHJvamVjdC5waXhlbFJhdGlvKTsNCiAgICB9DQoNCiAgICBnZXRTYXZlRmlsZSgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMucHJvamVjdDsNCiAgICB9DQoNCiAgICBzZXRQYWdlKGVsZW1lbnRzKSB7DQogICAgICAgIHZhciBvdXQgPSBbXTsNCiAgICAgICAgZm9yICh2YXIgeCBvZiBPYmplY3QudmFsdWVzKGVsZW1lbnRzKSkgew0KICAgICAgICAgICAgdmFyIHggPSBPYmplY3QuYXNzaWduKHt9LCB4KTsNCiAgICAgICAgICAgIGRlbGV0ZSB4WyJpZCJdOw0KICAgICAgICAgICAgb3V0LnB1c2goeCk7DQogICAgICAgIH0NCg0KICAgICAgICB0aGlzLnByb2plY3QucGFnZXNbdGhpcy5wYWdlXSA9IG91dDsNCiAgICB9DQp9DQpuZXcgZXhpdE1lX2d1aSgpOw==", "html.html": "PGRpdiBlbGVtZW50PSJwcm9qZWN0Q2hvb3NlIj4NCiAgICA8aDE+Q2hvb3NlIGEgcHJvamVjdCB0byBlZGl0PC9oMT4NCiAgICA8ZGl2IGVsZW1lbnQ9ImF2YWlsUHJvamVjdHMiPg0KDQogICAgPC9kaXY+DQogICAgPGhyPg0KICAgIDxidXR0b24gZWxlbWVudD0ibmV3UHJvamVjdCI+TmV3IFByb2plY3Q8L2J1dHRvbj4NCjwvZGl2Pg0KPGRpdiBlbGVtZW50PSJwcm9qZWN0RWRpdCI+DQogICAgPGRpdiBlbGVtZW50PSJyaWJib25Db250cm9sbEJhciI+DQogICAgICAgIDxkaXYgZWxlbWVudD0idG9wQmFyIj4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxkaXYgZWxlbWVudD0idG9vbFNlbGVjdCI+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KDQogICAgPGRpdiBlbGVtZW50PSJlZGl0b3IiPg0KICAgICAgICA8ZGl2IGVsZW1lbnQ9InBhZ2VTZWxlY3QiPg0KICAgICAgICAgICAgPGRpdiBlbGVtZW50PSJzbWFsbFBhZ2UiPg0KICAgICAgICAgICAgICAgIDxjYW52YXMgZWxlbWVudD0icGFnZVJlbmRlciI+PC9jYW52YXM+DQogICAgICAgICAgICAgICAgPHA+UGFnZSAxPC9wPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8ZGl2IGVsZW1lbnQ9ImVkaXRvclJpZ2h0U2lkZSI+DQogICAgICAgICAgICA8ZGl2IGVsZW1lbnQ9InByb2plY3RDb250ZW50V3JhcGVyIj4NCiAgICAgICAgICAgICAgICA8ZGl2IGVsZW1lbnQ9InByb2plY3RDb250ZW50IiBzdHlsZT0id2lkdGg6IDUwMHB4OyBoZWlnaHQ6IDUwMHB4OyI+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPGRpdiBlbGVtZW50PSJjb250ZW50Q2hhbmdlciIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhDQogICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7d2lkdGg6IDEwMCU7Ym9yZGVyOiAwO2hlaWdodDogMTAwJTtkaXNwbGF5OiBub25lO3BhZGRpbmc6IDA7cmVzaXplOiBub25lOyINCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ9ImNvbnRlbnRDaGFuZ2VyQ2hhbmdlVGV4dCI+VWZmPC90ZXh0YXJlYT4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBlbGVtZW50PSJjb250ZW50Q2hhbmdlckJvcmRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGVsZW1lbnQ9ImNvbnRlbnRDaGFuZ2VyQm9yZGVyUGFydCI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGVsZW1lbnQ9ImNvbnRlbnRDaGFuZ2VyQm9yZGVyUGFydCI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGVsZW1lbnQ9ImNvbnRlbnRDaGFuZ2VyQm9yZGVyUGFydCI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGVsZW1lbnQ9ImNvbnRlbnRDaGFuZ2VyQm9yZGVyUGFydCI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8ZGl2IGVsZW1lbnQ9ImJvdHRvbUNvbnRyb2xsIj4NCiAgICAgICAgICAgICAgICA8cD5ib3R0b20gY29udHJvbGw8L3A+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQo8L2Rpdj4=", "install.js": "YXN5bmMgZnVuY3Rpb24gcnVuKCkgew0KICAgIGF3YWl0IFN5c3RlbS5vcHRpb25zLmFkZFZhbHVlKCJwcm9ncmFtcyIsICJleGl0TWUiLCB7ICJwYXRoIjogImMvcHJvZ3JhbXMvZXhpdE1lL21haW4uanMiLCAibmFtZSI6ICJFeGl0IEdhbWUgVG9vbGtpdCIsICJydW4iOiAiYy9wcm9ncmFtcy9leGl0TWUvcnVuLmpzIiB9LCB0cnVlKTsNCiAgICBTeXN0ZW1IdG1sLnVwZGF0ZVN0YXJ0bWVudSgpDQoNCiAgICAvL2Rlc2t0b3Agc2hvcnRjdXQNCiAgICBpZiAoIWF3YWl0IFN5c3RlbUh0bWwuZGVza3RvcC5leGlzdHNMaW5rKCJjL3Byb2dyYW1zL2V4aXRNZS9ydW4uanMiKSl7DQogICAgICAgIGF3YWl0IFN5c3RlbUh0bWwuZGVza3RvcC5hZGRMaW5rKCJjL3Byb2dyYW1zL2V4aXRNZS9ydW4uanMiLCAiRXhpdCBHYW1lIFRvb2xraXQiLCAiYy9wcm9ncmFtcy9leGl0TWUvbG9nby53ZWJwIik7DQogICAgfQ0KICAgIHJldHVybiB0cnVlOw0KfQ0KcnVuKCk7", "installLocation.dat": "Yy9wcm9ncmFtcy9leGl0TWU=", "main.js": "Y2xhc3MgcHJvZ3JhbSBleHRlbmRzIFN5c3RlbS5wcm9ncmFtLmRlZmF1bHQgew0KICAgIGFzeW5jIGluaXQoKSB7DQogICAgICAgIC8qKg0KICAgICAgICAgKiBAdHlwZSB7SHRtbFdpbmRvd30NCiAgICAgICAgICovDQogICAgICAgIHRoaXMud2luZG93ID0gYXdhaXQgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLmNyZWF0ZVdpbmRvdygiUHJlc2VudCBJVCEiLA0KICAgICAgICAgICAgLy9vbnJlYWR5Og0KICAgICAgICAgICAgYXN5bmMgKCkgPT4gew0KICAgICAgICAgICAgICAgIC8vc2V0IGh0bWwNCiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLndpbmRvdy5zZXRDb250ZW50KCI8c3R5bGU+IiArIChhd2FpdCBTeXN0ZW1GaWxlU3lzdGVtLmdldEZpbGVTdHJpbmcodGhpcy5QQVRILmZvbGRlcigpICsgIi9zdHlsZS5jc3MiKSkucmVwbGFjZUFsbCgie3t3aW5kb3dJZH19IiwgdGhpcy53aW5kb3cuZ2V0SWQoKSkgKyAiPC9zdHlsZT4iICsgYXdhaXQgU3lzdGVtRmlsZVN5c3RlbS5nZXRGaWxlU3RyaW5nKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvaHRtbC5odG1sIikpOw0KICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMud2luZG93LnNpemUuc2V0U2l6ZSgzMjAsIDQwMCkNCiAgICAgICAgICAgICAgICB0aGlzLndpbmRvdy5zaXplLnVzZXJDYW5SZXNpemUodHJ1ZSkNCiAgICAgICAgICAgICAgICB0aGlzLndpbmRvdy5zaXplLnNldE1heCgpOw0KDQogICAgICAgICAgICAgICAgLyoqDQogICAgICAgICAgICAgICAgICogQHR5cGUge2V4aXRNZV9ndWl9DQogICAgICAgICAgICAgICAgICovDQogICAgICAgICAgICAgICAgdGhpcy5ndWkgPSBhd2FpdCBTeXN0ZW0ucHJvZ3JhbS5ydW5Qcm9ncmFtKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvZ3VpLmpzIiwgdGhpcy53aW5kb3cpOw0KICAgICAgICAgICAgICAgIHRoaXMuZ2V0UHJvamVjdExpc3QoKTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuZ3VpLmxvYWRQcm9qZWN0ID0gdGhpcy5sb2FkUHJvamVjdC5iaW5kKHRoaXMpOw0KICAgICAgICAgICAgICAgIHRoaXMuZ3VpLmdldFBhdGggPSB0aGlzLmdldFBhdGguYmluZCh0aGlzKTsNCg0KICAgICAgICAgICAgICAgIC8vc2V0IGV2ZW50cw0KICAgICAgICAgICAgICAgIHRoaXMud2luZG93LmFkZEh0bWxFdmVudExpc3RlbmVyKCJjbGljayIsICJuZXdQcm9qZWN0IiwgYXN5bmMgKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICB2YXIgbmFtZSA9IGF3YWl0IFN5c3RlbUh0bWwuV2luZG93SGFuZGxlci5wcmVzZXRzLmNyZWF0ZVN0cmluZ1NlbGVjdCgiTmV3IFByb2plY3QiLCAiRW50ZXIgYSBuYW1lIGZvciB0aGUgbmV3IHByb2plY3QiKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUgPT0gbnVsbCkgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICBpZiAobmFtZSA9PSAiIikgew0KICAgICAgICAgICAgICAgICAgICAgICAgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLnByZXNldHMuY3JlYXRlSW5mb3JtYXRpb24oIkVycm9yIiwgIlByb2plY3QgbmFtZSBjYW4ndCBiZSBlbXB0eSIpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGlmIChuYW1lLmluY2x1ZGVzKCIvIikpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIFN5c3RlbUh0bWwuV2luZG93SGFuZGxlci5wcmVzZXRzLmNyZWF0ZUluZm9ybWF0aW9uKCJFcnJvciIsICJQcm9qZWN0IG5hbWUgY2FuJ3QgY29udGFpbiAnLyciKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAobmFtZS5pbmNsdWRlcygiXFwiKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLnByZXNldHMuY3JlYXRlSW5mb3JtYXRpb24oIkVycm9yIiwgIlByb2plY3QgbmFtZSBjYW4ndCBjb250YWluICdcXCciKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAobmFtZS5pbmNsdWRlcygiOiIpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBTeXN0ZW1IdG1sLldpbmRvd0hhbmRsZXIucHJlc2V0cy5jcmVhdGVJbmZvcm1hdGlvbigiRXJyb3IiLCAiUHJvamVjdCBuYW1lIGNhbid0IGNvbnRhaW4gJzonIik7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUuaW5jbHVkZXMoIioiKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLnByZXNldHMuY3JlYXRlSW5mb3JtYXRpb24oIkVycm9yIiwgIlByb2plY3QgbmFtZSBjYW4ndCBjb250YWluICcqJyIpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGlmIChuYW1lLmluY2x1ZGVzKCI/IikpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIFN5c3RlbUh0bWwuV2luZG93SGFuZGxlci5wcmVzZXRzLmNyZWF0ZUluZm9ybWF0aW9uKCJFcnJvciIsICJQcm9qZWN0IG5hbWUgY2FuJ3QgY29udGFpbiAnPyciKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAobmFtZS5pbmNsdWRlcygiXCIiKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLnByZXNldHMuY3JlYXRlSW5mb3JtYXRpb24oIkVycm9yIiwgIlByb2plY3QgbmFtZSBjYW4ndCBjb250YWluICdcIiciKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAobmFtZS5pbmNsdWRlcygiPCIpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBTeXN0ZW1IdG1sLldpbmRvd0hhbmRsZXIucHJlc2V0cy5jcmVhdGVJbmZvcm1hdGlvbigiRXJyb3IiLCAiUHJvamVjdCBuYW1lIGNhbid0IGNvbnRhaW4gJzwnIik7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUuaW5jbHVkZXMoIj4iKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLnByZXNldHMuY3JlYXRlSW5mb3JtYXRpb24oIkVycm9yIiwgIlByb2plY3QgbmFtZSBjYW4ndCBjb250YWluICc+JyIpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGlmIChuYW1lLmluY2x1ZGVzKCJ8IikpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIFN5c3RlbUh0bWwuV2luZG93SGFuZGxlci5wcmVzZXRzLmNyZWF0ZUluZm9ybWF0aW9uKCJFcnJvciIsICJQcm9qZWN0IG5hbWUgY2FuJ3QgY29udGFpbiAnfCciKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAobmFtZS5pbmNsdWRlcygiLiIpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBTeXN0ZW1IdG1sLldpbmRvd0hhbmRsZXIucHJlc2V0cy5jcmVhdGVJbmZvcm1hdGlvbigiRXJyb3IiLCAiUHJvamVjdCBuYW1lIGNhbid0IGNvbnRhaW4gJy4nIik7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUuaW5jbHVkZXMoIiAiKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLnByZXNldHMuY3JlYXRlSW5mb3JtYXRpb24oIkVycm9yIiwgIlByb2plY3QgbmFtZSBjYW4ndCBjb250YWluICcgJyIpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHZhciBwcm9qZWN0cyA9IGF3YWl0IFN5c3RlbUZpbGVTeXN0ZW0uZ2V0RmlsZUpzb24odGhpcy5QQVRILmZvbGRlcigpICsgIi9wcm9qZWN0cy5qc29uIik7DQogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvamVjdHMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwcm9qZWN0c1tpXS5uYW1lID09IG5hbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTeXN0ZW1IdG1sLldpbmRvd0hhbmRsZXIucHJlc2V0cy5jcmVhdGVJbmZvcm1hdGlvbigiRXJyb3IiLCAiUHJvamVjdCBuYW1lIGFscmVhZHkgZXhpc3RzIik7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgcHJvamVjdHMucHVzaCh7DQogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgcGF0aDogdGhpcy5QQVRILmZvbGRlcigpICsgIi9wcm9qZWN0cy8iICsgbmFtZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgYXdhaXQgU3lzdGVtRmlsZVN5c3RlbS5zZXRGaWxlU3RyaW5nKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvcHJvamVjdHMuanNvbiIsIEpTT04uc3RyaW5naWZ5KHByb2plY3RzKSk7DQogICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuZ2V0UHJvamVjdExpc3QoKTsNCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgfSk7DQogICAgICAgIHRoaXMud2luZG93LmNsb3NlID0gKCkgPT4gew0KICAgICAgICAgICAgdGhpcy5zdG9wKCkNCiAgICAgICAgICAgIHJldHVybiB0cnVlDQogICAgICAgIH0NCiAgICB9DQogICAgYXN5bmMgZ2V0UHJvamVjdExpc3QoKSB7DQogICAgICAgIHRoaXMuZ3VpLnNob3coInByb2plY3RDaG9vc2UiKQ0KICAgICAgICBpZiAoIWF3YWl0IFN5c3RlbUZpbGVTeXN0ZW0uZmlsZUV4aXN0cyh0aGlzLlBBVEguZm9sZGVyKCkgKyAiL3Byb2plY3RzLmpzb24iKSkgew0KICAgICAgICAgICAgYXdhaXQgU3lzdGVtRmlsZVN5c3RlbS5zZXRGaWxlU3RyaW5nKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvcHJvamVjdHMuanNvbiIsICJbXSIpOw0KICAgICAgICB9DQoNCiAgICAgICAgdmFyIHByb2plY3RzID0gYXdhaXQgU3lzdGVtRmlsZVN5c3RlbS5nZXRGaWxlSnNvbih0aGlzLlBBVEguZm9sZGVyKCkgKyAiL3Byb2plY3RzLmpzb24iKTsNCg0KICAgICAgICB0aGlzLnByb2plY3RzID0ge307DQogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvamVjdHMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgIHRoaXMucHJvamVjdHNbcHJvamVjdHNbaV0ubmFtZV0gPSBwcm9qZWN0c1tpXTsNCiAgICAgICAgfQ0KDQogICAgICAgIGF3YWl0IHRoaXMuZ3VpLnNldFByb2plY3RzKHByb2plY3RzKTsNCiAgICB9DQoNCiAgICBhc3luYyBsb2FkUHJvamVjdChuYW1lKSB7DQogICAgICAgIHRoaXMuZ3VpLnNob3coInByb2plY3RFZGl0Iik7DQogICAgICAgIHRoaXMuZ3VpLnJpYmJvbi5sb2FkUmliYm9ucygpOw0KICAgICAgICANCiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTsNCiAgICAgICAgdGhpcy5wYXRoID0gdGhpcy5wcm9qZWN0c1tuYW1lXS5wYXRoOw0KDQogICAgICAgIHRoaXMuZ3VpLmxvYWRJbnRvUHJvamVjdCh0aGlzLnBhdGgpOw0KICAgIH0NCg0KICAgIGdldFBhdGgoKSB7DQogICAgICAgIHJldHVybiB0aGlzLnBhdGg7DQogICAgfQ0KfQ0KbmV3IHByb2dyYW0oKTs=", "projects": {"test.json": "ew0KICAicGFnZXMiOiBbDQogICAgWw0KICAgICAgew0KICAgICAgICAidHlwZSI6ICJ0ZXh0IiwNCiAgICAgICAgImRhdGEiOiAiVGhpcyBpcyBhIHRleHRibG9jayIsDQogICAgICAgICJwb3MiOiB7DQogICAgICAgICAgIngiOiA3MCwNCiAgICAgICAgICAieSI6IDQ3DQogICAgICAgIH0sDQogICAgICAgICJzaXplIjogew0KICAgICAgICAgICJ3aWR0aCI6IDMzNSwNCiAgICAgICAgICAiaGVpZ2h0IjogNDYNCiAgICAgICAgfSwNCiAgICAgICAgInN0eWxpbmciOiB7DQogICAgICAgICAgImZvbnRTaXplIjogIjMwIiwNCiAgICAgICAgICAiZm9udEZhbWlseSI6ICJBcmlhbCIsDQogICAgICAgICAgImNvbG9yIjogIiMwMDdiZmZmZiIsDQogICAgICAgICAgImJhY2tncm91bmRDb2xvciI6ICIjZmEwMDAwMzMiLA0KICAgICAgICAgICJib3JkZXIiOiAiMSIsDQogICAgICAgICAgImJvcmRlckNvbG9yIjogIiMwMDAwMDBmZiINCiAgICAgICAgfSwNCiAgICAgICAgImxheWVyIjogMA0KICAgICAgfSwNCiAgICAgIHsNCiAgICAgICAgInR5cGUiOiAidGV4dCIsDQogICAgICAgICJkYXRhIjogIk5JQ0UiLA0KICAgICAgICAicG9zIjogew0KICAgICAgICAgICJ4IjogNTAsDQogICAgICAgICAgInkiOiAzMTANCiAgICAgICAgfSwNCiAgICAgICAgInNpemUiOiB7DQogICAgICAgICAgIndpZHRoIjogMTIzLA0KICAgICAgICAgICJoZWlnaHQiOiA0NQ0KICAgICAgICB9LA0KICAgICAgICAic3R5bGluZyI6IHsNCiAgICAgICAgICAiZm9udFNpemUiOiA0MCwNCiAgICAgICAgICAiZm9udEZhbWlseSI6ICJBcmlhbCIsDQogICAgICAgICAgImNvbG9yIjogIiMwMDAwMDBmZiIsDQogICAgICAgICAgImJhY2tncm91bmRDb2xvciI6ICIjMDAwMDAwMDAiLA0KICAgICAgICAgICJib3JkZXIiOiAiMSIsDQogICAgICAgICAgImJvcmRlckNvbG9yIjogIiMwMDAwMDBmZiINCiAgICAgICAgfSwNCiAgICAgICAgImxheWVyIjogMQ0KICAgICAgfQ0KICAgIF0NCiAgXSwNCiAgInBpeGVsUmF0aW8iOiAiNzAwOjM5NCINCn0="}, "projects.json": "Ww0KICAgIHsNCiAgICAgICAgIm5hbWUiOiAidGVzdCIsDQogICAgICAgICJwYXRoIjogImMvcHJvZ3JhbXMvZXhpdE1lL3Byb2plY3RzL3Rlc3QuanNvbiINCiAgICB9DQpd", "run.js": "U3lzdGVtLnByb2dyYW0ucnVuUHJvZ3JhbShQQVRILmZvbGRlcigpICsgIi9tYWluLmpzIik=", "style.css": "LypleGl0TWUgc3R5bGVzLiBVc2UgdGhpcyBmb3IgYWxsIGV4aXRNZSBzdHlsZXMNCiAgICBbd2luZG93aWQ9Int7d2luZG93SWR9fSJdW3dpbmRvd2VsZW1lbnQ9IiJdew0KICAgIH0NCiovDQoNCi53aW5kb3dbd2luZG93aWQ9Int7d2luZG93SWR9fSJdIC50aXRsZS1iYXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNjNTNkMTU7DQp9DQoNCi53aW5kb3dbd2luZG93aWQ9Int7d2luZG93SWR9fSJdIC5jb250ZW50IHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWFlOGU2Ow0KICAgIG92ZXJmbG93OiBoaWRkZW47DQp9DQoNCi53aW5kb3dbd2luZG93aWQ9Int7d2luZG93SWR9fSJdIC50aXRsZS1iYXIgLm1pbmltaXplIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzUzZDE1Ow0KfQ0KDQoud2luZG93W3dpbmRvd2lkPSJ7e3dpbmRvd0lkfX0iXSAudGl0bGUtYmFyIC5tYXhpbWl6ZSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2M1M2QxNTsNCn0NCg0KLndpbmRvd1t3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il0gLnRpdGxlLWJhciAuY2xvc2Ugew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNjNTNkMTU7DQp9DQoNCi53aW5kb3dbd2luZG93aWQ9Int7d2luZG93SWR9fSJdIC50aXRsZS1iYXIgLm1pbmltaXplOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDQ0YjIzOw0KfQ0KDQoud2luZG93W3dpbmRvd2lkPSJ7e3dpbmRvd0lkfX0iXSAudGl0bGUtYmFyIC5tYXhpbWl6ZTpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2Q0NGIyMzsNCn0NCg0KLndpbmRvd1t3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il0gLnRpdGxlLWJhciAuY2xvc2U6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICM5NjIzMDA7DQp9DQoNCg0KW3dpbmRvd2lkPSJ7e3dpbmRvd0lkfX0iXVt3aW5kb3dlbGVtZW50PSJyaWJib25Db250cm9sbEJhciJdIHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0idG9wQmFyIl0gew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAgZmxleC1kaXJlY3Rpb246IHJvdzsNCiAgICBoZWlnaHQ6IDMwcHg7DQogICAgd2lkdGg6IDEwMCU7DQoNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzUzZDE1Ow0KDQoNCiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2JmYmZiZjsNCn0NCg0KW3dpbmRvd2lkPSJ7e3dpbmRvd0lkfX0iXVt3aW5kb3dlbGVtZW50PSJwcm9qZWN0RWRpdCJdIHsNCiAgICBoZWlnaHQ6IDEwMCU7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0idG9vbFNlbGVjdCJdIHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7DQogICAgaGVpZ2h0OiAxMDBweDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZlNmU2Ow0KICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYmZiZmJmOw0KICAgIGZsZXgtd3JhcDogbm93cmFwOw0KICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0Ow0KfQ0KDQpbd2luZG93aWQ9Int7d2luZG93SWR9fSJdW3dpbmRvd2VsZW1lbnQ9InRvb2xTZWxlY3RFbGVtZW50Il0gew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAgZmxleC13cmFwOiB3cmFwOw0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsNCiAgICBoZWlnaHQ6IDEwMCU7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0icmliYm9uVG9wIl0gew0KICAgIGhlaWdodDogMTAwJTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZlNmU2Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNiZmJmYmY7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0icmliYm9uVG9wIl06aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNlYmViZWI7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0icmliYm9uQm90dG9tIl0gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0icmliYm9uQm90dG9tIl06aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNlYmViZWI7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0icmliYm9uVG9wIl1bc2VsZWN0ZWRdIHsNCiAgICBib3JkZXItYm90dG9tOiBub25lOw0KfQ0KDQpbd2luZG93aWQ9Int7d2luZG93SWR9fSJdW3dpbmRvd2VsZW1lbnQ9InByb2plY3RDb250ZW50Il0gew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZjAwMDA7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsNCn0NCg0KDQpbd2luZG93aWQ9Int7d2luZG93SWR9fSJdW3dpbmRvd2VsZW1lbnQ9ImVkaXRvclJpZ2h0U2lkZSJdIHsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgd2lkdGg6IGNhbGMoMTAwJSAtIDEwNHB4KTsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCn0NCg0KW3dpbmRvd2lkPSJ7e3dpbmRvd0lkfX0iXVt3aW5kb3dlbGVtZW50PSJib3R0b21Db250cm9sbCJdIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlZWVlOw0KICAgIGhlaWdodDogMzBweDsNCiAgICB3aWR0aDogY2FsYygxMDAlICsgMDBweCk7DQogICAgYm90dG9tOiAwcHg7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNiZmJmYmY7DQogICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlOw0KICAgIGZsZXgtd3JhcDogbm93cmFwOw0KfQ0KDQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0icHJvamVjdENvbnRlbnRXcmFwZXIiXSB7DQogICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgIG92ZXJmbG93OiBhdXRvOw0KICAgIGhlaWdodDogZml0LWNvbnRlbnQ7DQogICAgbWF4LWhlaWdodDogY2FsYygxMDAlIC0gNjBweCk7DQogICAgbWFyZ2luOiBhdXRvOw0KICAgIHdpZHRoOiBmaXQtY29udGVudDsNCn0NCg0KW3dpbmRvd2lkPSJ7e3dpbmRvd0lkfX0iXVt3aW5kb3dlbGVtZW50PSJwYWdlU2VsZWN0Il0gew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAgZmxleC1kaXJlY3Rpb246IHJvdzsNCiAgICB3aWR0aDogMTAycHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2VhZThlNjsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjYmZiZmJmOw0KfQ0KDQpbd2luZG93aWQ9Int7d2luZG93SWR9fSJdW3dpbmRvd2VsZW1lbnQ9InBhZ2VSZW5kZXIiXSB7DQogICAgd2lkdGg6IDEwMHB4Ow0KICAgIGhlaWdodDogMTAwcHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0ic21hbGxQYWdlIl0gew0KICAgIHdpZHRoOiAxMDBweDsNCiAgICBoZWlnaHQ6IGZpdC1jb250ZW50Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNiZmJmYmY7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0iZWRpdG9yIl0gew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAgZmxleC1kaXJlY3Rpb246IHJvdzsNCiAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDEzM3B4KTsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KW3dpbmRvd2lkPSJ7e3dpbmRvd0lkfX0iXVt3aW5kb3dlbGVtZW50PSJjb250ZW50Q2hhbmdlciJdIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwMDA7DQogICAgei1pbmRleDogOTk5OTsNCn0NCg0KW3dpbmRvd2lkPSJ7e3dpbmRvd0lkfX0iXVt3aW5kb3dlbGVtZW50PSJjb250ZW50Q2hhbmdlcl9ib21tbCJdIHsNCiAgICBib3JkZXI6IDNweCByZ2IoMTYwLCAxNjAsIDE2MCkgc29saWQ7DQogICAgYm9yZGVyLXJhZGl1czogNTAlOw0KICAgIHdpZHRoOiAxMHB4Ow0KICAgIGhlaWdodDogMTBweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgei1pbmRleDogOTk5OTsNCn0NCg0KW3dpbmRvd2lkPSJ7e3dpbmRvd0lkfX0iXVt3aW5kb3dlbGVtZW50PSJjb250ZW50Q2hhbmdlckJvcmRlciJdIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgY3Vyc29yOiBtb3ZlOw0KICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50Ow0KICAgIHBvaW50ZXItZXZlbnRzOiBub25lOw0KICAgIGJvcmRlcjogMnB4IHNvbGlkICM2OTY5Njk7DQogICAgdG9wOiAtMnB4Ow0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICBsZWZ0OiAtMnB4Ow0KfQ0KDQpbd2luZG93aWQ9Int7d2luZG93SWR9fSJdW3dpbmRvd2VsZW1lbnQ9ImNvbnRlbnRDaGFuZ2VyQm9yZGVyIl0+ZGl2IHsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDA0Ow0KICAgIHdpZHRoOiAzMHB4Ow0KICAgIGhlaWdodDogMzBweDsNCiAgICBwb2ludGVyLWV2ZW50czogYXV0bzsNCn0NCg0KDQpbd2luZG93aWQ9Int7d2luZG93SWR9fSJdW3dpbmRvd2VsZW1lbnQ9ImNvbnRlbnRDaGFuZ2VyQm9yZGVyIl0+ZGl2Om50aC1jaGlsZCgxKSB7DQogICAgdG9wOiAtMjBweDsNCiAgICBsZWZ0OiAwcHg7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0iY29udGVudENoYW5nZXJCb3JkZXIiXT5kaXY6bnRoLWNoaWxkKDIpIHsNCiAgICBib3R0b206IC0yMHB4Ow0KICAgIGxlZnQ6IDBweDsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KW3dpbmRvd2lkPSJ7e3dpbmRvd0lkfX0iXVt3aW5kb3dlbGVtZW50PSJjb250ZW50Q2hhbmdlckJvcmRlciJdPmRpdjpudGgtY2hpbGQoMykgew0KICAgIGxlZnQ6IC0yMHB4Ow0KICAgIHRvcDogMHB4Ow0KICAgIGhlaWdodDogMTAwJTsNCn0NCg0KW3dpbmRvd2lkPSJ7e3dpbmRvd0lkfX0iXVt3aW5kb3dlbGVtZW50PSJjb250ZW50Q2hhbmdlckJvcmRlciJdPmRpdjpudGgtY2hpbGQoNCkgew0KICAgIHRvcDogMHB4Ow0KICAgIHJpZ2h0OiAtMjBweDsNCiAgICBoZWlnaHQ6IDEwMCU7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0ic2VwZXJhdG9yIl0gew0KICAgIHdpZHRoOiAwcHg7DQogICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjYmZiZmJmOw0KICAgIGhlaWdodDogMTAwJTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBhcXVhOw0KICAgIG1hcmdpbjogMDsNCiAgICBtYXJnaW4tcmlnaHQ6IDhweDsNCiAgICBtYXJnaW4tbGVmdDogOHB4Ow0KfQ0KDQpbd2luZG93aWQ9Int7d2luZG93SWR9fSJdW3dpbmRvd2VsZW1lbnQ9ImRlc2NyaXB0b3IiXSB7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIGJvdHRvbTogMDsNCiAgICBsZWZ0OiAwOw0KICAgIGNvbG9yOiBncmF5Ow0KICAgIGZvbnQtc2l6ZTogMThweDsNCn0="}
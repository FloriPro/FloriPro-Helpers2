{"gui": {"elementFunctions": {"core.js": "KGNsYXNzIHsNCiAgICBjb25zdHJ1Y3Rvcih3aW5kb3cpIHsNCiAgICAgICAgdGhpcy53aW5kb3cgPSB3aW5kb3cNCiAgICB9DQogICAgY29udGV4dE1lbnVBbGwoKSB7DQogICAgICAgIHJldHVybiBbDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgIm5hbWUiOiAicmVtb3ZlIiwNCiAgICAgICAgICAgICAgICAiYWN0aW9uIjogKGVsZW1lbnRzLCBub3dFZGl0aW5nLCBjb250ZW50KSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBlbGVtZW50c1tub3dFZGl0aW5nXTsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudC5xdWVyeVNlbGVjdG9yKGBbdXVpZD0iJHtub3dFZGl0aW5nfSJdYCkucmVtb3ZlKCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAibmFtZSI6ICJsYXllciIsDQogICAgICAgICAgICAgICAgImFjdGlvbiI6IChlbGVtZW50cywgbm93RWRpdGluZywgY29udGVudCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBTeXN0ZW1IdG1sLkNvbnRleHRNZW51LnNwZWNpZmljKHsNCiAgICAgICAgICAgICAgICAgICAgICAgICJtb3ZlIHRvIHRvcCI6IFsoeCkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBbZWxlbWVudHMsIG5vd0VkaXRpbmcsIGNvbnRlbnRdID0gW3hbMF0sIHhbMV0sIHhbMl1dOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVsID0gY29udGVudC5xdWVyeVNlbGVjdG9yKGBbdXVpZD0iJHtub3dFZGl0aW5nfSJdYCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudC5yZW1vdmVDaGlsZChlbCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudC5hcHBlbmRDaGlsZChlbCk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZWwyID0gZWxlbWVudHNbbm93RWRpdGluZ107DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGVsZW1lbnRzW25vd0VkaXRpbmddOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRzW25vd0VkaXRpbmddID0gZWwyOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSwgW2VsZW1lbnRzLCBub3dFZGl0aW5nLCBjb250ZW50XV0sDQogICAgICAgICAgICAgICAgICAgICAgICAibW92ZSB0byBib3R0b20iOiBbKHgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgW2VsZW1lbnRzLCBub3dFZGl0aW5nLCBjb250ZW50XSA9IFt4WzBdLCB4WzFdLCB4WzJdXTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZWwgPSBjb250ZW50LnF1ZXJ5U2VsZWN0b3IoYFt1dWlkPSIke25vd0VkaXRpbmd9Il1gKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50LnJlbW92ZUNoaWxkKGVsKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50LnByZXBlbmQoZWwpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVsMiA9IGVsZW1lbnRzW25vd0VkaXRpbmddOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBlbGVtZW50c1tub3dFZGl0aW5nXTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50c1tub3dFZGl0aW5nXSA9IGVsMjsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sIFtlbGVtZW50cywgbm93RWRpdGluZywgY29udGVudF1dLA0KICAgICAgICAgICAgICAgICAgICAgICAgIm1vdmUgdXAiOiBbKHgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oImxheWVyaW5nIG92ZXJoYXVsIG5lZWRlZCEiKSAvL1RPRE86IExheWVyaW5nIE92ZXJoYXVsDQogICAgICAgICAgICAgICAgICAgICAgICB9LCBbZWxlbWVudHMsIG5vd0VkaXRpbmcsIGNvbnRlbnRdXSwNCiAgICAgICAgICAgICAgICAgICAgICAgICJtb3ZlIGRvd24iOiBbKHgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oImxheWVyaW5nIG92ZXJoYXVsIG5lZWRlZCEiKSAvL1RPRE86IExheWVyaW5nIE92ZXJoYXVsDQogICAgICAgICAgICAgICAgICAgICAgICB9LCBbZWxlbWVudHMsIG5vd0VkaXRpbmcsIGNvbnRlbnRdXSwNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICBdDQogICAgfQ0KICAgIGdldCgpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICJ0ZXh0Ijogew0KICAgICAgICAgICAgICAgICJzZXQiOiB0aGlzLnRleHRTZXR0aW5ncywNCiAgICAgICAgICAgICAgICAiY3JlYXRlIjogKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgicCIpOw0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgImVkaXRDb250ZW50IjogYXN5bmMgKGVsZW1lbnQsIG5vd0VkaXRpbmcsIGNvbnRlbnQpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgdmFyIGNjY2MgPSAoYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQoImNvbnRlbnRDaGFuZ2VyQ2hhbmdlVGV4dCIpKTsNCiAgICAgICAgICAgICAgICAgICAgY2NjYy52YWx1ZSA9IGVsZW1lbnQuZGF0YTsNCiAgICAgICAgICAgICAgICAgICAgY2NjYy5zdHlsZS5kaXNwbGF5ID0gIiI7DQogICAgICAgICAgICAgICAgICAgIGNjY2Muc2VsZWN0KCk7DQoNCiAgICAgICAgICAgICAgICAgICAgY2NjYy5zdHlsZS5jb2xvciA9IGVsZW1lbnQuc3R5bGluZy5jb2xvcjsNCiAgICAgICAgICAgICAgICAgICAgY2NjYy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBlbGVtZW50LnN0eWxpbmcuYmFja2dyb3VuZENvbG9yOw0KICAgICAgICAgICAgICAgICAgICBjY2NjLnN0eWxlLmZvbnRTaXplID0gZWxlbWVudC5zdHlsaW5nLmZvbnRTaXplICsgInB4IjsNCiAgICAgICAgICAgICAgICAgICAgY2NjYy5zdHlsZS5mb250RmFtaWx5ID0gZWxlbWVudC5zdHlsaW5nLmZvbnRGYW1pbHk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy9oaWRlIGVsZW1lbnQNCiAgICAgICAgICAgICAgICAgICAgY29udGVudC5xdWVyeVNlbGVjdG9yKGBbdXVpZD0iJHtub3dFZGl0aW5nfSJdYCkuc3R5bGUuZGlzcGxheSA9ICJub25lIjsNCg0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICJzdG9wRWRpdCI6IGFzeW5jIChlbGVtZW50cywgbm93RWRpdGluZywgY29udGVudCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb250ZW50LnF1ZXJ5U2VsZWN0b3IoYFt1dWlkPSIke25vd0VkaXRpbmd9Il1gKS5zdHlsZS5kaXNwbGF5ID0gIiI7DQogICAgICAgICAgICAgICAgICAgIGVsZW1lbnRzW25vd0VkaXRpbmddLmRhdGEgPSAoYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQoImNvbnRlbnRDaGFuZ2VyQ2hhbmdlVGV4dCIpKS52YWx1ZTsNCiAgICAgICAgICAgICAgICAgICAgKGF3YWl0IHRoaXMud2luZG93LmdldEh0bWxFbGVtZW50KCJjb250ZW50Q2hhbmdlckNoYW5nZVRleHQiKSkuc3R5bGUuZGlzcGxheSA9ICJub25lIjsNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICJjb250ZXh0TWVudSI6IFsNCiAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiAidGVzdCIsDQogICAgICAgICAgICAgICAgICAgICAgICAiYWN0aW9uIjogKGVsZW1lbnRzLCBub3dFZGl0aW5nLCBjb250ZW50KSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coInRlc3QiKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIF0NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAiaW1hZ2UiOiB7DQogICAgICAgICAgICAgICAgInNldCI6IHRoaXMuaW1hZ2VTZXR0aW5ncywNCiAgICAgICAgICAgICAgICAiY3JlYXRlIjogKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW1nIik7DQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAiZWRpdENvbnRlbnQiOiBhc3luYyAoZWxlbWVudCwgbm93RWRpdGluZywgY29udGVudCkgPT4gew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAic3RvcEVkaXQiOiBhc3luYyAoZWxlbWVudHMsIG5vd0VkaXRpbmcsIGNvbnRlbnQpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCJzdG9wIGVkaXQgc2hvdWxkIG5vdCBiZSBjYWxsZWQgb24gaW1hZ2UhIik7DQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAiY29udGV4dE1lbnUiOiBbXQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgdGV4dFNldHRpbmdzKGVsZW1lbnQsIGRvbUVMKSB7DQogICAgICAgIGRvbUVMLmlubmVyVGV4dCA9IGVsZW1lbnQuZGF0YTsNCiAgICAgICAgZG9tRUwuc3R5bGUuY29sb3IgPSBlbGVtZW50LnN0eWxpbmcuY29sb3I7DQogICAgICAgIGRvbUVMLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGVsZW1lbnQuc3R5bGluZy5iYWNrZ3JvdW5kQ29sb3I7DQogICAgICAgIGRvbUVMLnN0eWxlLmZvbnRTaXplID0gZWxlbWVudC5zdHlsaW5nLmZvbnRTaXplICsgInB4IjsNCiAgICAgICAgZG9tRUwuc3R5bGUuZm9udEZhbWlseSA9IGVsZW1lbnQuc3R5bGluZy5mb250RmFtaWx5Ow0KICAgICAgICByZXR1cm4gW10NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiANCiAgICAgKiBAcGFyYW0ge2FueX0gZWxlbWVudCANCiAgICAgKiBAcGFyYW0ge0hUTUxJbWFnZUVsZW1lbnR9IGRvbUVMIA0KICAgICAqIEByZXR1cm5zIA0KICAgICAqLw0KDQogICAgaW1hZ2VTZXR0aW5ncyhlbGVtZW50LCBkb21FTCkgew0KICAgICAgICBkb21FTC5zcmMgPSBlbGVtZW50LmRhdGE7DQogICAgICAgIGlmIChlbGVtZW50LnN0eWxpbmcuY29uc2lzdGVudFNpemUgPT0gdHJ1ZSkgew0KICAgICAgICAgICAgZG9tRUwuc3R5bGUuaGVpZ2h0ID0gIiI7DQogICAgICAgICAgICBlbGVtZW50LnNpemUuaGVpZ2h0ID0gZG9tRUwuaGVpZ2h0DQogICAgICAgICAgICByZXR1cm4gWyJzdHlsZV9oZWlnaHQiXTsNCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gW107DQogICAgfQ0KfSk7"}, "projectEditor.js": "", "ribbon": {"add.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiRWxlbWVudHMiOw0KICAgIH0NCiAgICBnZXRGdW5jdGlvbnMoKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAidGV4dCI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMudGV4dCB9LA0KICAgICAgICAgICAgImJ1dHRvbiI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuYnV0dG9uIH0sDQogICAgICAgICAgICAiaW1hZ2UiOiB7ICJ0eXBlIjogImJ1dHRvbiIsICJjaGFuZ2UiOiB0aGlzLmltYWdlIH0sDQogICAgICAgICAgICAid2Vic2l0ZSI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMud2Vic2l0ZSB9LA0KICAgICAgICB9DQogICAgfQ0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3IgDQogICAgICovDQogICAgYXN5bmMgdGV4dChlZGl0b3IpIHsNCiAgICAgICAgZWRpdG9yLmNyZWF0ZUVsZW1lbnQoew0KICAgICAgICAgICAgInR5cGUiOiAidGV4dCIsDQogICAgICAgICAgICAiZGF0YSI6ICJUZXh0IiwNCiAgICAgICAgICAgICJwb3MiOiB7DQogICAgICAgICAgICAgICAgeDogMTAsDQogICAgICAgICAgICAgICAgeTogMTANCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAic2l6ZSI6IHsNCiAgICAgICAgICAgICAgICB3aWR0aDogMTAwLA0KICAgICAgICAgICAgICAgIGhlaWdodDogMTAwDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgInN0eWxpbmciOiB7DQogICAgICAgICAgICAgICAgImZvbnRTaXplIjogNDAsDQogICAgICAgICAgICAgICAgImZvbnRGYW1pbHkiOiAiQXJpYWwiLA0KICAgICAgICAgICAgICAgICJjb2xvciI6ICIjMDAwMDAwZmYiLA0KICAgICAgICAgICAgICAgICJiYWNrZ3JvdW5kQ29sb3IiOiAiIzAwMDAwMDAwIg0KICAgICAgICAgICAgfQ0KICAgICAgICB9KTsNCiAgICB9DQogICAgYXN5bmMgYnV0dG9uKCkgew0KICAgICAgICBjb25zb2xlLndhcm4oImJ1dHRvbiBub3QgaW1wbGVtZW50ZWQiKTsNCiAgICB9DQogICAgYXN5bmMgaW1hZ2UoZWRpdG9yKSB7DQogICAgICAgIGVkaXRvci5jcmVhdGVFbGVtZW50KHsNCiAgICAgICAgICAgICJ0eXBlIjogImltYWdlIiwNCiAgICAgICAgICAgICJkYXRhIjogImh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vaW1hZ2VzL2JyYW5kaW5nL2dvb2dsZWxvZ28vMngvZ29vZ2xlbG9nb19jb2xvcl8yNzJ4OTJkcC5wbmciLA0KICAgICAgICAgICAgInBvcyI6IHsNCiAgICAgICAgICAgICAgICB4OiAxMCwNCiAgICAgICAgICAgICAgICB5OiAxMA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICJzaXplIjogew0KICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAsDQogICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDANCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAic3R5bGluZyI6IHsNCiAgICAgICAgICAgICAgICAiY29uc2lzdGVudFNpemUiOiBmYWxzZSwNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSk7DQogICAgfQ0KICAgIGFzeW5jIHdlYnNpdGUoKSB7DQogICAgICAgIGNvbnNvbGUud2Fybigid2Vic2l0ZSBub3QgaW1wbGVtZW50ZWQiKTsNCiAgICB9DQp9KSgpOw==", "edit.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgICAgIHRoaXMuZWxlbWVudCA9IG51bGw7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiRWRpdCI7DQogICAgfQ0KICAgIC8qKg0KICAgICAqIEBwYXJhbSB7e3R5cGU6c3RyaW5nLCBkYXRhOnN0cmluZ3xhbnksIHBvczp7eDpudW1iZXIseTpudW1iZXJ9LCBzaXplOnt3aWR0aDpudW1iZXIsaGVpZ2h0Om51bWJlcn0sIHN0eWxpbmc6YW55fX0gZWxlbWVudA0KICAgICAqLw0KICAgIGdldEZ1bmN0aW9ucyhlbGVtZW50KSB7DQogICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7DQoNCiAgICAgICAgaWYgKGVsZW1lbnQgPT0gbnVsbCkgew0KICAgICAgICAgICAgcmV0dXJuIHt9Ow0KICAgICAgICB9DQogICAgICAgIGlmIChlbGVtZW50LnR5cGUgPT0gInRleHQiKSB7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgICJmb250U2l6ZSI6IHsgInR5cGUiOiAibnVtYmVyIiwgImNoYW5nZSI6IHRoaXMuZm9udFNpemUuYmluZCh0aGlzKSwgImdldCI6IHRoaXMuZ2V0Rm9udFNpemUuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgICAgICJmb250RmFtaWx5IjogeyAidHlwZSI6ICJ0ZXh0IiwgImNoYW5nZSI6IHRoaXMuZm9udEZhbWlseS5iaW5kKHRoaXMpLCAiZ2V0IjogdGhpcy5nZXRGb250RmFtaWx5LmJpbmQodGhpcykgfSwNCiAgICAgICAgICAgICAgICAiY29sb3IiOiB7ICJ0eXBlIjogImNvbG9yIiwgImNoYW5nZSI6IHRoaXMuY29sb3IuYmluZCh0aGlzKSwgImdldCI6IHRoaXMuZ2V0Q29sb3IuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgICAgICJiYWNrZ3JvdW5kQ29sb3IiOiB7ICJ0eXBlIjogImNvbG9yIiwgImNoYW5nZSI6IHRoaXMuYmFja2dyb3VuZENvbG9yLmJpbmQodGhpcyksICJnZXQiOiB0aGlzLmdldEJhY2tncm91bmRDb2xvci5iaW5kKHRoaXMpIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSBlbHNlIGlmIChlbGVtZW50LnR5cGUgPT0gImltYWdlIikgew0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAiSW1hZ2UiOiB7ICJ0eXBlIjogImZpbGUiLCAiY2hhbmdlIjogdGhpcy5pbWFnZVNyYy5iaW5kKHRoaXMpLCAiZ2V0IjogdGhpcy5nZXRJbWFnZS5iaW5kKHRoaXMpIH0sDQogICAgICAgICAgICAgICAgIkltYWdlIFVybCI6IHsgInR5cGUiOiAic3RyaW5nQXNrIiwgImNoYW5nZSI6IHRoaXMuaW1hZ2VVcmwuYmluZCh0aGlzKSwgImdldCI6IHRoaXMuZ2V0SW1hZ2UuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgICAgICJDb25zaXN0ZW50IFNpemUiOiB7ICJ0eXBlIjogImNoZWNrYm94IiwgImNoYW5nZSI6IHRoaXMuaW1hZ2VDb25zaXN0ZW50U2l6ZS5iaW5kKHRoaXMpLCAiZ2V0IjogdGhpcy5nZXRJbWFnZUNvbnNpc3RlbnRTaXplLmJpbmQodGhpcykgfQ0KICAgICAgICAgICAgfTsNCiAgICAgICAgfQ0KICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgIHJldHVybiB7fTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICBnZXRGb250U2l6ZSgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudC5zdHlsaW5nLmZvbnRTaXplOw0KICAgIH0NCiAgICBnZXRGb250RmFtaWx5KCkgew0KICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LnN0eWxpbmcuZm9udEZhbWlseTsNCiAgICB9DQogICAgZ2V0Q29sb3IoKSB7DQogICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQuc3R5bGluZy5jb2xvcjsNCiAgICB9DQogICAgZ2V0QmFja2dyb3VuZENvbG9yKCkgew0KICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LnN0eWxpbmcuYmFja2dyb3VuZENvbG9yOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yDQogICAgICogQHBhcmFtIHtIVE1MSW5wdXRFbGVtZW50fSBlbGVtZW50IA0KICAgICAqLw0KICAgIGZvbnRTaXplKGVkaXRvciwgZWxlbWVudCkgew0KICAgICAgICBlZGl0b3IuZWxlbWVudHNbZWRpdG9yLm5vd0VkaXRpbmddLnN0eWxpbmcuZm9udFNpemUgPSBlbGVtZW50LnZhbHVlOw0KICAgICAgICBlZGl0b3IucmVsb2FkRWxlbWVudChlZGl0b3Iubm93RWRpdGluZyk7DQogICAgfQ0KICAgIC8qKg0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3IgDQogICAgICogQHBhcmFtIHtIVE1MSW5wdXRFbGVtZW50fSBlbGVtZW50IA0KICAgICAqLw0KICAgIGZvbnRGYW1pbHkoZWRpdG9yLCBlbGVtZW50KSB7DQogICAgICAgIGVkaXRvci5lbGVtZW50c1tlZGl0b3Iubm93RWRpdGluZ10uc3R5bGluZy5mb250RmFtaWx5ID0gZWxlbWVudC52YWx1ZTsNCiAgICAgICAgZWRpdG9yLnJlbG9hZEVsZW1lbnQoZWRpdG9yLm5vd0VkaXRpbmcpOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqIEBwYXJhbSB7SFRNTElucHV0RWxlbWVudH0gZWxlbWVudCANCiAgICAgKi8NCiAgICBjb2xvcihlZGl0b3IsIGNvbG9yKSB7DQogICAgICAgIGVkaXRvci5lbGVtZW50c1tlZGl0b3Iubm93RWRpdGluZ10uc3R5bGluZy5jb2xvciA9IGNvbG9yOw0KICAgICAgICBlZGl0b3IucmVsb2FkRWxlbWVudChlZGl0b3Iubm93RWRpdGluZyk7DQogICAgfQ0KICAgIC8qKg0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3IgDQogICAgICogQHBhcmFtIHtIVE1MSW5wdXRFbGVtZW50fSBlbGVtZW50IA0KICAgICAqLw0KICAgIGJhY2tncm91bmRDb2xvcihlZGl0b3IsIGNvbG9yKSB7DQogICAgICAgIGVkaXRvci5lbGVtZW50c1tlZGl0b3Iubm93RWRpdGluZ10uc3R5bGluZy5iYWNrZ3JvdW5kQ29sb3IgPSBjb2xvcjsNCiAgICAgICAgZWRpdG9yLnJlbG9hZEVsZW1lbnQoZWRpdG9yLm5vd0VkaXRpbmcpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3INCiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZmlsZVBhdGgNCiAgICAgKi8NCiAgICBhc3luYyBpbWFnZVNyYyhlZGl0b3IsIGZpbGVQYXRoKSB7DQogICAgICAgIGVkaXRvci5lbGVtZW50c1tlZGl0b3Iubm93RWRpdGluZ10uZGF0YSA9IFN5c3RlbUZpbGVTeXN0ZW0udG9JbWcoYXdhaXQgU3lzdGVtRmlsZVN5c3RlbS5nZXRGaWxlU3RyaW5nKGZpbGVQYXRoKSk7DQogICAgICAgIGVkaXRvci5lbGVtZW50c1tlZGl0b3Iubm93RWRpdGluZ10ucGF0aCA9IGZpbGVQYXRoOw0KICAgICAgICBlZGl0b3IucmVsb2FkRWxlbWVudChlZGl0b3Iubm93RWRpdGluZyk7DQogICAgfQ0KDQogICAgYXN5bmMgaW1hZ2VVcmwoZWRpdG9yLCB1cmwpIHsNCiAgICAgICAgdmFyIG4gPSBhd2FpdCBTeXN0ZW0ubmV0d29yay5pbmZvcm1hdGlvbmFsRmV0Y2hfVGV4dCh1cmwpOw0KDQogICAgICAgIGVkaXRvci5lbGVtZW50c1tlZGl0b3Iubm93RWRpdGluZ10uZGF0YSA9IFN5c3RlbUZpbGVTeXN0ZW0udG9JbWcobik7DQogICAgICAgIGVkaXRvci5lbGVtZW50c1tlZGl0b3Iubm93RWRpdGluZ10ucGF0aCA9ICJ1cmwiOw0KICAgICAgICBlZGl0b3IucmVsb2FkRWxlbWVudChlZGl0b3Iubm93RWRpdGluZyk7DQogICAgfQ0KDQogICAgZ2V0SW1hZ2UoKSB7DQogICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQucGF0aDsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yDQogICAgICogQHBhcmFtIHtIVE1MSW5wdXRFbGVtZW50fSBlbGVtZW50DQogICAgICovDQogICAgaW1hZ2VDb25zaXN0ZW50U2l6ZShlZGl0b3IsIGVsZW1lbnQpIHsNCiAgICAgICAgZWRpdG9yLmVsZW1lbnRzW2VkaXRvci5ub3dFZGl0aW5nXS5zdHlsaW5nLmNvbnNpc3RlbnRTaXplID0gZWxlbWVudC5jaGVja2VkOw0KICAgICAgICBlZGl0b3IucmVsb2FkRWxlbWVudChlZGl0b3Iubm93RWRpdGluZyk7DQogICAgfQ0KDQogICAgZ2V0SW1hZ2VDb25zaXN0ZW50U2l6ZSgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudC5zdHlsaW5nLmNvbnNpc3RlbnRTaXplOw0KICAgIH0NCn0pKCk7", "file.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiZmlsZSI7DQogICAgfQ0KICAgIGdldEZ1bmN0aW9ucygpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICJzYXZlUHJvamVjdCI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuc2F2ZVByb2plY3QuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgInNhdmVQcm9qZWN0QXMiOiB7ICJ0eXBlIjogImJ1dHRvbiIsICJjaGFuZ2UiOiB0aGlzLnNhdmVQcm9qZWN0QXMuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgImNsb3NlUHJvamVjdCI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuY2xvc2VQcm9qZWN0IH0sDQogICAgICAgICAgICAiZXhpdCI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuZXhpdCB9DQogICAgICAgIH0NCiAgICB9DQogICAgLyoqDQogICAgICogDQogICAgICogQHBhcmFtIHtleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3J9IGVkaXRvciANCiAgICAgKi8NCiAgICBhc3luYyBzYXZlUHJvamVjdChlZGl0b3IpIHsNCiAgICAgICAgdmFyIHggPSB0aGlzLmdlbmVyYXRlU2F2ZUZpbGUoZWRpdG9yKTsNCiAgICAgICAgU3lzdGVtRmlsZVN5c3RlbS5zZXRGaWxlU3RyaW5nKGVkaXRvci5wcm9qZWN0UGF0aCwgSlNPTi5zdHJpbmdpZnkoeCkpOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiANCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIGFzeW5jIHNhdmVQcm9qZWN0QXMoZWRpdG9yKSB7DQogICAgICAgIGNvbnNvbGUud2Fybigic2F2ZVByb2plY3RBcyBub3QgaW1wbGVtZW50ZWQiKTsNCiAgICB9DQogICAgLyoqDQogICAgICogDQogICAgICogQHBhcmFtIHtleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3J9IGVkaXRvciANCiAgICAgKi8NCiAgICBhc3luYyBjbG9zZVByb2plY3QoZWRpdG9yKSB7DQogICAgICAgIGNvbnNvbGUud2FybigiY2xvc2VQcm9qZWN0IG5vdCBpbXBsZW1lbnRlZCIpOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiANCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIGFzeW5jIGV4aXQoZWRpdG9yKSB7DQogICAgICAgIGNvbnNvbGUud2FybigiZXhpdCBub3QgaW1wbGVtZW50ZWQiKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiANCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yDQogICAgICovDQogICAgZ2VuZXJhdGVTYXZlRmlsZShlZGl0b3IpIHsNCiAgICAgICAgdmFyIG91dCA9IFtdOw0KICAgICAgICBmb3IgKHZhciB4IG9mIE9iamVjdC52YWx1ZXMoZWRpdG9yLmVsZW1lbnRzKSkgew0KICAgICAgICAgICAgZGVsZXRlIHhbImlkIl07DQogICAgICAgICAgICBvdXQucHVzaCh4KTsNCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gb3V0Ow0KICAgIH0NCn0pKCk7"}, "ribbon.js": ""}, "gui.js": "Y2xhc3MgZXhpdE1lX2d1aSBleHRlbmRzIFN5c3RlbS5wcm9ncmFtLmRlZmF1bHQgew0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7SHRtbFdpbmRvd30gd2luZG93IA0KICAgICAqLw0KICAgIGFzeW5jIGluaXQod2luZG93KSB7DQogICAgICAgIHRoaXMuZ2V0UGF0aCA9ICgpID0+IHsgfTsNCiAgICAgICAgdGhpcy50eXBlcyA9IFsicHJvamVjdENob29zZSIsICJwcm9qZWN0RWRpdCJdOw0KICAgICAgICB0aGlzLndpbmRvdyA9IHdpbmRvdzsNCg0KICAgICAgICB0aGlzLmxvYWRQcm9qZWN0ID0gKG5hbWUpID0+IHsgfTsNCiAgICAgICAgdGhpcy5zaG93KCJwcm9qZWN0Q2hvb3NlIik7DQoNCg0KICAgICAgICAvKioNCiAgICAgICAgICogQHR5cGUge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0NCiAgICAgICAgICovDQogICAgICAgIHRoaXMucHJvamVjdEVkaXRvciA9IGF3YWl0IFN5c3RlbS5wcm9ncmFtLnJ1blByb2dyYW0odGhpcy5QQVRILmZvbGRlcigpICsgIi9ndWkvcHJvamVjdEVkaXRvci5qcyIsIHRoaXMud2luZG93KTsNCiAgICAgICAgdGhpcy5wcm9qZWN0RWRpdG9yLmdldFBhdGggPSB0aGlzLmdldFBhdGguYmluZCh0aGlzKTsNCg0KICAgICAgICAvKioNCiAgICAgICAgICogQHR5cGUge2V4aXRNZV9ndWlfcmliYm9ufQ0KICAgICAgICAgKi8NCiAgICAgICAgdGhpcy5yaWJib24gPSBhd2FpdCBTeXN0ZW0ucHJvZ3JhbS5ydW5Qcm9ncmFtKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvZ3VpL3JpYmJvbi5qcyIsIFt0aGlzLndpbmRvdywgdGhpcy5wcm9qZWN0RWRpdG9yXSk7DQoNCiAgICAgICAgdGhpcy5wcm9qZWN0RWRpdG9yLnNlbGVjdCA9IHRoaXMucmliYm9uLnNldEVsZW1lbnQuYmluZCh0aGlzLnJpYmJvbik7DQogICAgfQ0KDQogICAgYXN5bmMgc2hvdyh0eXApIHsNCiAgICAgICAgZm9yICh2YXIgeCBvZiB0aGlzLnR5cGVzKSB7DQogICAgICAgICAgICBpZiAoeCA9PSB0eXApIHsNCiAgICAgICAgICAgICAgICAoYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQodHlwKSkuc3R5bGUuZGlzcGxheSA9ICIiOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAoYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQoeCkpLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBwcm9qZWN0cyANCiAgICAgKiBAcmV0dXJucyANCiAgICAgKi8NCiAgICBhc3luYyBzZXRQcm9qZWN0cyhwcm9qZWN0cykgew0KICAgICAgICB2YXIgYXZhaWxQcm9qZWN0cyA9IGF3YWl0IHRoaXMud2luZG93LmdldEh0bWxFbGVtZW50KCJhdmFpbFByb2plY3RzIik7DQogICAgICAgIGF2YWlsUHJvamVjdHMuaW5uZXJIVE1MID0gIiI7DQoNCiAgICAgICAgaWYgKHByb2plY3RzLmxlbmd0aCA9PSAwKSB7DQogICAgICAgICAgICBhdmFpbFByb2plY3RzLmlubmVySFRNTCA9ICI8cD48aT5ObyBwcm9qZWN0cyBmb3VuZDwvaT48L3A+IjsNCiAgICAgICAgICAgIHJldHVybg0KICAgICAgICB9DQoNCiAgICAgICAgZm9yICh2YXIgeCBvZiBwcm9qZWN0cykgew0KICAgICAgICAgICAgdmFyIHByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJidXR0b24iKTsNCiAgICAgICAgICAgIHByb2plY3QuY2xhc3NOYW1lID0gInByb2plY3QiOw0KICAgICAgICAgICAgcHJvamVjdC5pbm5lclRleHQgPSB4Lm5hbWU7DQogICAgICAgICAgICBwcm9qZWN0Lm9uY2xpY2sgPSAoKSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5sb2FkUHJvamVjdCh4Lm5hbWUpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgYXZhaWxQcm9qZWN0cy5hcHBlbmRDaGlsZChwcm9qZWN0KTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGFzeW5jIGxvYWRJbnRvUHJvamVjdChwYXRoKSB7DQogICAgICAgIHZhciBlbGVtZW50cyA9IGF3YWl0IFN5c3RlbUZpbGVTeXN0ZW0uZ2V0RmlsZUpzb24ocGF0aCk7DQogICAgICAgIHRoaXMucHJvamVjdEVkaXRvci5sb2FkUHJvamVjdChlbGVtZW50cyk7DQogICAgfQ0KfQ0KbmV3IGV4aXRNZV9ndWkoKTs=", "html.html": "PGRpdiBlbGVtZW50PSJwcm9qZWN0Q2hvb3NlIj4NCiAgICA8aDE+Q2hvb3NlIGEgcHJvamVjdCB0byBlZGl0PC9oMT4NCiAgICA8ZGl2IGVsZW1lbnQ9ImF2YWlsUHJvamVjdHMiPg0KDQogICAgPC9kaXY+DQogICAgPGhyPg0KICAgIDxidXR0b24gZWxlbWVudD0ibmV3UHJvamVjdCI+TmV3IFByb2plY3Q8L2J1dHRvbj4NCjwvZGl2Pg0KPGRpdiBlbGVtZW50PSJwcm9qZWN0RWRpdCI+DQogICAgPGRpdiBlbGVtZW50PSJyaWJib25Db250cm9sbEJhciI+DQogICAgICAgIDxkaXYgZWxlbWVudD0idG9wQmFyIj4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxkaXYgZWxlbWVudD0idG9vbFNlbGVjdCI+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KDQogICAgPGRpdiBlbGVtZW50PSJlZGl0b3IiPg0KICAgICAgICA8ZGl2IGVsZW1lbnQ9InBhZ2VTZWxlY3QiPg0KICAgICAgICAgICAgPGRpdiBlbGVtZW50PSJzbWFsbFBhZ2UiPg0KICAgICAgICAgICAgICAgIDxjYW52YXMgZWxlbWVudD0icGFnZVJlbmRlciI+PC9jYW52YXM+DQogICAgICAgICAgICAgICAgPHA+UGFnZSAxPC9wPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8ZGl2IGVsZW1lbnQ9InByb2plY3RDb250ZW50V3JhcGVyIj4NCiAgICAgICAgICAgIDxkaXYgZWxlbWVudD0icHJvamVjdENvbnRlbnQiIHN0eWxlPSJ3aWR0aDogNTAwcHg7IGhlaWdodDogNTAwcHg7Ij4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBlbGVtZW50PSJjb250ZW50Q2hhbmdlciIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICA8dGV4dGFyZWEgc3R5bGU9ImJhY2tncm91bmQ6IHRyYW5zcGFyZW50O3dpZHRoOiAxMDAlO2JvcmRlcjogMDtoZWlnaHQ6IDEwMCU7ZGlzcGxheTogbm9uZTtwYWRkaW5nOiAwO3Jlc2l6ZTogbm9uZTsiDQogICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ9ImNvbnRlbnRDaGFuZ2VyQ2hhbmdlVGV4dCI+VWZmPC90ZXh0YXJlYT4NCiAgICAgICAgICAgICAgICA8ZGl2IGVsZW1lbnQ9ImNvbnRlbnRDaGFuZ2VyQm9yZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdj48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdj48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdj48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdj48L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCjwvZGl2Pg==", "install.js": "YXN5bmMgZnVuY3Rpb24gcnVuKCkgew0KICAgIGF3YWl0IFN5c3RlbS5vcHRpb25zLmFkZFZhbHVlKCJwcm9ncmFtcyIsICJleGl0TWUiLCB7ICJwYXRoIjogImMvcHJvZ3JhbXMvZXhpdE1lL21haW4uanMiLCAibmFtZSI6ICJFeGl0IEdhbWUgVG9vbGtpdCIsICJydW4iOiAiYy9wcm9ncmFtcy9leGl0TWUvcnVuLmpzIiB9LCB0cnVlKTsNCiAgICBTeXN0ZW1IdG1sLnVwZGF0ZVN0YXJ0bWVudSgpDQoNCiAgICAvL2Rlc2t0b3Agc2hvcnRjdXQNCiAgICBpZiAoIWF3YWl0IFN5c3RlbUh0bWwuZGVza3RvcC5leGlzdHNMaW5rKCJjL3Byb2dyYW1zL2V4aXRNZS9ydW4uanMiKSl7DQogICAgICAgIGF3YWl0IFN5c3RlbUh0bWwuZGVza3RvcC5hZGRMaW5rKCJjL3Byb2dyYW1zL2V4aXRNZS9ydW4uanMiLCAiRXhpdCBHYW1lIFRvb2xraXQiLCAiYy9wcm9ncmFtcy9leGl0TWUvbG9nby53ZWJwIik7DQogICAgfQ0KICAgIHJldHVybiB0cnVlOw0KfQ0KcnVuKCk7", "installLocation.dat": "Yy9wcm9ncmFtcy9leGl0TWU=", "main.js": "Y2xhc3MgcHJvZ3JhbSBleHRlbmRzIFN5c3RlbS5wcm9ncmFtLmRlZmF1bHQgew0KICAgIGFzeW5jIGluaXQoKSB7DQogICAgICAgIC8qKg0KICAgICAgICAgKiBAdHlwZSB7SHRtbFdpbmRvd30NCiAgICAgICAgICovDQogICAgICAgIHRoaXMud2luZG93ID0gYXdhaXQgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLmNyZWF0ZVdpbmRvdygiRXhpdCBHYW1lIFRvb2xraXQiLA0KICAgICAgICAgICAgLy9vbnJlYWR5Og0KICAgICAgICAgICAgYXN5bmMgKCkgPT4gew0KICAgICAgICAgICAgICAgIC8vc2V0IGh0bWwNCiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLndpbmRvdy5zZXRDb250ZW50KCI8c3R5bGU+IiArIChhd2FpdCBTeXN0ZW1GaWxlU3lzdGVtLmdldEZpbGVTdHJpbmcodGhpcy5QQVRILmZvbGRlcigpICsgIi9zdHlsZS5jc3MiKSkucmVwbGFjZUFsbCgie3t3aW5kb3dJZH19IiwgdGhpcy53aW5kb3cuZ2V0SWQoKSkgKyAiPC9zdHlsZT4iICsgYXdhaXQgU3lzdGVtRmlsZVN5c3RlbS5nZXRGaWxlU3RyaW5nKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvaHRtbC5odG1sIikpOw0KICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMud2luZG93LnNpemUuc2V0U2l6ZSgzMjAsIDQwMCkNCiAgICAgICAgICAgICAgICB0aGlzLndpbmRvdy5zaXplLnVzZXJDYW5SZXNpemUodHJ1ZSkNCg0KICAgICAgICAgICAgICAgIC8qKg0KICAgICAgICAgICAgICAgICAqIEB0eXBlIHtleGl0TWVfZ3VpfQ0KICAgICAgICAgICAgICAgICAqLw0KICAgICAgICAgICAgICAgIHRoaXMuZ3VpID0gYXdhaXQgU3lzdGVtLnByb2dyYW0ucnVuUHJvZ3JhbSh0aGlzLlBBVEguZm9sZGVyKCkgKyAiL2d1aS5qcyIsIHRoaXMud2luZG93KTsNCiAgICAgICAgICAgICAgICB0aGlzLmdldFByb2plY3RMaXN0KCk7DQoNCiAgICAgICAgICAgICAgICB0aGlzLmd1aS5sb2FkUHJvamVjdCA9IHRoaXMubG9hZFByb2plY3QuYmluZCh0aGlzKTsNCiAgICAgICAgICAgICAgICB0aGlzLmd1aS5nZXRQYXRoID0gdGhpcy5nZXRQYXRoLmJpbmQodGhpcyk7DQoNCiAgICAgICAgICAgICAgICAvL3NldCBldmVudHMNCiAgICAgICAgICAgICAgICB0aGlzLndpbmRvdy5hZGRIdG1sRXZlbnRMaXN0ZW5lcigiY2xpY2siLCAibmV3UHJvamVjdCIsIGFzeW5jICgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgdmFyIG5hbWUgPSBhd2FpdCBTeXN0ZW1IdG1sLldpbmRvd0hhbmRsZXIucHJlc2V0cy5jcmVhdGVTdHJpbmdTZWxlY3QoIk5ldyBQcm9qZWN0IiwgIkVudGVyIGEgbmFtZSBmb3IgdGhlIG5ldyBwcm9qZWN0Iik7DQogICAgICAgICAgICAgICAgICAgIGlmIChuYW1lID09IG51bGwpIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUgPT0gIiIpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIFN5c3RlbUh0bWwuV2luZG93SGFuZGxlci5wcmVzZXRzLmNyZWF0ZUluZm9ybWF0aW9uKCJFcnJvciIsICJQcm9qZWN0IG5hbWUgY2FuJ3QgYmUgZW1wdHkiKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAobmFtZS5pbmNsdWRlcygiLyIpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBTeXN0ZW1IdG1sLldpbmRvd0hhbmRsZXIucHJlc2V0cy5jcmVhdGVJbmZvcm1hdGlvbigiRXJyb3IiLCAiUHJvamVjdCBuYW1lIGNhbid0IGNvbnRhaW4gJy8nIik7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUuaW5jbHVkZXMoIlxcIikpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIFN5c3RlbUh0bWwuV2luZG93SGFuZGxlci5wcmVzZXRzLmNyZWF0ZUluZm9ybWF0aW9uKCJFcnJvciIsICJQcm9qZWN0IG5hbWUgY2FuJ3QgY29udGFpbiAnXFwnIik7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUuaW5jbHVkZXMoIjoiKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLnByZXNldHMuY3JlYXRlSW5mb3JtYXRpb24oIkVycm9yIiwgIlByb2plY3QgbmFtZSBjYW4ndCBjb250YWluICc6JyIpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGlmIChuYW1lLmluY2x1ZGVzKCIqIikpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIFN5c3RlbUh0bWwuV2luZG93SGFuZGxlci5wcmVzZXRzLmNyZWF0ZUluZm9ybWF0aW9uKCJFcnJvciIsICJQcm9qZWN0IG5hbWUgY2FuJ3QgY29udGFpbiAnKiciKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAobmFtZS5pbmNsdWRlcygiPyIpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBTeXN0ZW1IdG1sLldpbmRvd0hhbmRsZXIucHJlc2V0cy5jcmVhdGVJbmZvcm1hdGlvbigiRXJyb3IiLCAiUHJvamVjdCBuYW1lIGNhbid0IGNvbnRhaW4gJz8nIik7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUuaW5jbHVkZXMoIlwiIikpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIFN5c3RlbUh0bWwuV2luZG93SGFuZGxlci5wcmVzZXRzLmNyZWF0ZUluZm9ybWF0aW9uKCJFcnJvciIsICJQcm9qZWN0IG5hbWUgY2FuJ3QgY29udGFpbiAnXCInIik7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUuaW5jbHVkZXMoIjwiKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLnByZXNldHMuY3JlYXRlSW5mb3JtYXRpb24oIkVycm9yIiwgIlByb2plY3QgbmFtZSBjYW4ndCBjb250YWluICc8JyIpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGlmIChuYW1lLmluY2x1ZGVzKCI+IikpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIFN5c3RlbUh0bWwuV2luZG93SGFuZGxlci5wcmVzZXRzLmNyZWF0ZUluZm9ybWF0aW9uKCJFcnJvciIsICJQcm9qZWN0IG5hbWUgY2FuJ3QgY29udGFpbiAnPiciKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAobmFtZS5pbmNsdWRlcygifCIpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBTeXN0ZW1IdG1sLldpbmRvd0hhbmRsZXIucHJlc2V0cy5jcmVhdGVJbmZvcm1hdGlvbigiRXJyb3IiLCAiUHJvamVjdCBuYW1lIGNhbid0IGNvbnRhaW4gJ3wnIik7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUuaW5jbHVkZXMoIi4iKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLnByZXNldHMuY3JlYXRlSW5mb3JtYXRpb24oIkVycm9yIiwgIlByb2plY3QgbmFtZSBjYW4ndCBjb250YWluICcuJyIpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGlmIChuYW1lLmluY2x1ZGVzKCIgIikpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIFN5c3RlbUh0bWwuV2luZG93SGFuZGxlci5wcmVzZXRzLmNyZWF0ZUluZm9ybWF0aW9uKCJFcnJvciIsICJQcm9qZWN0IG5hbWUgY2FuJ3QgY29udGFpbiAnICciKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB2YXIgcHJvamVjdHMgPSBhd2FpdCBTeXN0ZW1GaWxlU3lzdGVtLmdldEZpbGVKc29uKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvcHJvamVjdHMuanNvbiIpOw0KICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb2plY3RzLmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJvamVjdHNbaV0ubmFtZSA9PSBuYW1lKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgU3lzdGVtSHRtbC5XaW5kb3dIYW5kbGVyLnByZXNldHMuY3JlYXRlSW5mb3JtYXRpb24oIkVycm9yIiwgIlByb2plY3QgbmFtZSBhbHJlYWR5IGV4aXN0cyIpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIHByb2plY3RzLnB1c2goew0KICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogbmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGg6IHRoaXMuUEFUSC5mb2xkZXIoKSArICIvcHJvamVjdHMvIiArIG5hbWUNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIGF3YWl0IFN5c3RlbUZpbGVTeXN0ZW0uc2V0RmlsZVN0cmluZyh0aGlzLlBBVEguZm9sZGVyKCkgKyAiL3Byb2plY3RzLmpzb24iLCBKU09OLnN0cmluZ2lmeShwcm9qZWN0cykpOw0KICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmdldFByb2plY3RMaXN0KCk7DQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB0aGlzLndpbmRvdy5jbG9zZSA9ICgpID0+IHsNCiAgICAgICAgICAgIHRoaXMuc3RvcCgpDQogICAgICAgICAgICByZXR1cm4gdHJ1ZQ0KICAgICAgICB9DQogICAgfQ0KICAgIGFzeW5jIGdldFByb2plY3RMaXN0KCkgew0KICAgICAgICB0aGlzLmd1aS5zaG93KCJwcm9qZWN0Q2hvb3NlIikNCiAgICAgICAgaWYgKCFhd2FpdCBTeXN0ZW1GaWxlU3lzdGVtLmZpbGVFeGlzdHModGhpcy5QQVRILmZvbGRlcigpICsgIi9wcm9qZWN0cy5qc29uIikpIHsNCiAgICAgICAgICAgIGF3YWl0IFN5c3RlbUZpbGVTeXN0ZW0uc2V0RmlsZVN0cmluZyh0aGlzLlBBVEguZm9sZGVyKCkgKyAiL3Byb2plY3RzLmpzb24iLCAiW10iKTsNCiAgICAgICAgfQ0KDQogICAgICAgIHZhciBwcm9qZWN0cyA9IGF3YWl0IFN5c3RlbUZpbGVTeXN0ZW0uZ2V0RmlsZUpzb24odGhpcy5QQVRILmZvbGRlcigpICsgIi9wcm9qZWN0cy5qc29uIik7DQoNCiAgICAgICAgdGhpcy5wcm9qZWN0cyA9IHt9Ow0KICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb2plY3RzLmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgICB0aGlzLnByb2plY3RzW3Byb2plY3RzW2ldLm5hbWVdID0gcHJvamVjdHNbaV07DQogICAgICAgIH0NCg0KICAgICAgICBhd2FpdCB0aGlzLmd1aS5zZXRQcm9qZWN0cyhwcm9qZWN0cyk7DQogICAgfQ0KDQogICAgYXN5bmMgbG9hZFByb2plY3QobmFtZSkgew0KICAgICAgICB0aGlzLmd1aS5zaG93KCJwcm9qZWN0RWRpdCIpOw0KICAgICAgICB0aGlzLmd1aS5yaWJib24ubG9hZFJpYmJvbnMoKTsNCiAgICAgICAgDQogICAgICAgIHRoaXMubmFtZSA9IG5hbWU7DQogICAgICAgIHRoaXMucGF0aCA9IHRoaXMucHJvamVjdHNbbmFtZV0ucGF0aDsNCg0KICAgICAgICB0aGlzLmd1aS5sb2FkSW50b1Byb2plY3QodGhpcy5wYXRoKTsNCiAgICB9DQoNCiAgICBnZXRQYXRoKCkgew0KICAgICAgICByZXR1cm4gdGhpcy5wYXRoOw0KICAgIH0NCn0NCm5ldyBwcm9ncmFtKCk7", "projects": {"test.json": "Ww0KICAgIHsNCiAgICAgICAgInR5cGUiOiAidGV4dCIsDQogICAgICAgICJkYXRhIjogIlRoaXMgaXMgYSB0ZXh0IGJsb2NrIiwNCiAgICAgICAgInBvcyI6IHsNCiAgICAgICAgICAgICJ4IjogNTAsDQogICAgICAgICAgICAieSI6IDUwDQogICAgICAgIH0sDQogICAgICAgICJzaXplIjogew0KICAgICAgICAgICAgIndpZHRoIjogMTAwLA0KICAgICAgICAgICAgImhlaWdodCI6IDEwMA0KICAgICAgICB9LA0KICAgICAgICAic3R5bGluZyI6IHsNCiAgICAgICAgICAgICJmb250U2l6ZSI6IDEyLA0KICAgICAgICAgICAgImZvbnRGYW1pbHkiOiAiQXJpYWwiLA0KICAgICAgICAgICAgImNvbG9yIjogIiNmZmZmZmZmZiIsDQogICAgICAgICAgICAiYmFja2dyb3VuZENvbG9yIjogIiMwMDAwZmZmZiINCiAgICAgICAgfQ0KICAgIH0sDQogICAgew0KICAgICAgICAidHlwZSI6ICJ0ZXh0IiwNCiAgICAgICAgImRhdGEiOiAiVVdVIiwNCiAgICAgICAgInBvcyI6IHsNCiAgICAgICAgICAgICJ4IjogNTAsDQogICAgICAgICAgICAieSI6IDE1MA0KICAgICAgICB9LA0KICAgICAgICAic2l6ZSI6IHsNCiAgICAgICAgICAgICJ3aWR0aCI6IDEwMCwNCiAgICAgICAgICAgICJoZWlnaHQiOiA0MA0KICAgICAgICB9LA0KICAgICAgICAic3R5bGluZyI6IHsNCiAgICAgICAgICAgICJmb250U2l6ZSI6IDQwLA0KICAgICAgICAgICAgImZvbnRGYW1pbHkiOiAiQXJpYWwiLA0KICAgICAgICAgICAgImNvbG9yIjogIiMwMDAwMDBmZiIsDQogICAgICAgICAgICAiYmFja2dyb3VuZENvbG9yIjogIiMwMDAwMDAwMCINCiAgICAgICAgfQ0KICAgIH0NCl0="}, "projects.json": "Ww0KICAgIHsNCiAgICAgICAgIm5hbWUiOiAidGVzdCIsDQogICAgICAgICJwYXRoIjogImMvcHJvZ3JhbXMvZXhpdE1lL3Byb2plY3RzL3Rlc3QuanNvbiINCiAgICB9DQpd", "run.js": "U3lzdGVtLnByb2dyYW0ucnVuUHJvZ3JhbShQQVRILmZvbGRlcigpICsgIi9tYWluLmpzIik=", "style.css": "LypleGl0TWUgc3R5bGVzLiBVc2UgdGhpcyBmb3IgYWxsIGV4aXRNZSBzdHlsZXMNCiAgICAgICAgW3dpbmRvd2lkPSJ7e3dpbmRvd0lkfX0iXVt3aW5kb3dlbGVtZW50PSIiXXsNCiAgICAgICAgfQ0KICAgICovDQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0icmliYm9uQ29udHJvbGxCYXIiXSB7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOw0KICAgIGhlaWdodDogMTAwJTsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KW3dpbmRvd2lkPSJ7e3dpbmRvd0lkfX0iXVt3aW5kb3dlbGVtZW50PSJ0b3BCYXIiXSB7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBmbGV4LWRpcmVjdGlvbjogcm93Ow0KICAgIGhlaWdodDogMzBweDsNCiAgICB3aWR0aDogMTAwJTsNCg0KICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYmZiZmJmOw0KfQ0KDQpbd2luZG93aWQ9Int7d2luZG93SWR9fSJdW3dpbmRvd2VsZW1lbnQ9InRvb2xTZWxlY3QiXSB7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBmbGV4LWRpcmVjdGlvbjogcm93Ow0KICAgIGhlaWdodDogMTAwcHg7DQogICAgd2lkdGg6IDEwMCU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjsNCiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2JmYmZiZjsNCiAgICBmbGV4LXdyYXA6IHdyYXA7DQogICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0icmliYm9uVG9wIl0gew0KICAgIGhlaWdodDogMTAwJTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZlNmU2Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNiZmJmYmY7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0icmliYm9uVG9wIl06aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNlYmViZWI7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0icmliYm9uQm90dG9tIl0gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0icmliYm9uQm90dG9tIl06aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNlYmViZWI7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0icmliYm9uVG9wIl1bc2VsZWN0ZWRdIHsNCiAgICBib3JkZXItYm90dG9tOiBub25lOw0KfQ0KDQpbd2luZG93aWQ9Int7d2luZG93SWR9fSJdW3dpbmRvd2VsZW1lbnQ9InByb2plY3RDb250ZW50Il0gew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZjAwMDA7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0icHJvamVjdENvbnRlbnRXcmFwZXIiXSB7DQogICAgcGFkZGluZy1sZWZ0OiAxMHB4Ow0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCn0NCg0KW3dpbmRvd2lkPSJ7e3dpbmRvd0lkfX0iXVt3aW5kb3dlbGVtZW50PSJwYWdlU2VsZWN0Il0gew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAgZmxleC1kaXJlY3Rpb246IHJvdzsNCiAgICB3aWR0aDogMTAycHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjYmZiZmJmOw0KfQ0KDQpbd2luZG93aWQ9Int7d2luZG93SWR9fSJdW3dpbmRvd2VsZW1lbnQ9InBhZ2VSZW5kZXIiXSB7DQogICAgd2lkdGg6IDEwMHB4Ow0KICAgIGhlaWdodDogMTAwcHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0ic21hbGxQYWdlIl0gew0KICAgIHdpZHRoOiAxMDBweDsNCiAgICBoZWlnaHQ6IGZpdC1jb250ZW50Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNiZmJmYmY7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0iZWRpdG9yIl0gew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAgZmxleC1kaXJlY3Rpb246IHJvdzsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0iY29udGVudENoYW5nZXIiXSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDAwOw0KICAgIHotaW5kZXg6IDk5OTk7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0iY29udGVudENoYW5nZXJfYm9tbWwiXSB7DQogICAgYm9yZGVyOiAzcHggcmdiKDE2MCwgMTYwLCAxNjApIHNvbGlkOw0KICAgIGJvcmRlci1yYWRpdXM6IDUwJTsNCiAgICB3aWR0aDogMTBweDsNCiAgICBoZWlnaHQ6IDEwcHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIHotaW5kZXg6IDk5OTk7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0iY29udGVudENoYW5nZXJCb3JkZXIiXSB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgaGVpZ2h0OiAxMDAlOw0KICAgIGN1cnNvcjogbW92ZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsNCiAgICBwb2ludGVyLWV2ZW50czogbm9uZTsNCiAgICBib3JkZXI6IDRweCBzb2xpZCAjMDAwMDAwNjk7DQogICAgdG9wOiAtNHB4Ow0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICBsZWZ0OiAtNHB4Ow0KfQ0KDQpbd2luZG93aWQ9Int7d2luZG93SWR9fSJdW3dpbmRvd2VsZW1lbnQ9ImNvbnRlbnRDaGFuZ2VyQm9yZGVyIl0+ZGl2IHsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDA0Ow0KICAgIHdpZHRoOiAzMHB4Ow0KICAgIGhlaWdodDogMzBweDsNCiAgICBwb2ludGVyLWV2ZW50czogYXV0bzsNCn0NCg0KDQpbd2luZG93aWQ9Int7d2luZG93SWR9fSJdW3dpbmRvd2VsZW1lbnQ9ImNvbnRlbnRDaGFuZ2VyQm9yZGVyIl0+ZGl2Om50aC1jaGlsZCgxKSB7DQogICAgdG9wOiAtMjBweDsNCiAgICBsZWZ0OiAwcHg7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNClt3aW5kb3dpZD0ie3t3aW5kb3dJZH19Il1bd2luZG93ZWxlbWVudD0iY29udGVudENoYW5nZXJCb3JkZXIiXT5kaXY6bnRoLWNoaWxkKDIpIHsNCiAgICBib3R0b206IC0yMHB4Ow0KICAgIGxlZnQ6IDBweDsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KW3dpbmRvd2lkPSJ7e3dpbmRvd0lkfX0iXVt3aW5kb3dlbGVtZW50PSJjb250ZW50Q2hhbmdlckJvcmRlciJdPmRpdjpudGgtY2hpbGQoMykgew0KICAgIGxlZnQ6IC0yMHB4Ow0KICAgIHRvcDogMHB4Ow0KICAgIGhlaWdodDogMTAwJTsNCn0NCg0KW3dpbmRvd2lkPSJ7e3dpbmRvd0lkfX0iXVt3aW5kb3dlbGVtZW50PSJjb250ZW50Q2hhbmdlckJvcmRlciJdPmRpdjpudGgtY2hpbGQoNCkgew0KICAgIHRvcDogMHB4Ow0KICAgIHJpZ2h0OiAtMjBweDsNCiAgICBoZWlnaHQ6IDEwMCU7DQp9"}
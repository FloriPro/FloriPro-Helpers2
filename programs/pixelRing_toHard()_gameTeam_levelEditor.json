{"gui": {"bottomControll": {"core.js": "bmV3IChjbGFzcyB7DQogICAgZ2V0RWxlbWVudHMoZ3VpKSB7DQogICAgICAgIHJldHVybiBbDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgdHlwZTogInNsaWRlciIsDQogICAgICAgICAgICAgICAgZ2V0OiB0aGlzLmdldFpvb20uYmluZCh0aGlzKSwNCiAgICAgICAgICAgICAgICBjaGFuZ2U6IHRoaXMuc2V0Wm9vbS5iaW5kKHRoaXMpLA0KICAgICAgICAgICAgICAgIG5hbWU6ICJab29tIiwNCiAgICAgICAgICAgICAgICBtaW46IDAuMSwNCiAgICAgICAgICAgICAgICBtYXg6IDMsDQogICAgICAgICAgICB9DQogICAgICAgIF0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIGdldFpvb20oZWRpdG9yKSB7DQogICAgICAgIHJldHVybiBlZGl0b3Iuem9vbTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIHNldFpvb20oZWRpdG9yLCB2YWx1ZSkgew0KICAgICAgICBlZGl0b3Iuem9vbSA9IHZhbHVlOw0KICAgICAgICBlZGl0b3IuYXBwbHlab29tKCk7DQogICAgfQ0KfSkoKTs="}, "bottomControll.js": "Y2xhc3MgZXhpdE1lX2d1aV9ib3R0b21Db250cm9sbCBleHRlbmRzIFN5c3RlbS5wcm9ncmFtLmRlZmF1bHQgew0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7W0h0bWxXaW5kb3csIGV4aXRNZV9ndWldfSBwYXJhbTAgDQogICAgICovDQogICAgYXN5bmMgaW5pdChbd2luZG93LCBndWldKSB7DQogICAgICAgIHRoaXMud2luZG93ID0gd2luZG93Ow0KICAgICAgICB0aGlzLmd1aSA9IGd1aTsNCiAgICAgICAgdGhpcy5wcm9ncmFtcyA9IFtdOw0KDQogICAgICAgIHRoaXMuYmFyID0gYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQoImJvdHRvbUNvbnRyb2xsIik7DQogICAgICAgIHRoaXMubG9hZEJhcigpOw0KDQogICAgICAgIHRoaXMuc2V0SW50ZXJ2YWwodGhpcy51cGRhdGVJbmZvcy5iaW5kKHRoaXMpLCA1MDApOw0KICAgIH0NCg0KICAgIGFzeW5jIGxvYWRCYXIoKSB7DQogICAgICAgIHRoaXMuYmFyLmlubmVySFRNTCA9ICIiOw0KDQogICAgICAgIHZhciBpID0gMDsNCiAgICAgICAgdmFyIHNjcmlwdHMgPSBhd2FpdCBTeXN0ZW1GaWxlU3lzdGVtLmdldEZpbGVzKHRoaXMuUEFUSC5mb2xkZXIoKSArICIvYm90dG9tQ29udHJvbGwiKTsNCiAgICAgICAgZm9yICh2YXIgeCBvZiBzY3JpcHRzKSB7DQogICAgICAgICAgICB2YXIgcHJvZyA9IGF3YWl0IFN5c3RlbS5ydW4odGhpcy5QQVRILmZvbGRlcigpICsgIi9ib3R0b21Db250cm9sbC8iICsgeCk7DQogICAgICAgICAgICB0aGlzLnByb2dyYW1zLnB1c2gocHJvZyk7DQogICAgICAgICAgICB2YXIgZWxlbWVudHMgPSBhd2FpdCBwcm9nLmdldEVsZW1lbnRzKHRoaXMuZ3VpKTsNCg0KICAgICAgICAgICAgZm9yICh2YXIgZWxlbWVudCBvZiBlbGVtZW50cykgew0KICAgICAgICAgICAgICAgIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsNCiAgICAgICAgICAgICAgICBkaXYuY2xhc3NOYW1lID0gImJvdHRvbUNvbnRyb2xsRWxlbWVudCI7DQoNCiAgICAgICAgICAgICAgICB2YXIgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJsYWJlbCIpOw0KICAgICAgICAgICAgICAgIGxhYmVsLmlubmVySFRNTCA9IGVsZW1lbnQubmFtZTsNCiAgICAgICAgICAgICAgICBkaXYuYXBwZW5kQ2hpbGQobGFiZWwpOw0KDQogICAgICAgICAgICAgICAgdmFyIGlucHV0Ow0KICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LnR5cGUgPT0gInNsaWRlciIpIHsNCiAgICAgICAgICAgICAgICAgICAgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbnB1dCIpOw0KICAgICAgICAgICAgICAgICAgICBpbnB1dC50eXBlID0gInJhbmdlIjsNCiAgICAgICAgICAgICAgICAgICAgaW5wdXQubWluID0gZWxlbWVudC5taW47DQogICAgICAgICAgICAgICAgICAgIGlucHV0Lm1heCA9IGVsZW1lbnQubWF4Ow0KICAgICAgICAgICAgICAgICAgICBpbnB1dC5zdGVwID0gZWxlbWVudC5zdGVwIHx8IDAuMDE7DQogICAgICAgICAgICAgICAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgiYm90dG9tY29udHJvbGxlciIsIGkpDQogICAgICAgICAgICAgICAgICAgIGlucHV0LnZhbHVlID0gYXdhaXQgZWxlbWVudC5nZXQodGhpcy5ndWkpOw0KICAgICAgICAgICAgICAgICAgICBpbnB1dC5vbmlucHV0ID0gYXN5bmMgKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgZWxlbWVudC5jaGFuZ2UodGhpcy5ndWksIGlucHV0LnZhbHVlKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGRpdi5hcHBlbmRDaGlsZChpbnB1dCk7DQogICAgICAgICAgICAgICAgdGhpcy5iYXIuYXBwZW5kQ2hpbGQoZGl2KTsNCiAgICAgICAgICAgICAgICBpKys7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBhc3luYyB1cGRhdGVJbmZvcygpIHsNCiAgICAgICAgdmFyIGkgPSAwOw0KICAgICAgICBmb3IgKHZhciB4IG9mIHRoaXMucHJvZ3JhbXMpIHsNCiAgICAgICAgICAgIHZhciBlbGVtZW50cyA9IGF3YWl0IHguZ2V0RWxlbWVudHModGhpcy5ndWkpOw0KICAgICAgICAgICAgZm9yICh2YXIgZWxlbWVudCBvZiBlbGVtZW50cykgew0KICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LnR5cGUgPT0gInNsaWRlciIpIHsNCiAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gdGhpcy5iYXIucXVlcnlTZWxlY3RvcigiW2JvdHRvbWNvbnRyb2xsZXI9JyIgKyBpICsgIiddIik7DQogICAgICAgICAgICAgICAgICAgIGlucHV0LnZhbHVlID0gYXdhaXQgZWxlbWVudC5nZXQodGhpcy5ndWkpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpKys7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQp9DQpuZXcgZXhpdE1lX2d1aV9ib3R0b21Db250cm9sbCgpOw==", "elementFunctions": {"core.js": "KGNsYXNzIHsNCiAgICBjb25zdHJ1Y3Rvcih3aW5kb3cpIHsNCiAgICAgICAgdGhpcy53aW5kb3cgPSB3aW5kb3cNCiAgICB9DQogICAgY29udGV4dE1lbnVBbGwoKSB7DQogICAgICAgIHJldHVybiBbDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgIm5hbWUiOiAicmVtb3ZlIiwNCiAgICAgICAgICAgICAgICAiYWN0aW9uIjogKGVsZW1lbnRzLCBub3dFZGl0aW5nLCBjb250ZW50LCBlZGl0b3IpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgZWRpdG9yLm5vd0VkaXRpbmcgPSBudWxsOw0KICAgICAgICAgICAgICAgICAgICBlZGl0b3IuaGlkZUNvbnRlbnRDaGFuZ2VyKCk7DQogICAgICAgICAgICAgICAgICAgIGVkaXRvci51cGRhdGVTZWxlY3QoKTsNCg0KICAgICAgICAgICAgICAgICAgICBkZWxldGUgZWxlbWVudHNbbm93RWRpdGluZ107DQogICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBlZGl0b3IuYWxpZ25MaW5lc1tub3dFZGl0aW5nXTsNCiAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmdlbkFsbEFsaWduTGluZXMoKTsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudC5xdWVyeVNlbGVjdG9yKGBbdXVpZD0iJHtub3dFZGl0aW5nfSJdYCkucmVtb3ZlKCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAibmFtZSI6ICJsYXllciIsDQogICAgICAgICAgICAgICAgImFjdGlvbiI6IChlbGVtZW50cywgbm93RWRpdGluZywgY29udGVudCwgZWRpdG9yKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIFN5c3RlbUh0bWwuQ29udGV4dE1lbnUuc3BlY2lmaWMoew0KICAgICAgICAgICAgICAgICAgICAgICAgIm1vdmUgdG8gdG9wIjogWyh4KSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLyoqDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICogQHR5cGUge1t7W2lkOnN0cmluZ106ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX2VsZW1lbnR9LCBzdHJpbmcsIEhUTUxFbGVtZW50LCBleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3JdfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqLw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBbZWxlbWVudHMsIG5vd0VkaXRpbmcsIGNvbnRlbnQsIGVkaXRvcl0gPSBbeFswXSwgeFsxXSwgeFsyXSwgeFszXV07DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZWRpdG9yKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZWxlbWVudHMgPSBlZGl0b3IudXRpbC5zZXRMYXllcihlbGVtZW50cywgbm93RWRpdGluZywgZWRpdG9yLnV0aWwuZ2V0TGF5ZXJNYXgoZWxlbWVudHMpICsgMSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLnVwZGF0ZUxheWVycygpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSwgW2VsZW1lbnRzLCBub3dFZGl0aW5nLCBjb250ZW50LCBlZGl0b3JdXSwNCiAgICAgICAgICAgICAgICAgICAgICAgICJtb3ZlIHRvIGJvdHRvbSI6IFsoeCkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qKg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqIEB0eXBlIHtbe1tpZDpzdHJpbmddOmV4aXRNZV9ndWlfcHJvamVjdEVkaXRvcl9lbGVtZW50fSwgc3RyaW5nLCBIVE1MRWxlbWVudCwgZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yXX0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi8NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgW2VsZW1lbnRzLCBub3dFZGl0aW5nLCBjb250ZW50LCBlZGl0b3JdID0gW3hbMF0sIHhbMV0sIHhbMl0sIHhbM11dOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5lbGVtZW50cyA9IGVkaXRvci51dGlsLnNldExheWVyKGVsZW1lbnRzLCBub3dFZGl0aW5nLCAwKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IudXBkYXRlTGF5ZXJzKCk7DQogICAgICAgICAgICAgICAgICAgICAgICB9LCBbZWxlbWVudHMsIG5vd0VkaXRpbmcsIGNvbnRlbnQsIGVkaXRvcl1dLA0KICAgICAgICAgICAgICAgICAgICAgICAgIm1vdmUgdXAiOiBbKHgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKioNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiBAdHlwZSB7W3tbaWQ6c3RyaW5nXTpleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3JfZWxlbWVudH0sIHN0cmluZywgSFRNTEVsZW1lbnQsIGV4aXRNZV9ndWlfcHJvamVjdEVkaXRvcl19DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICovDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIFtlbGVtZW50cywgbm93RWRpdGluZywgY29udGVudCwgZWRpdG9yXSA9IFt4WzBdLCB4WzFdLCB4WzJdLCB4WzNdXTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZWxlbWVudHMgPSBlZGl0b3IudXRpbC5zZXRMYXllcihlbGVtZW50cywgbm93RWRpdGluZywgZWxlbWVudHNbbm93RWRpdGluZ10ubGF5ZXIgKyAyKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IudXBkYXRlTGF5ZXJzKCk7DQogICAgICAgICAgICAgICAgICAgICAgICB9LCBbZWxlbWVudHMsIG5vd0VkaXRpbmcsIGNvbnRlbnQsIGVkaXRvcl1dLA0KICAgICAgICAgICAgICAgICAgICAgICAgIm1vdmUgZG93biI6IFsoeCkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qKg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqIEB0eXBlIHtbe1tpZDpzdHJpbmddOmV4aXRNZV9ndWlfcHJvamVjdEVkaXRvcl9lbGVtZW50fSwgc3RyaW5nLCBIVE1MRWxlbWVudCwgZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yXX0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi8NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgW2VsZW1lbnRzLCBub3dFZGl0aW5nLCBjb250ZW50LCBlZGl0b3JdID0gW3hbMF0sIHhbMV0sIHhbMl0sIHhbM11dOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50c1tub3dFZGl0aW5nXS5sYXllciA8IDApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCJsYXllciBpcyBhbGxyZWFkeSBsb3dlc3QgMCIpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5lbGVtZW50cyA9IGVkaXRvci51dGlsLnNldExheWVyKGVsZW1lbnRzLCBub3dFZGl0aW5nLCBlbGVtZW50c1tub3dFZGl0aW5nXS5sYXllciAtIDEpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci51cGRhdGVMYXllcnMoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sIFtlbGVtZW50cywgbm93RWRpdGluZywgY29udGVudCwgZWRpdG9yXV0sDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgXQ0KICAgIH0NCiAgICBnZXQoKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAiaGl0Ym94Ijogew0KICAgICAgICAgICAgICAgICJzZXQiOiB0aGlzLmJveFNldHRpbmdzLA0KICAgICAgICAgICAgICAgICJjcmVhdGUiOiAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIHZhciBlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7DQogICAgICAgICAgICAgICAgICAgIGUuc3R5bGUuYmFja2dyb3VuZENsaXAgPSAicGFkZGluZy1ib3giOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZTsNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICJlZGl0Q29udGVudCI6IGFzeW5jIChlbGVtZW50LCBub3dFZGl0aW5nLCBjb250ZW50KSA9PiB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICJzdG9wRWRpdCI6IGFzeW5jIChlbGVtZW50cywgbm93RWRpdGluZywgY29udGVudCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oInN0b3AgZWRpdCBzaG91bGQgbm90IGJlIGNhbGxlZCBvbiBib3ghIik7DQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAiY29udGV4dE1lbnUiOiBbXQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICJlbmVteVNwYXduIjogew0KICAgICAgICAgICAgICAgICJzZXQiOiB0aGlzLmVuZW15U3Bhd24sDQogICAgICAgICAgICAgICAgImNyZWF0ZSI6ICgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgdmFyIGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsNCiAgICAgICAgICAgICAgICAgICAgZS5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9ICJwYWRkaW5nLWJveCI7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBlOw0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgImVkaXRDb250ZW50IjogYXN5bmMgKGVsZW1lbnQsIG5vd0VkaXRpbmcsIGNvbnRlbnQpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgInN0b3BFZGl0IjogYXN5bmMgKGVsZW1lbnRzLCBub3dFZGl0aW5nLCBjb250ZW50KSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2Fybigic3RvcCBlZGl0IHNob3VsZCBub3QgYmUgY2FsbGVkIG9uIGJveCEiKTsNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICJjb250ZXh0TWVudSI6IFtdDQogICAgICAgICAgICB9LA0KICAgICAgICB9DQogICAgfQ0KDQoNCiAgICBib3hTZXR0aW5ncyhlbGVtZW50LCBkb21FTCkgew0KICAgICAgICBkb21FTC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBlbGVtZW50LnN0eWxpbmcuYmFja2dyb3VuZENvbG9yOw0KICAgICAgICBkb21FTC5zdHlsZS5ib3JkZXIgPSBlbGVtZW50LnN0eWxpbmcuYm9yZGVyICsgInB4IHNvbGlkICIgKyBlbGVtZW50LnN0eWxpbmcuYm9yZGVyQ29sb3I7DQogICAgICAgIGRvbUVMLnN0eWxlLm1hcmdpbiA9IChlbGVtZW50LnN0eWxpbmcuYm9yZGVyICogLTEpICsgInB4IjsNCiAgICAgICAgcmV0dXJuIFtdOw0KICAgIH0NCg0KICAgIC8vcm91bmQgY2lyY2xlIHdpdGggc3RhdGljIHNpemUgMTBweA0KICAgIGVuZW15U3Bhd24oZWxlbWVudCwgZG9tRUwpIHsNCiAgICAgICAgZG9tRUwuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gZWxlbWVudC5zdHlsaW5nLmJhY2tncm91bmRDb2xvcjsNCiAgICAgICAgZG9tRUwuc3R5bGUuYm9yZGVyID0gIiI7DQogICAgICAgIGRvbUVMLnN0eWxlLm1hcmdpbiA9ICIwIg0KICAgICAgICBkb21FTC5zdHlsZS53aWR0aCA9ICIxMHB4IjsNCiAgICAgICAgZG9tRUwuc3R5bGUuaGVpZ2h0ID0gIjEwcHgiOw0KICAgICAgICBkb21FTC5zdHlsZS5ib3JkZXJSYWRpdXMgPSAiNTAlIjsNCiAgICAgICAgcmV0dXJuIFtdOw0KICAgIH0NCg0KfSk7"}, "projectEditor.js": "", "ribbon": {"add.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiRWxlbWVudHMiOw0KICAgIH0NCiAgICBnZXRQb3MoKSB7DQogICAgICAgIHJldHVybiAzMDsNCiAgICB9DQogICAgZ2V0RnVuY3Rpb25zKCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgIkhpdGJveCI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuaGl0Ym94IH0sDQogICAgICAgICAgICAiRW5lbXkgU3Bhd24iOiB7ICJ0eXBlIjogImJ1dHRvbiIsICJjaGFuZ2UiOiB0aGlzLmVuZW15U3Bhd24gfSwNCiAgICAgICAgfQ0KICAgIH0NCiAgICAvKioNCiAgICAgKiANCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIGFzeW5jIGhpdGJveChlZGl0b3IpIHsNCiAgICAgICAgZWRpdG9yLmNyZWF0ZUVsZW1lbnQoew0KICAgICAgICAgICAgInR5cGUiOiAiaGl0Ym94IiwNCiAgICAgICAgICAgICJkYXRhIjogIldvcmxkIiwNCiAgICAgICAgICAgICJwb3MiOiB7DQogICAgICAgICAgICAgICAgeDogMTAsDQogICAgICAgICAgICAgICAgeTogMTANCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAic2l6ZSI6IHsNCiAgICAgICAgICAgICAgICAid2lkdGgiOiAxMDAsDQogICAgICAgICAgICAgICAgImhlaWdodCI6IDEwMA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICJzdHlsaW5nIjogew0KICAgICAgICAgICAgICAgICJiYWNrZ3JvdW5kQ29sb3IiOiAiIzAwZmYwMCIsDQogICAgICAgICAgICB9DQogICAgICAgIH0pOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yfSBlZGl0b3INCiAgICAgKi8NCiAgICBhc3luYyBlbmVteVNwYXduKGVkaXRvcikgew0KICAgICAgICBlZGl0b3IuY3JlYXRlRWxlbWVudCh7DQogICAgICAgICAgICAidHlwZSI6ICJlbmVteVNwYXduIiwNCiAgICAgICAgICAgICJkYXRhIjogew0KICAgICAgICAgICAgICAgICJzcGF3blRpbWVvdXQiOiAzLA0KICAgICAgICAgICAgICAgICJ0eXBlIjogIjAiDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgInBvcyI6IHsNCiAgICAgICAgICAgICAgICB4OiAxMCwNCiAgICAgICAgICAgICAgICB5OiAxMA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICJzaXplIjogew0KICAgICAgICAgICAgICAgICJ3aWR0aCI6IDEwLA0KICAgICAgICAgICAgICAgICJoZWlnaHQiOiAxMA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICJzdHlsaW5nIjogew0KICAgICAgICAgICAgICAgICJiYWNrZ3JvdW5kQ29sb3IiOiAiI2ZmMDAwMCINCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAibm9SZXNpemUiOiB0cnVlLA0KICAgICAgICB9KTsNCiAgICB9DQp9KSgpOw==", "background.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgICAgIHRoaXMuZWxlbWVudCA9IG51bGw7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiQmFja2dyb3VuZCI7DQogICAgfQ0KICAgIGdldFBvcygpIHsNCiAgICAgICAgcmV0dXJuIDM2Ow0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge3t0eXBlOnN0cmluZywgZGF0YTpzdHJpbmd8YW55LCBwb3M6e3g6bnVtYmVyLHk6bnVtYmVyfSwgc2l6ZTp7d2lkdGg6bnVtYmVyLGhlaWdodDpudW1iZXJ9LCBzdHlsaW5nOmFueX19IGVsZW1lbnQNCiAgICAgKi8NCiAgICBnZXRGdW5jdGlvbnMoZWxlbWVudCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgIkJhY2tncm91bmQgSW1hZ2UiOiB7ICJ0eXBlIjogImZpbGUiLCAiY2hhbmdlIjogdGhpcy5zZXRCYWNrZ3JvdW5kSW1hZ2UuYmluZCh0aGlzKSwgImdldCI6IHRoaXMuZ2V0QmFja2dyb3VuZEltYWdlLmJpbmQodGhpcykgfSwNCiAgICAgICAgfQ0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yDQogICAgICogQHBhcmFtIHtzdHJpbmd9IGZpbGVQYXRoDQogICAgICovDQogICAgYXN5bmMgc2V0QmFja2dyb3VuZEltYWdlKGVkaXRvciwgZmlsZVBhdGgpIHsNCiAgICAgICAgZWRpdG9yLmd1aS5wcm9qZWN0LnBhZ2VzW2VkaXRvci5ndWkucGFnZV0uYmFja2dyb3VuZC50eXBlID0gImltYWdlIg0KICAgICAgICBlZGl0b3IuZ3VpLnByb2plY3QucGFnZXNbZWRpdG9yLmd1aS5wYWdlXS5iYWNrZ3JvdW5kLmRhdGEgPSBTeXN0ZW1GaWxlU3lzdGVtLnRvSW1nKGF3YWl0IFN5c3RlbUZpbGVTeXN0ZW0uZ2V0RmlsZVN0cmluZyhmaWxlUGF0aCkpDQogICAgICAgIHRoaXMudXBkYXRlQmFja2dyb3VuZChlZGl0b3IpOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcmliYm9ufSByaWJib24NCiAgICAgKi8NCiAgICBnZXRCYWNrZ3JvdW5kSW1hZ2UocmliYm9uKSB7DQoNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIHVwZGF0ZUJhY2tncm91bmQoZWRpdG9yKSB7DQogICAgICAgIGlmIChlZGl0b3IuZ3VpLnByb2plY3QucGFnZXNbZWRpdG9yLmd1aS5wYWdlXS5iYWNrZ3JvdW5kLnR5cGUgPT0gImNvbG9yIikgew0KICAgICAgICAgICAgZWRpdG9yLmNvbnRlbnQuc3R5bGUuYmFja2dyb3VuZCA9IGVkaXRvci5ndWkucHJvamVjdC5wYWdlc1tlZGl0b3IuZ3VpLnBhZ2VdLmJhY2tncm91bmQuY29sb3I7DQogICAgICAgIH0gZWxzZSBpZiAoZWRpdG9yLmd1aS5wcm9qZWN0LnBhZ2VzW2VkaXRvci5ndWkucGFnZV0uYmFja2dyb3VuZC50eXBlID09ICJpbWFnZSIpIHsNCiAgICAgICAgICAgIGVkaXRvci5jb250ZW50LnN0eWxlLmJhY2tncm91bmQgPSAidXJsKCIgKyBlZGl0b3IuZ3VpLnByb2plY3QucGFnZXNbZWRpdG9yLmd1aS5wYWdlXS5iYWNrZ3JvdW5kLmRhdGEgKyAiKSI7DQogICAgICAgIH0NCiAgICB9DQp9KSgpOw==", "edit.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgICAgIHRoaXMuZWxlbWVudCA9IG51bGw7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiRWRpdCI7DQogICAgfQ0KICAgIGdldFBvcygpIHsNCiAgICAgICAgcmV0dXJuIDIwOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge3t0eXBlOnN0cmluZywgZGF0YTpzdHJpbmd8YW55LCBwb3M6e3g6bnVtYmVyLHk6bnVtYmVyfSwgc2l6ZTp7d2lkdGg6bnVtYmVyLGhlaWdodDpudW1iZXJ9LCBzdHlsaW5nOmFueX19IGVsZW1lbnQNCiAgICAgKi8NCiAgICBnZXRGdW5jdGlvbnMoZWxlbWVudCkgew0KICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50Ow0KDQogICAgICAgIGlmIChlbGVtZW50ID09IG51bGwpIHsNCiAgICAgICAgICAgIHJldHVybiB7fTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoZWxlbWVudC50eXBlID09ICJoaXRib3giKSB7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgICJfZGVzY3JpcHRvciI6ICJIaXRib3ggVHlwZTogV29ybGQsIEZhbGwsIE5leHRMZXZlbCwgR3JhY2UiLA0KICAgICAgICAgICAgICAgICJIaXRib3ggVHlwZSI6IHsNCiAgICAgICAgICAgICAgICAgICAgInR5cGUiOiAidGV4dCIsDQogICAgICAgICAgICAgICAgICAgICJjaGFuZ2UiOiB0aGlzLmhpdGJveFR5cGUuYmluZCh0aGlzKSwNCiAgICAgICAgICAgICAgICAgICAgImdldCI6IHRoaXMuZ2V0SGl0Ym94VHlwZS5iaW5kKHRoaXMpLA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgIl9zZXBhcmF0b3IiOiAiIiwNCiAgICAgICAgICAgICAgICAiX2Rlc2NyaXB0b3IyIjogIkV4YWN0IFBvc2l0aW9uIiwNCiAgICAgICAgICAgICAgICAiWCI6IHsNCiAgICAgICAgICAgICAgICAgICAgInR5cGUiOiAibnVtYmVyIiwNCiAgICAgICAgICAgICAgICAgICAgImNoYW5nZSI6IHRoaXMueC5iaW5kKHRoaXMpLA0KICAgICAgICAgICAgICAgICAgICAiZ2V0IjogdGhpcy5nZXRYLmJpbmQodGhpcyksDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAiWSI6IHsNCiAgICAgICAgICAgICAgICAgICAgInR5cGUiOiAibnVtYmVyIiwNCiAgICAgICAgICAgICAgICAgICAgImNoYW5nZSI6IHRoaXMueS5iaW5kKHRoaXMpLA0KICAgICAgICAgICAgICAgICAgICAiZ2V0IjogdGhpcy5nZXRZLmJpbmQodGhpcyksDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAiV2lkdGgiOiB7DQogICAgICAgICAgICAgICAgICAgICJ0eXBlIjogIm51bWJlciIsDQogICAgICAgICAgICAgICAgICAgICJjaGFuZ2UiOiB0aGlzLndpZHRoLmJpbmQodGhpcyksDQogICAgICAgICAgICAgICAgICAgICJnZXQiOiB0aGlzLmdldFdpZHRoLmJpbmQodGhpcyksDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAiSGVpZ2h0Ijogew0KICAgICAgICAgICAgICAgICAgICAidHlwZSI6ICJudW1iZXIiLA0KICAgICAgICAgICAgICAgICAgICAiY2hhbmdlIjogdGhpcy5oZWlnaHQuYmluZCh0aGlzKSwNCiAgICAgICAgICAgICAgICAgICAgImdldCI6IHRoaXMuZ2V0SGVpZ2h0LmJpbmQodGhpcyksDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICBlbHNlIGlmIChlbGVtZW50LnR5cGUgPT0gImVuZW15U3Bhd24iKSB7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgICJfZGVzY3JpcHRvciI6ICJFbmVteSBUeXBlOiAwLTkiLA0KICAgICAgICAgICAgICAgICJFbmVteSBUeXBlIjogew0KICAgICAgICAgICAgICAgICAgICAidHlwZSI6ICJ0ZXh0IiwNCiAgICAgICAgICAgICAgICAgICAgImNoYW5nZSI6IHRoaXMuZW5lbXlUeXBlLmJpbmQodGhpcyksDQogICAgICAgICAgICAgICAgICAgICJnZXQiOiB0aGlzLmdldEVuZW15VHlwZS5iaW5kKHRoaXMpLA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgIl9zZXBhcmF0b3IyIjogIiIsDQogICAgICAgICAgICAgICAgIl9kZXNjcmlwdG9yMyI6ICJTcGF3biBUaW1lb3V0IiwNCiAgICAgICAgICAgICAgICAiU3Bhd24gVGltZW91dCI6IHsNCiAgICAgICAgICAgICAgICAgICAgInR5cGUiOiAibnVtYmVyIiwNCiAgICAgICAgICAgICAgICAgICAgImNoYW5nZSI6IHRoaXMuc3Bhd25UaW1lb3V0LmJpbmQodGhpcyksDQogICAgICAgICAgICAgICAgICAgICJnZXQiOiB0aGlzLmdldFNwYXduVGltZW91dC5iaW5kKHRoaXMpLA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgIl9zZXBhcmF0b3IiOiAiIiwNCiAgICAgICAgICAgICAgICAiX2Rlc2NyaXB0b3IyIjogIkV4YWN0IFBvc2l0aW9uIiwNCiAgICAgICAgICAgICAgICAiWCI6IHsNCiAgICAgICAgICAgICAgICAgICAgInR5cGUiOiAibnVtYmVyIiwNCiAgICAgICAgICAgICAgICAgICAgImNoYW5nZSI6IHRoaXMueEVuZW15LmJpbmQodGhpcyksDQogICAgICAgICAgICAgICAgICAgICJnZXQiOiB0aGlzLmdldFhFbmVteS5iaW5kKHRoaXMpLA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgIlkiOiB7DQogICAgICAgICAgICAgICAgICAgICJ0eXBlIjogIm51bWJlciIsDQogICAgICAgICAgICAgICAgICAgICJjaGFuZ2UiOiB0aGlzLnlFbmVteS5iaW5kKHRoaXMpLA0KICAgICAgICAgICAgICAgICAgICAiZ2V0IjogdGhpcy5nZXRZRW5lbXkuYmluZCh0aGlzKSwNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgZWxzZSB7DQogICAgICAgICAgICByZXR1cm4ge307DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBnZXRFbmVteVR5cGUoKSB7DQogICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQuZGF0YS50eXBlOw0KICAgIH0NCiAgICBlbmVteVR5cGUoZWRpdG9yLCBlbCkgew0KICAgICAgICBlZGl0b3IuZWxlbWVudHNbZWRpdG9yLm5vd0VkaXRpbmddLmRhdGEudHlwZSA9IGVsLnZhbHVlOw0KICAgICAgICBlZGl0b3IucmVsb2FkRWxlbWVudChlZGl0b3Iubm93RWRpdGluZyk7DQogICAgfQ0KDQogICAgZ2V0U3Bhd25UaW1lb3V0KCkgew0KICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LmRhdGEuc3Bhd25UaW1lb3V0Ow0KICAgIH0NCiAgICBzcGF3blRpbWVvdXQoZWRpdG9yLCBlbCkgew0KICAgICAgICBlZGl0b3IuZWxlbWVudHNbZWRpdG9yLm5vd0VkaXRpbmddLmRhdGEuc3Bhd25UaW1lb3V0ID0gZWwudmFsdWU7DQogICAgICAgIGVkaXRvci5yZWxvYWRFbGVtZW50KGVkaXRvci5ub3dFZGl0aW5nKTsNCiAgICB9DQogICAgZ2V0WEVuZW15KCkgew0KICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LnBvcy54ICsgNTsNCiAgICB9DQogICAgeEVuZW15KGVkaXRvciwgZWwpIHsNCiAgICAgICAgZWRpdG9yLmVsZW1lbnRzW2VkaXRvci5ub3dFZGl0aW5nXS5wb3MueCA9IHBhcnNlSW50KGVsLnZhbHVlKSAtIDU7DQogICAgICAgIGVkaXRvci5yZWxvYWRFbGVtZW50KGVkaXRvci5ub3dFZGl0aW5nKTsNCiAgICAgICAgZWRpdG9yLnNldENvbnRlbnRDaGFuZ2VyKCk7DQogICAgfQ0KICAgIGdldFlFbmVteSgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudC5wb3MueSArIDU7DQogICAgfQ0KICAgIHlFbmVteShlZGl0b3IsIGVsKSB7DQogICAgICAgIGVkaXRvci5lbGVtZW50c1tlZGl0b3Iubm93RWRpdGluZ10ucG9zLnkgPSBwYXJzZUludChlbC52YWx1ZSkgLSA1Ow0KICAgICAgICBlZGl0b3IucmVsb2FkRWxlbWVudChlZGl0b3Iubm93RWRpdGluZyk7DQogICAgICAgIGVkaXRvci5zZXRDb250ZW50Q2hhbmdlcigpOw0KICAgIH0NCg0KDQoNCiAgICBnZXRYKCkgew0KICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LnBvcy54Ow0KICAgIH0NCiAgICAvKioNCiAgICAgKiANCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqIEBwYXJhbSB7Kn0gZWwgDQogICAgICovDQogICAgeChlZGl0b3IsIGVsKSB7DQogICAgICAgIGVkaXRvci5lbGVtZW50c1tlZGl0b3Iubm93RWRpdGluZ10ucG9zLnggPSBlbC52YWx1ZTsNCiAgICAgICAgZWRpdG9yLnJlbG9hZEVsZW1lbnQoZWRpdG9yLm5vd0VkaXRpbmcpOw0KICAgICAgICBlZGl0b3Iuc2V0Q29udGVudENoYW5nZXIoKTsNCiAgICB9DQogICAgZ2V0WSgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudC5wb3MueTsNCiAgICB9DQogICAgeShlZGl0b3IsIGVsKSB7DQogICAgICAgIGVkaXRvci5lbGVtZW50c1tlZGl0b3Iubm93RWRpdGluZ10ucG9zLnkgPSBlbC52YWx1ZTsNCiAgICAgICAgZWRpdG9yLnJlbG9hZEVsZW1lbnQoZWRpdG9yLm5vd0VkaXRpbmcpOw0KICAgICAgICBlZGl0b3Iuc2V0Q29udGVudENoYW5nZXIoKTsNCiAgICB9DQogICAgZ2V0V2lkdGgoKSB7DQogICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQuc2l6ZS53aWR0aDsNCiAgICB9DQogICAgd2lkdGgoZWRpdG9yLCBlbCkgew0KICAgICAgICBlZGl0b3IuZWxlbWVudHNbZWRpdG9yLm5vd0VkaXRpbmddLnNpemUud2lkdGggPSBlbC52YWx1ZTsNCiAgICAgICAgZWRpdG9yLnJlbG9hZEVsZW1lbnQoZWRpdG9yLm5vd0VkaXRpbmcpOw0KICAgICAgICBlZGl0b3Iuc2V0Q29udGVudENoYW5nZXIoKTsNCiAgICB9DQogICAgZ2V0SGVpZ2h0KCkgew0KICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50LnNpemUuaGVpZ2h0Ow0KICAgIH0NCiAgICBoZWlnaHQoZWRpdG9yLCBlbCkgew0KICAgICAgICBlZGl0b3IuZWxlbWVudHNbZWRpdG9yLm5vd0VkaXRpbmddLnNpemUuaGVpZ2h0ID0gZWwudmFsdWU7DQogICAgICAgIGVkaXRvci5yZWxvYWRFbGVtZW50KGVkaXRvci5ub3dFZGl0aW5nKTsNCiAgICAgICAgZWRpdG9yLnNldENvbnRlbnRDaGFuZ2VyKCk7DQogICAgfQ0KDQogICAgZ2V0SGl0Ym94VHlwZSgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudC5kYXRhOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqIEBwYXJhbSB7SFRNTElucHV0RWxlbWVudH0gZWxlbWVudCANCiAgICAgKi8NCiAgICBoaXRib3hUeXBlKGVkaXRvciwgY29sb3IpIHsNCiAgICAgICAgZWRpdG9yLmVsZW1lbnRzW2VkaXRvci5ub3dFZGl0aW5nXS5kYXRhID0gY29sb3IudmFsdWU7DQogICAgICAgIC8vdXBkYXRlIGJhY2tncm91bmQgY29sb3INCiAgICAgICAgdmFyIHR5cGVzID0gew0KICAgICAgICAgICAgIldvcmxkIjogIiMwMGZmMDAiLA0KICAgICAgICAgICAgIkZhbGwiOiAiI2ZmMDAwMCIsDQogICAgICAgICAgICAiTmV4dExldmVsIjogIiMwMDAwZmYiLA0KICAgICAgICAgICAgIkdyYWNlIjogIiNmZmZmMDAiLA0KICAgICAgICAgICAgImRlZmF1bHQiOiAiIzAwMDAwMCIsDQogICAgICAgIH0NCiAgICAgICAgZWRpdG9yLmVsZW1lbnRzW2VkaXRvci5ub3dFZGl0aW5nXS5zdHlsaW5nLmJhY2tncm91bmRDb2xvciA9IHR5cGVzW2NvbG9yLnZhbHVlXSB8fCB0eXBlc1siZGVmYXVsdCJdOw0KDQogICAgICAgIGVkaXRvci5yZWxvYWRFbGVtZW50KGVkaXRvci5ub3dFZGl0aW5nKTsNCiAgICB9DQp9KSgpOw==", "file.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiZmlsZSI7DQogICAgfQ0KICAgIGdldFBvcygpIHsNCiAgICAgICAgcmV0dXJuIDA7DQogICAgfQ0KICAgIGdldEZ1bmN0aW9ucygpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICJzYXZlUHJvamVjdCI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuc2F2ZVByb2plY3QuYmluZCh0aGlzKSB9LA0KICAgICAgICAgICAgImNsb3NlUHJvamVjdCI6IHsgInR5cGUiOiAiYnV0dG9uIiwgImNoYW5nZSI6IHRoaXMuY2xvc2VQcm9qZWN0IH0sDQogICAgICAgICAgICAiZXhwb3J0IHRvIGZpbGUiOiB7ICJ0eXBlIjogImJ1dHRvbiIsICJjaGFuZ2UiOiB0aGlzLmV4cG9ydFRvRmlsZS5iaW5kKHRoaXMpIH0sDQogICAgICAgICAgICAiX3NlcGFyYXRvciI6ICIiLA0KICAgICAgICAgICAgInBpeGVsIHJhdGlvIjogeyAidHlwZSI6ICJ0ZXh0IiwgImNoYW5nZSI6IHRoaXMuc2V0UGl4ZWxSYXRpby5iaW5kKHRoaXMpLCAiZ2V0IjogdGhpcy5nZXRQaXhlbFJhdGlvIH0NCiAgICAgICAgfQ0KICAgIH0NCiAgICAvKioNCiAgICAgKiANCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIGFzeW5jIHNhdmVQcm9qZWN0KGVkaXRvcikgew0KICAgICAgICB2YXIgeCA9IHRoaXMuZ2VuZXJhdGVTYXZlRmlsZShlZGl0b3IpOw0KICAgICAgICBTeXN0ZW1GaWxlU3lzdGVtLnNldEZpbGVTdHJpbmcoZWRpdG9yLnByb2plY3RQYXRoLCBKU09OLnN0cmluZ2lmeSh4KSk7DQogICAgfQ0KICAgIGFzeW5jIGV4cG9ydFRvRmlsZShlZGl0b3IpIHsNCiAgICAgICAgdmFyIHggPSB0aGlzLmdlbmVyYXRlU2F2ZUZpbGUoZWRpdG9yKTsNCiAgICAgICAgdmFyIG91dCA9IHsNCiAgICAgICAgICAgICJGRU5TVEVSR1LDllNTRSI6IFt4LnBpeGVsUmF0aW8uc3BsaXQoIjoiKV0sDQogICAgICAgICAgICAiSElUQk9YRVMiOiBbXSwNCiAgICAgICAgICAgICJFTkVNWVNTUEFXTiI6IFtdLA0KICAgICAgICAgICAgIklNQUdFUEFUSFMiOiBbDQogICAgICAgICAgICAgICAgWyJiYWNrZ3JvdW5kIiwgIm1hcHMvbWFwMS9iYWNrZ3JvdW5kLmpwZyJdLA0KICAgICAgICAgICAgICAgIFsiZm9yZWdyb3VuZCIsICJtYXBzL21hcDEvZm9yZWdyb3VuZC5wbmciXQ0KICAgICAgICAgICAgXQ0KICAgICAgICB9DQogICAgICAgIGNvbnNvbGUubG9nKHgpOw0KICAgICAgICBjb25zb2xlLmxvZyh4LnBhZ2VzWzBdLmVsZW1lbnRzKTsNCiAgICAgICAgZm9yICh2YXIgeSBvZiB4LnBhZ2VzWzBdLmVsZW1lbnRzKSB7DQogICAgICAgICAgICBpZiAoeS50eXBlID09ICJoaXRib3giKSB7DQogICAgICAgICAgICAgICAgb3V0LkhJVEJPWEVTLnB1c2goW3kucG9zLngsIHkucG9zLnksIHkuc2l6ZS53aWR0aCwgeS5zaXplLmhlaWdodCwgeS5kYXRhXSk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZiAoeS50eXBlID09ICJlbmVteVNwYXduIikgew0KICAgICAgICAgICAgICAgIG91dC5FTkVNWVNTUEFXTi5wdXNoKFt5LnBvcy54ICsgNSwgeS5wb3MueSArIDUsIHkuZGF0YS5zcGF3blRpbWVvdXQsIHkuZGF0YS50eXBlXSk7DQogICAgICAgICAgICB9DQogICAgICAgIH07DQoNCiAgICAgICAgLy9nZW4gdG8gZGF0YQ0KICAgICAgICB2YXIgb3V0c3RyID0gIiI7DQogICAgICAgIGZvciAodmFyIHggaW4gb3V0KSB7DQogICAgICAgICAgICBvdXRzdHIgKz0gIiMiICsgeCArICJcbiI7DQogICAgICAgICAgICBmb3IgKHZhciB5IG9mIG91dFt4XSkgew0KICAgICAgICAgICAgICAgIG91dHN0ciArPSB5LmpvaW4oIiwiKSArICJcbiI7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBvdXRzdHIgKz0gIlxuIjsNCiAgICAgICAgfQ0KDQogICAgICAgIGNvbnNvbGUubG9nKG91dHN0cik7DQoNCiAgICAgICAgLy9kb3dubG9hZCB3aXRoIHN0YW5kYXJkIGh0bWwgZG93bmxvYWQNCiAgICAgICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7DQogICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdocmVmJywgJ2RhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04LCcgKyBlbmNvZGVVUklDb21wb25lbnQob3V0c3RyKSk7DQogICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdkb3dubG9hZCcsICJtYXAudHh0Iik7DQogICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJzsNCiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChlbGVtZW50KTsNCiAgICAgICAgZWxlbWVudC5jbGljaygpOw0KICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGVsZW1lbnQpOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiANCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0gZWRpdG9yIA0KICAgICAqLw0KICAgIGFzeW5jIGNsb3NlUHJvamVjdChlZGl0b3IpIHsNCiAgICAgICAgZWRpdG9yLmd1aS5zaG93KCJwcm9qZWN0Q2hvb3NlIik7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogDQogICAgICogQHBhcmFtIHtleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3J9IGVkaXRvcg0KICAgICAqLw0KICAgIGdlbmVyYXRlU2F2ZUZpbGUoZWRpdG9yKSB7DQogICAgICAgIHJldHVybiBlZGl0b3Iuc2F2ZUZpbGU7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtIHtleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3J9IGVkaXRvcg0KICAgICAqLw0KICAgIHNldFBpeGVsUmF0aW8oZWRpdG9yLCBlbGVtZW50KSB7DQogICAgICAgIGVkaXRvci5ndWkucHJvamVjdC5waXhlbFJhdGlvID0gZWxlbWVudC52YWx1ZTsNCiAgICAgICAgZWRpdG9yLmd1aS5sb2FkUHJvamVjdFNldHRpbmdzKCk7DQogICAgfQ0KICAgIC8qKg0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9yaWJib259IHJpYmJvbg0KICAgICAqLw0KICAgIGdldFBpeGVsUmF0aW8ocmliYm9uKSB7DQogICAgICAgIHJldHVybiByaWJib24uZWRpdG9yLmd1aS5wcm9qZWN0LnBpeGVsUmF0aW87DQogICAgfQ0KfSkoKTs=", "view.js": "bmV3IChjbGFzcyB7DQogICAgY29uc3RydWN0b3IoKSB7DQogICAgICAgIHRoaXMuZWxlbWVudCA9IG51bGw7DQogICAgfQ0KICAgIGdldE5hbWUoKSB7DQogICAgICAgIHJldHVybiAiVmlldyI7DQogICAgfQ0KICAgIGdldFBvcygpIHsNCiAgICAgICAgcmV0dXJuIDM1Ow0KICAgIH0NCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge3t0eXBlOnN0cmluZywgZGF0YTpzdHJpbmd8YW55LCBwb3M6e3g6bnVtYmVyLHk6bnVtYmVyfSwgc2l6ZTp7d2lkdGg6bnVtYmVyLGhlaWdodDpudW1iZXJ9LCBzdHlsaW5nOmFueX19IGVsZW1lbnQNCiAgICAgKi8NCiAgICBnZXRGdW5jdGlvbnMoZWxlbWVudCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgIk92ZXJsYXkgb3V0bGluZSI6IHsNCiAgICAgICAgICAgICAgICAidHlwZSI6ICJjaGVja2JveCIsICJjaGFuZ2UiOiB0aGlzLnNldG91dGxpbmUuYmluZCh0aGlzKSwgImdldCI6IHRoaXMuZ2V0b3V0bGluZS5iaW5kKHRoaXMpDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgIkFsaWduIExpbmVzIjogew0KICAgICAgICAgICAgICAgICJ0eXBlIjogImNoZWNrYm94IiwgImNoYW5nZSI6IHRoaXMuc2V0VmlzaWJsZUFsaWduTGluZS5iaW5kKHRoaXMpLCAiZ2V0IjogdGhpcy5nZXRWaXNpYmxlQWxpZ25MaW5lLmJpbmQodGhpcykNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7ZXhpdE1lX2d1aV9yaWJib259IGVkaXRvciANCiAgICAgKiBAcmV0dXJucyANCiAgICAgKi8NCiAgICBnZXRvdXRsaW5lKGVkaXRvcikgew0KICAgICAgICByZXR1cm4gZWRpdG9yLmVkaXRvci5vdmVybGF5T3V0bGluZTsNCiAgICB9DQoNCiAgICBzZXRvdXRsaW5lKGVkaXRvciwgZWxlbWVudCkgew0KICAgICAgICBlZGl0b3Iub3ZlcmxheU91dGxpbmUgPSBlbGVtZW50LmNoZWNrZWQ7DQogICAgICAgIGVkaXRvci51cGRhdGVPdmVybGF5T3V0bGluZSgpOw0KICAgIH0NCg0KICAgIHNldFZpc2libGVBbGlnbkxpbmUoZWRpdG9yLCBlbGVtZW50KSB7DQogICAgICAgIGVkaXRvci5zZXRWaXNpYmxlQWxpZ25MaW5lKGVsZW1lbnQuY2hlY2tlZCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogDQogICAgICogQHBhcmFtIHtleGl0TWVfZ3VpX3JpYmJvbn0gZWRpdG9yIA0KICAgICAqIEByZXR1cm5zIA0KICAgICAqLw0KICAgIGdldFZpc2libGVBbGlnbkxpbmUoZWRpdG9yKSB7DQogICAgICAgIHJldHVybiBlZGl0b3IuZWRpdG9yLmFsaWduTGluZXNWaXNpYmxlOw0KICAgIH0NCn0pKCk7"}, "ribbon.js": "", "util": {"projectEditorUtil.js": "Y2xhc3MgZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX3V0aWwgew0KICAgIC8qKg0KICAgICAqIEBwYXJhbSB7e1tpZDpzdHJpbmddOmV4aXRNZV9ndWlfcHJvamVjdEVkaXRvcl9lbGVtZW50fX0gZWxlbWVudHMNCiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfQ0KICAgICAqLw0KICAgIGdldExheWVyTWF4KGVsZW1lbnRzKSB7DQogICAgICAgIHZhciBtYXggPSAtMTsNCiAgICAgICAgZm9yICh2YXIgeCBvZiBPYmplY3QudmFsdWVzKGVsZW1lbnRzKSkgew0KICAgICAgICAgICAgaWYgKHgubGF5ZXIgPiBtYXgpIHsNCiAgICAgICAgICAgICAgICBtYXggPSB4LmxheWVyOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIHJldHVybiBtYXg7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogc29ydHMgZWxlbWVudHMgYnkgbGF5ZXINCiAgICAgKiBAcGFyYW0ge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcl9lbGVtZW50W119IGVsZW1lbnRzIA0KICAgICAqIEByZXR1cm5zIHtleGl0TWVfZ3VpX3Byb2plY3RFZGl0b3JfZWxlbWVudFtdfQ0KICAgICAqLw0KICAgIHNvcnRMYXllcnMoZWxlbWVudHMpIHsNCiAgICAgICAgcmV0dXJuIGVsZW1lbnRzLnNvcnQoKGEsIGIpID0+IHsNCiAgICAgICAgICAgIHJldHVybiBhLmxheWVyIC0gYi5sYXllcjsNCiAgICAgICAgfSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogQHBhcmFtIHt7W2lkOnN0cmluZ106ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX2VsZW1lbnR9fSBlbGVtZW50cw0KICAgICAqIEBwYXJhbSB7c3RyaW5nfSBpZA0KICAgICAqIEBwYXJhbSB7bnVtYmVyfSBsYXllcg0KICAgICAqIEByZXR1cm5zIHt7W2lkOnN0cmluZ106ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX2VsZW1lbnR9fQ0KICAgICAqLw0KICAgIHNldExheWVyKGVsZW1lbnRzLCBpZCwgbGF5ZXIpIHsNCiAgICAgICAgZm9yICh2YXIgeCBvZiBPYmplY3Qua2V5cyhlbGVtZW50cykpIHsNCiAgICAgICAgICAgIGlmIChlbGVtZW50c1t4XS5sYXllciA+PSBsYXllcikgew0KICAgICAgICAgICAgICAgIGVsZW1lbnRzW3hdLmxheWVyKys7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgZWxlbWVudHNbaWRdLmxheWVyID0gbGF5ZXI7DQogICAgICAgIHJldHVybiBlbGVtZW50czsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBtYWtlcyBzdXJlIHRoYXQgdGhlIGxheWVycyBhcmVudCBzcGFjZWQgb3V0DQogICAgICogQHBhcmFtIHt7W2lkOnN0cmluZ106ZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX2VsZW1lbnR9fSBlbGVtZW50cyANCiAgICAgKiBAcmV0dXJucyB7e1tpZDpzdHJpbmddOmV4aXRNZV9ndWlfcHJvamVjdEVkaXRvcl9lbGVtZW50fX0NCiAgICAgKi8NCiAgICBjYXBMYXllcnMoZWxlbWVudHMpIHsNCiAgICAgICAgdmFyIGxheWVycyA9IFtdOw0KICAgICAgICB2YXIgZSA9IHt9Ow0KICAgICAgICBmb3IgKHZhciB4IG9mIE9iamVjdC52YWx1ZXMoZWxlbWVudHMpKSB7DQogICAgICAgICAgICBsYXllcnMucHVzaCh4LmxheWVyKTsNCiAgICAgICAgICAgIGVbeC5sYXllcl0gPSB4LmlkOw0KICAgICAgICB9DQoNCiAgICAgICAgbGF5ZXJzLnNvcnQoKGEsIGIpID0+IHsNCiAgICAgICAgICAgIHJldHVybiBhIC0gYjsNCiAgICAgICAgfSk7DQoNCiAgICAgICAgdmFyIGkgPSAwOw0KICAgICAgICBmb3IgKHZhciB4IG9mIGxheWVycykgew0KICAgICAgICAgICAgZWxlbWVudHNbZVt4XV0ubGF5ZXIgPSBpOw0KICAgICAgICAgICAgaSsrOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiBlbGVtZW50czsNCiAgICB9DQogICAgZGV0ZWN0Q29sbGlzaW9ucyhlbGVtZW50cykgew0KICAgICAgICB2YXIgbGF5ZXJzID0gW107DQogICAgICAgIGZvciAodmFyIHggb2YgT2JqZWN0LnZhbHVlcyhlbGVtZW50cykpIHsNCiAgICAgICAgICAgIGlmIChsYXllcnMuaW5jbHVkZXMoeC5sYXllcikpIHsNCiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oImNvbGxpc2lvbiBkZXRlY3RlZCIpOw0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHgpOw0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBsYXllcnMucHVzaCh4LmxheWVyKTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICB9DQp9DQpuZXcgZXhpdE1lX2d1aV9wcm9qZWN0RWRpdG9yX3V0aWwoKTs="}}, "gui.js": "Y2xhc3MgZXhpdE1lX2d1aSBleHRlbmRzIFN5c3RlbS5wcm9ncmFtLmRlZmF1bHQgew0KICAgIC8qKg0KICAgICAqIA0KICAgICAqIEBwYXJhbSB7SHRtbFdpbmRvd30gd2luZG93IA0KICAgICAqLw0KICAgIGFzeW5jIGluaXQod2luZG93KSB7DQogICAgICAgIHRoaXMuZ2V0UGF0aCA9ICgpID0+IHsgfTsNCiAgICAgICAgdGhpcy50eXBlcyA9IFsicHJvamVjdENob29zZSIsICJwcm9qZWN0RWRpdCJdOw0KICAgICAgICB0aGlzLndpbmRvdyA9IHdpbmRvdzsNCg0KICAgICAgICB0aGlzLmxvYWRQcm9qZWN0ID0gKG5hbWUpID0+IHsgfTsNCiAgICAgICAgdGhpcy5zaG93KCJwcm9qZWN0Q2hvb3NlIik7DQoNCiAgICAgICAgdGhpcy5wcm9qZWN0ID0gbnVsbDsNCiAgICAgICAgdGhpcy5wYWdlID0gMDsNCg0KICAgICAgICAvKioNCiAgICAgICAgICogQHR5cGUge2V4aXRNZV9ndWlfcHJvamVjdEVkaXRvcn0NCiAgICAgICAgICovDQogICAgICAgIHRoaXMucHJvamVjdEVkaXRvciA9IGF3YWl0IFN5c3RlbS5wcm9ncmFtLnJ1blByb2dyYW0odGhpcy5QQVRILmZvbGRlcigpICsgIi9ndWkvcHJvamVjdEVkaXRvci5qcyIsIFt0aGlzLndpbmRvdywgdGhpc10pOw0KICAgICAgICB0aGlzLnByb2plY3RFZGl0b3IuZ2V0UGF0aCA9IHRoaXMuZ2V0UGF0aC5iaW5kKHRoaXMpOw0KICAgICAgICB0aGlzLnByb2plY3RFZGl0b3IuZ2V0U2F2ZUZpbGUgPSB0aGlzLmdldFNhdmVGaWxlLmJpbmQodGhpcyk7DQogICAgICAgIHRoaXMucHJvamVjdEVkaXRvci5zZXRQYWdlID0gdGhpcy5zZXRQYWdlLmJpbmQodGhpcyk7DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIEB0eXBlIHtleGl0TWVfZ3VpX3JpYmJvbn0NCiAgICAgICAgICovDQogICAgICAgIHRoaXMucmliYm9uID0gYXdhaXQgU3lzdGVtLnByb2dyYW0ucnVuUHJvZ3JhbSh0aGlzLlBBVEguZm9sZGVyKCkgKyAiL2d1aS9yaWJib24uanMiLCBbdGhpcy53aW5kb3csIHRoaXMucHJvamVjdEVkaXRvcl0pOw0KICAgICAgICAvKioNCiAgICAgICAgICogQHR5cGUge2V4aXRNZV9ndWlfYm90dG9tQ29udHJvbGx9DQogICAgICAgICAqLw0KICAgICAgICB0aGlzLmJvdHRvbUNvbnRyb2xsID0gYXdhaXQgU3lzdGVtLnByb2dyYW0ucnVuUHJvZ3JhbSh0aGlzLlBBVEguZm9sZGVyKCkgKyAiL2d1aS9ib3R0b21Db250cm9sbC5qcyIsIFt0aGlzLndpbmRvdywgdGhpcy5wcm9qZWN0RWRpdG9yXSk7DQoNCiAgICAgICAgdGhpcy5wcm9qZWN0RWRpdG9yLnNlbGVjdCA9IHRoaXMucmliYm9uLnNldEVsZW1lbnQuYmluZCh0aGlzLnJpYmJvbik7DQogICAgfQ0KDQogICAgYXN5bmMgc2hvdyh0eXApIHsNCiAgICAgICAgZm9yICh2YXIgeCBvZiB0aGlzLnR5cGVzKSB7DQogICAgICAgICAgICBpZiAoeCA9PSB0eXApIHsNCiAgICAgICAgICAgICAgICAoYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQodHlwKSkuc3R5bGUuZGlzcGxheSA9ICIiOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAoYXdhaXQgdGhpcy53aW5kb3cuZ2V0SHRtbEVsZW1lbnQoeCkpLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBwcm9qZWN0cyANCiAgICAgKiBAcmV0dXJucyANCiAgICAgKi8NCiAgICBhc3luYyBzZXRQcm9qZWN0cyhwcm9qZWN0cykgew0KICAgICAgICB2YXIgYXZhaWxQcm9qZWN0cyA9IGF3YWl0IHRoaXMud2luZG93LmdldEh0bWxFbGVtZW50KCJhdmFpbFByb2plY3RzIik7DQogICAgICAgIGF2YWlsUHJvamVjdHMuaW5uZXJIVE1MID0gIiI7DQoNCiAgICAgICAgaWYgKHByb2plY3RzLmxlbmd0aCA9PSAwKSB7DQogICAgICAgICAgICBhdmFpbFByb2plY3RzLmlubmVySFRNTCA9ICI8cD48aT5ObyBwcm9qZWN0cyBmb3VuZDwvaT48L3A+IjsNCiAgICAgICAgICAgIHJldHVybg0KICAgICAgICB9DQoNCiAgICAgICAgZm9yICh2YXIgeCBvZiBwcm9qZWN0cykgew0KICAgICAgICAgICAgdmFyIHByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJidXR0b24iKTsNCiAgICAgICAgICAgIHByb2plY3QuY2xhc3NOYW1lID0gInByb2plY3QiOw0KICAgICAgICAgICAgcHJvamVjdC5pbm5lclRleHQgPSB4Lm5hbWU7DQogICAgICAgICAgICBwcm9qZWN0Lm9uY2xpY2sgPSAoKG5hbWUpID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLmxvYWRQcm9qZWN0KG5hbWUpOw0KICAgICAgICAgICAgfSkuYmluZCh0aGlzLCB4Lm5hbWUpDQogICAgICAgICAgICBhdmFpbFByb2plY3RzLmFwcGVuZENoaWxkKHByb2plY3QpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgYXN5bmMgbG9hZEludG9Qcm9qZWN0KHBhdGgpIHsNCiAgICAgICAgdGhpcy5wcm9qZWN0ID0gYXdhaXQgU3lzdGVtRmlsZVN5c3RlbS5nZXRGaWxlSnNvbihwYXRoKTsNCiAgICAgICAgdGhpcy5wYWdlID0gMDsNCiAgICAgICAgYXdhaXQgdGhpcy5wcm9qZWN0RWRpdG9yLmxvYWRQcm9qZWN0KHRoaXMucHJvamVjdC5wYWdlc1t0aGlzLnBhZ2VdLmVsZW1lbnRzKTsNCiAgICAgICAgdGhpcy5sb2FkUHJvamVjdFNldHRpbmdzKCk7DQogICAgfQ0KDQogICAgYXN5bmMgbG9hZFByb2plY3RTZXR0aW5ncygpIHsNCiAgICAgICAgdGhpcy5wcm9qZWN0RWRpdG9yLnNldFBpeGVsUmF0aW8odGhpcy5wcm9qZWN0LnBpeGVsUmF0aW8pOw0KICAgIH0NCg0KICAgIGdldFNhdmVGaWxlKCkgew0KICAgICAgICByZXR1cm4gdGhpcy5wcm9qZWN0Ow0KICAgIH0NCg0KICAgIHNldFBhZ2UoZWxlbWVudHMpIHsNCiAgICAgICAgdmFyIG91dCA9IFtdOw0KICAgICAgICBmb3IgKHZhciB4IG9mIE9iamVjdC52YWx1ZXMoZWxlbWVudHMpKSB7DQogICAgICAgICAgICB2YXIgeCA9IE9iamVjdC5hc3NpZ24oe30sIHgpOw0KICAgICAgICAgICAgZGVsZXRlIHhbImlkIl07DQogICAgICAgICAgICBvdXQucHVzaCh4KTsNCiAgICAgICAgfQ0KDQogICAgICAgIHRoaXMucHJvamVjdC5wYWdlc1t0aGlzLnBhZ2VdLmVsZW1lbnRzID0gb3V0Ow0KICAgIH0NCn0NCm5ldyBleGl0TWVfZ3VpKCk7", "html.html": "PGRpdiBlbGVtZW50PSJwcm9qZWN0Q2hvb3NlIj4NCiAgICA8aDE+Q2hvb3NlIGEgbWFwIHRvIGVkaXQ8L2gxPg0KICAgIDxkaXYgZWxlbWVudD0iYXZhaWxQcm9qZWN0cyI+DQoNCiAgICA8L2Rpdj4NCiAgICA8aHI+DQogICAgPGJ1dHRvbiBlbGVtZW50PSJuZXdQcm9qZWN0Ij5OZXcgTWFwPC9idXR0b24+DQo8L2Rpdj4NCjxkaXYgZWxlbWVudD0icHJvamVjdEVkaXQiPg0KICAgIDxkaXYgZWxlbWVudD0icmliYm9uQ29udHJvbGxCYXIiPg0KICAgICAgICA8ZGl2IGVsZW1lbnQ9InRvcEJhciI+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8ZGl2IGVsZW1lbnQ9InRvb2xTZWxlY3QiPg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCg0KICAgIDxkaXYgZWxlbWVudD0iZWRpdG9yIj4NCiAgICAgICAgPGRpdiBlbGVtZW50PSJlZGl0b3JSaWdodFNpZGUiPg0KICAgICAgICAgICAgPGRpdiBlbGVtZW50PSJwcm9qZWN0Q29udGVudFdyYXBlciI+DQogICAgICAgICAgICAgICAgPGRpdiBlbGVtZW50PSJwcm9qZWN0Q29udGVudElubmVyV3JhcGVyIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBlbGVtZW50PSJwcm9qZWN0Q29udGVudCIgc3R5bGU9IndpZHRoOiA1MDBweDsgaGVpZ2h0OiA1MDBweDsiPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBlbGVtZW50PSJjb250ZW50Q2hhbmdlciIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDt3aWR0aDogMTAwJTtib3JkZXI6IDA7aGVpZ2h0OiAxMDAlO2Rpc3BsYXk6IG5vbmU7cGFkZGluZzogMDtyZXNpemU6IG5vbmU7Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ9ImNvbnRlbnRDaGFuZ2VyQ2hhbmdlVGV4dCI+VWZmPC90ZXh0YXJlYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZWxlbWVudD0iY29udGVudENoYW5nZXJCb3JkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZWxlbWVudD0iY29udGVudENoYW5nZXJCb3JkZXJQYXJ0IiBtb3ZlbWVudFR5cGU9IjAiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZWxlbWVudD0iY29udGVudENoYW5nZXJCb3JkZXJQYXJ0IiBtb3ZlbWVudFR5cGU9IjEiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZWxlbWVudD0iY29udGVudENoYW5nZXJCb3JkZXJQYXJ0IiBtb3ZlbWVudFR5cGU9IjIiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZWxlbWVudD0iY29udGVudENoYW5nZXJCb3JkZXJQYXJ0IiBtb3ZlbWVudFR5cGU9IjMiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiBub25lOyI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGVsZW1lbnQ9ImFsaWduTGluZUhvcml6b250YWwiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZWxlbWVudD0iYWxpZ25MaW5lVmVydGljYWwiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZWxlbWVudD0iYWxsQWxpZ25MaW5lcyIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBlbGVtZW50PSJvdXRsaW5lT3ZlcmxheSI+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8ZGl2IGVsZW1lbnQ9ImJvdHRvbUNvbnRyb2xsIj4NCiAgICAgICAgICAgICAgICA8cD5ib3R0b20gY29udHJvbGw8L3A+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQo8L2Rpdj4=", "install.js": "YXN5bmMgZnVuY3Rpb24gcnVuKCkgew0KICAgIGF3YWl0IFN5c3RlbS5vcHRpb25zLmFkZFZhbHVlKCJwcm9ncmFtcyIsICJwaXhlbFJpbmdfdG9IYXJkKClfZ2FtZVRlYW1fbGV2ZWxFZGl0b3IiLCB7ICJwYXRoIjogImMvcHJvZ3JhbXMvcGl4ZWxSaW5nX3RvSGFyZCgpX2dhbWVUZWFtX2xldmVsRWRpdG9yL21haW4uanMiLCAibmFtZSI6ICJFeGl0IEdhbWUgVG9vbGtpdCIsICJydW4iOiAiYy9wcm9ncmFtcy9waXhlbFJpbmdfdG9IYXJkKClfZ2FtZVRlYW1fbGV2ZWxFZGl0b3IvcnVuLmpzIiB9LCB0cnVlKTsNCiAgICBTeXN0ZW1IdG1sLnVwZGF0ZVN0YXJ0bWVudSgpDQoNCiAgICAvL2Rlc2t0b3Agc2hvcnRjdXQNCiAgICBpZiAoIWF3YWl0IFN5c3RlbUh0bWwuZGVza3RvcC5leGlzdHNMaW5rKCJjL3Byb2dyYW1zL3BpeGVsUmluZ190b0hhcmQoKV9nYW1lVGVhbV9sZXZlbEVkaXRvci9ydW4uanMiKSl7DQogICAgICAgIGF3YWl0IFN5c3RlbUh0bWwuZGVza3RvcC5hZGRMaW5rKCJjL3Byb2dyYW1zL3BpeGVsUmluZ190b0hhcmQoKV9nYW1lVGVhbV9sZXZlbEVkaXRvci9ydW4uanMiLCAiRXhpdCBHYW1lIFRvb2xraXQiLCAiYy9wcm9ncmFtcy9waXhlbFJpbmdfdG9IYXJkKClfZ2FtZVRlYW1fbGV2ZWxFZGl0b3IvbG9nby53ZWJwIik7DQogICAgfQ0KICAgIHJldHVybiB0cnVlOw0KfQ0KcnVuKCk7", "installLocation.dat": "Yy9wcm9ncmFtcy9waXhlbFJpbmdfdG9IYXJkKClfZ2FtZVRlYW1fbGV2ZWxFZGl0b3I=", "main.js": "", "projects": {"level.json": "ew0KICAicGFnZXMiOiBbDQogICAgew0KICAgICAgImVsZW1lbnRzIjogWw0KICAgICAgICB7DQogICAgICAgICAgInR5cGUiOiAidGV4dCIsDQogICAgICAgICAgImRhdGEiOiAiVGhpcyBpcyBhIHRleHRibG9jayIsDQogICAgICAgICAgInBvcyI6IHsNCiAgICAgICAgICAgICJ4IjogNzAsDQogICAgICAgICAgICAieSI6IDQ3DQogICAgICAgICAgfSwNCiAgICAgICAgICAic2l6ZSI6IHsNCiAgICAgICAgICAgICJ3aWR0aCI6IDMzNSwNCiAgICAgICAgICAgICJoZWlnaHQiOiA0Ng0KICAgICAgICAgIH0sDQogICAgICAgICAgInN0eWxpbmciOiB7DQogICAgICAgICAgICAiZm9udFNpemUiOiAiMzAiLA0KICAgICAgICAgICAgImZvbnRGYW1pbHkiOiAiQXJpYWwiLA0KICAgICAgICAgICAgImNvbG9yIjogIiMwMDdiZmZmZiIsDQogICAgICAgICAgICAiYmFja2dyb3VuZENvbG9yIjogIiNmYTAwMDBmZiIsDQogICAgICAgICAgICAiYm9yZGVyIjogIjEiLA0KICAgICAgICAgICAgImJvcmRlckNvbG9yIjogIiMwMDAwMDBmZiINCiAgICAgICAgICB9LA0KICAgICAgICAgICJsYXllciI6IDENCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgICJ0eXBlIjogInRleHQiLA0KICAgICAgICAgICJkYXRhIjogIk5JQ0UiLA0KICAgICAgICAgICJwb3MiOiB7DQogICAgICAgICAgICAieCI6IDUwLA0KICAgICAgICAgICAgInkiOiAzMTANCiAgICAgICAgICB9LA0KICAgICAgICAgICJzaXplIjogew0KICAgICAgICAgICAgIndpZHRoIjogMTIzLA0KICAgICAgICAgICAgImhlaWdodCI6IDQ1DQogICAgICAgICAgfSwNCiAgICAgICAgICAic3R5bGluZyI6IHsNCiAgICAgICAgICAgICJmb250U2l6ZSI6IDQwLA0KICAgICAgICAgICAgImZvbnRGYW1pbHkiOiAiQXJpYWwiLA0KICAgICAgICAgICAgImNvbG9yIjogIiMwMDAwMDBmZiIsDQogICAgICAgICAgICAiYmFja2dyb3VuZENvbG9yIjogIiMwMDAwMDAwMCIsDQogICAgICAgICAgICAiYm9yZGVyIjogIjEiLA0KICAgICAgICAgICAgImJvcmRlckNvbG9yIjogIiMwMDAwMDBmZiINCiAgICAgICAgICB9LA0KICAgICAgICAgICJsYXllciI6IDINCiAgICAgICAgfQ0KICAgICAgXSwNCiAgICAgICJiYWNrZ3JvdW5kIjogew0KICAgICAgICAidHlwZSI6ICJjb2xvciIsDQogICAgICAgICJjb2xvciI6ICIjZmZmZmZmZmYiDQogICAgICB9DQogICAgfQ0KICBdLA0KICAicGl4ZWxSYXRpbyI6ICI3MDA6Mzk0Ig0KfQ=="}, "projects.json": "Ww0KXQ==", "run.js": "U3lzdGVtLnByb2dyYW0ucnVuUHJvZ3JhbShQQVRILmZvbGRlcigpICsgIi9tYWluLmpzIik=", "style.css": ""}